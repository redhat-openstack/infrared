{
  "comments": [
    {
      "key": {
        "uuid": "777c59a8_e982531d",
        "filename": "plugins/tripleo-overcloud/roles/containers/prepare-templates/tasks/build/patch_images.yml",
        "patchSetId": 5
      },
      "lineNbr": 56,
      "author": {
        "id": 1004788
      },
      "writtenOn": "2020-07-22T12:00:02Z",
      "side": 1,
      "message": "?",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 56,
        "endChar": 42
      },
      "revId": "a6e5b533ce816a65f3454bef3eaf9b642e3ed73f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "596b0e13_edb2fb3c",
        "filename": "plugins/tripleo-overcloud/roles/containers/prepare-templates/tasks/build/patch_images.yml",
        "patchSetId": 5
      },
      "lineNbr": 56,
      "author": {
        "id": 1017622
      },
      "writtenOn": "2020-07-22T13:45:46Z",
      "side": 1,
      "message": "Yeah, I know, but look at the loop in the next task. If I am not wrong, it has never worked correctly because (skip_container_images_patching | bool) was false during the first iteration.\nWhen that value is initialized to false, that loop makes no sense:  skip_container_images_patching will always end up being false.\nIt only makes sense it skip_container_images_patching is initialized to true.\n\nDoes this make sense to you?",
      "parentUuid": "777c59a8_e982531d",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 56,
        "endChar": 42
      },
      "revId": "a6e5b533ce816a65f3454bef3eaf9b642e3ed73f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2870bb1c_e1170f8a",
        "filename": "plugins/tripleo-overcloud/roles/containers/prepare-templates/tasks/build/patch_images.yml",
        "patchSetId": 5
      },
      "lineNbr": 56,
      "author": {
        "id": 1004788
      },
      "writtenOn": "2020-07-22T20:34:59Z",
      "side": 1,
      "message": "But then why to have it in the first place? why not to remove this line and have this conditional?:\n\nskip_container_images_patching: \"{%- if item not in not_containerized_rpms -%} False {%- else -%} True {%- endif -%}\"\n\nSide note: I believe the next task might cause some bugs since it runs a loop and if the last item is in not_containerized_rpms it will skip patching although others RPMs might be in containers...but a separate discussion probably",
      "parentUuid": "596b0e13_edb2fb3c",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 56,
        "endChar": 42
      },
      "revId": "a6e5b533ce816a65f3454bef3eaf9b642e3ed73f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4721cdc7_7f50558d",
        "filename": "plugins/tripleo-overcloud/roles/containers/prepare-templates/tasks/build/patch_images.yml",
        "patchSetId": 5
      },
      "lineNbr": 56,
      "author": {
        "id": 1017622
      },
      "writtenOn": "2020-07-23T06:35:00Z",
      "side": 1,
      "message": "you cannot use item to initialize skip_container_images_patching before the loop because item values are assigned during the loop.\n\nRegarding your side note, the loop is a complicated method to do something like this:\nskip_container_images_patching \u003d all(item in not_containerized_rpms for item in patched_rpms_packages_shell.stdout_lines)\n\nThe intention of the loop is that once skip_container_images_patching is false, it will never be true again. It makes sense (once an rpm is containerized, container patching should not be skipped). But it\u0027ll only work if skip_container_images_patching is initialized to true.",
      "parentUuid": "2870bb1c_e1170f8a",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 56,
        "endChar": 42
      },
      "revId": "a6e5b533ce816a65f3454bef3eaf9b642e3ed73f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}