{
  "comments": [
    {
      "key": {
        "uuid": "d485fc76_57b347d5",
        "filename": "docs/source/plugins.rst",
        "patchSetId": 6
      },
      "lineNbr": 142,
      "author": {
        "id": 1004057
      },
      "writtenOn": "2017-04-23T11:20:44Z",
      "side": 1,
      "message": "not needed",
      "range": {
        "startLine": 142,
        "startChar": 66,
        "endLine": 142,
        "endChar": 70
      },
      "revId": "fe25863916dd56270cd58b1ea983eb5acb07499d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b0d9847d_7e24e9f3",
        "filename": "docs/source/plugins.rst",
        "patchSetId": 6
      },
      "lineNbr": 147,
      "author": {
        "id": 1004057
      },
      "writtenOn": "2017-04-23T11:20:44Z",
      "side": 1,
      "message": "the",
      "range": {
        "startLine": 147,
        "startChar": 7,
        "endLine": 147,
        "endChar": 11
      },
      "revId": "fe25863916dd56270cd58b1ea983eb5acb07499d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cc4805e6_fc321422",
        "filename": "docs/source/plugins.rst",
        "patchSetId": 6
      },
      "lineNbr": 168,
      "author": {
        "id": 1004057
      },
      "writtenOn": "2017-04-23T11:20:44Z",
      "side": 1,
      "message": "Please fix indentation",
      "range": {
        "startLine": 157,
        "startChar": 8,
        "endLine": 168,
        "endChar": 45
      },
      "revId": "fe25863916dd56270cd58b1ea983eb5acb07499d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1d32d368_e625e7dc",
        "filename": "docs/source/plugins.rst",
        "patchSetId": 6
      },
      "lineNbr": 182,
      "author": {
        "id": 1004057
      },
      "writtenOn": "2017-04-23T11:20:44Z",
      "side": 1,
      "message": "not needed",
      "range": {
        "startLine": 182,
        "startChar": 46,
        "endLine": 182,
        "endChar": 50
      },
      "revId": "fe25863916dd56270cd58b1ea983eb5acb07499d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a8f1e5a9_e6931efe",
        "filename": "docs/source/plugins.rst",
        "patchSetId": 6
      },
      "lineNbr": 182,
      "author": {
        "id": 1004057
      },
      "writtenOn": "2017-04-23T11:20:44Z",
      "side": 1,
      "message": "checks :)",
      "range": {
        "startLine": 182,
        "startChar": 36,
        "endLine": 182,
        "endChar": 41
      },
      "revId": "fe25863916dd56270cd58b1ea983eb5acb07499d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "626fca84_1d32ec4c",
        "filename": "infrared/core/cli/cli.py",
        "patchSetId": 6
      },
      "lineNbr": 469,
      "author": {
        "id": 1004057
      },
      "writtenOn": "2017-04-23T11:20:44Z",
      "side": 1,
      "message": "Can be moved to the previous line, right after the beginning of the docstring (\"\"\")",
      "range": {
        "startLine": 469,
        "startChar": 8,
        "endLine": 469,
        "endChar": 60
      },
      "revId": "fe25863916dd56270cd58b1ea983eb5acb07499d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7b38c308_311a98a1",
        "filename": "infrared/core/cli/cli.py",
        "patchSetId": 6
      },
      "lineNbr": 471,
      "author": {
        "id": 1004057
      },
      "writtenOn": "2017-04-23T11:20:44Z",
      "side": 1,
      "message": "Shouldn\u0027t be empty.\nEither add info or remove from here...",
      "range": {
        "startLine": 470,
        "startChar": 0,
        "endLine": 471,
        "endChar": 16
      },
      "revId": "fe25863916dd56270cd58b1ea983eb5acb07499d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9be1099e_bb10de5d",
        "filename": "infrared/core/cli/cli.py",
        "patchSetId": 6
      },
      "lineNbr": 479,
      "author": {
        "id": 1004057
      },
      "writtenOn": "2017-04-23T11:20:44Z",
      "side": 1,
      "message": "pathes.extend([path + \u0027.yml\u0027 for path in pathes if not path.endswith(\u0027.yml\u0027)])",
      "range": {
        "startLine": 479,
        "startChar": 8,
        "endLine": 479,
        "endChar": 57
      },
      "revId": "fe25863916dd56270cd58b1ea983eb5acb07499d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a493ea2_1d815238",
        "filename": "infrared/core/cli/cli.py",
        "patchSetId": 6
      },
      "lineNbr": 505,
      "author": {
        "id": 1004057
      },
      "writtenOn": "2017-04-23T11:20:44Z",
      "side": 1,
      "message": "Personally, I prefer to make a use of self.__class__ which returns a reference to the class and will save from the need to rename the class reference in the future if someone will change the name of this class.",
      "range": {
        "startLine": 505,
        "startChar": 14,
        "endLine": 505,
        "endChar": 25
      },
      "revId": "fe25863916dd56270cd58b1ea983eb5acb07499d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "89dd033a_458689d9",
        "filename": "infrared/core/cli/cli.py",
        "patchSetId": 6
      },
      "lineNbr": 508,
      "author": {
        "id": 1004057
      },
      "writtenOn": "2017-04-23T11:20:44Z",
      "side": 1,
      "message": "I think it\u0027ll be better to define \u0027vars_dir\u0027 \u0026 \u0027defaults_dir\u0027 in the init method of the \u0027ComplexType\u0027 class. This way we won\u0027t need this init method in this class or in any other classes in the future.\nIf you wanna save the usage in \u0027settings_dirs\u0027 var, you can set it as a property the will return a tuple of vars \u0026 defaults and you won\u0027t need to change usage in other places if any.",
      "range": {
        "startLine": 507,
        "startChar": 0,
        "endLine": 508,
        "endChar": 44
      },
      "revId": "fe25863916dd56270cd58b1ea983eb5acb07499d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bda37c0a_24306921",
        "filename": "infrared/core/cli/cli.py",
        "patchSetId": 6
      },
      "lineNbr": 537,
      "author": {
        "id": 1004057
      },
      "writtenOn": "2017-04-23T11:20:44Z",
      "side": 1,
      "message": "With \u0027set\u0027 you gonna lose the order of the elements in the list!\n\nI guess you made a use in \u0027set\u0027 in order to remove duplication...\nYou have several options:\n1. Don\u0027t try to remove duplication (I think this is the right choice...)\n2. Use \u0027OrderedDict\u0027 data structure from the builtin \u0027collections\u0027 module.\n3. Define a data structure of your own.",
      "range": {
        "startLine": 537,
        "startChar": 20,
        "endLine": 537,
        "endChar": 23
      },
      "revId": "fe25863916dd56270cd58b1ea983eb5acb07499d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "34947436_5f0b8cbb",
        "filename": "infrared/core/utils/exceptions.py",
        "patchSetId": 6
      },
      "lineNbr": 143,
      "author": {
        "id": 1004057
      },
      "writtenOn": "2017-04-23T11:20:44Z",
      "side": 1,
      "message": "Please rename this class to begin with \u0027IR\u0027, so it\u0027ll be more clear that this exception belongs to IR.\n\u0027IRFileNotFoundException\u0027",
      "revId": "fe25863916dd56270cd58b1ea983eb5acb07499d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "83f258b3_96a067ba",
        "filename": "tests/test_complex_types.py",
        "patchSetId": 6
      },
      "lineNbr": 94,
      "author": {
        "id": 1004057
      },
      "writtenOn": "2017-04-23T11:20:44Z",
      "side": 1,
      "message": "You can create one method which gets reference to a class and returns an instance of this class with those parameters instead of have 3 fixture methods that do the same for 3 different classes.",
      "range": {
        "startLine": 73,
        "startChar": 0,
        "endLine": 94,
        "endChar": 33
      },
      "revId": "fe25863916dd56270cd58b1ea983eb5acb07499d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "292337e8_c4a10624",
        "filename": "tests/test_complex_types.py",
        "patchSetId": 6
      },
      "lineNbr": 140,
      "author": {
        "id": 1004057
      },
      "writtenOn": "2017-04-23T11:20:44Z",
      "side": 1,
      "message": "Why do you need to check that it sorted in this case? Don\u0027t you wanna check the the order is the same without sorting it?",
      "range": {
        "startLine": 138,
        "startChar": 4,
        "endLine": 140,
        "endChar": 54
      },
      "revId": "fe25863916dd56270cd58b1ea983eb5acb07499d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}