{
  "comments": [
    {
      "key": {
        "uuid": "42020853_e04c94af",
        "filename": "infrared/core/inspector/inspector.py",
        "patchSetId": 5
      },
      "lineNbr": 478,
      "author": {
        "id": 1004057
      },
      "writtenOn": "2018-04-09T16:10:08Z",
      "side": 1,
      "message": "if not all(key in spec_option for key in (\u0027maximum\u0027, \u0027minimun\u0027))\n\n\n:)",
      "range": {
        "startLine": 477,
        "startChar": 16,
        "endLine": 478,
        "endChar": 55
      },
      "revId": "bc10be244a3ae888f01eaf32dd2d1a26cb384b65",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "08e9ab45_f231f0e9",
        "filename": "infrared/core/inspector/inspector.py",
        "patchSetId": 5
      },
      "lineNbr": 486,
      "author": {
        "id": 1004057
      },
      "writtenOn": "2018-04-09T16:10:08Z",
      "side": 1,
      "message": "can be removed",
      "range": {
        "startLine": 485,
        "startChar": 20,
        "endLine": 486,
        "endChar": 58
      },
      "revId": "bc10be244a3ae888f01eaf32dd2d1a26cb384b65",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "590ba219_343c13bd",
        "filename": "infrared/core/inspector/inspector.py",
        "patchSetId": 5
      },
      "lineNbr": 489,
      "author": {
        "id": 1004057
      },
      "writtenOn": "2018-04-09T16:10:08Z",
      "side": 1,
      "message": "spec_option.get(\u0027minimum\u0027)",
      "range": {
        "startLine": 489,
        "startChar": 65,
        "endLine": 489,
        "endChar": 74
      },
      "revId": "bc10be244a3ae888f01eaf32dd2d1a26cb384b65",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "389724b7_6727ee94",
        "filename": "infrared/core/inspector/inspector.py",
        "patchSetId": 5
      },
      "lineNbr": 491,
      "author": {
        "id": 1004057
      },
      "writtenOn": "2018-04-09T16:10:08Z",
      "side": 1,
      "message": "spec_option.get(\u0027maximum\u0027)",
      "range": {
        "startLine": 491,
        "startChar": 65,
        "endLine": 491,
        "endChar": 74
      },
      "revId": "bc10be244a3ae888f01eaf32dd2d1a26cb384b65",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e6b3bfd_243ff5fc",
        "filename": "infrared/core/inspector/inspector.py",
        "patchSetId": 5
      },
      "lineNbr": 510,
      "author": {
        "id": 1004057
      },
      "writtenOn": "2018-04-09T16:10:08Z",
      "side": 1,
      "message": "On the one hand, you create the \u0027invalid_list\u0027 at the beginning of this method in order to display all the invalid options to the user, but on the other hand, you\u0027re raising an exception in this loop...\n\nPlease keep the consistency",
      "range": {
        "startLine": 499,
        "startChar": 0,
        "endLine": 510,
        "endChar": 34
      },
      "revId": "bc10be244a3ae888f01eaf32dd2d1a26cb384b65",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "13ec1189_7afb2d7f",
        "filename": "infrared/core/inspector/inspector.py",
        "patchSetId": 5
      },
      "lineNbr": 527,
      "author": {
        "id": 1004057
      },
      "writtenOn": "2018-04-09T16:10:08Z",
      "side": 1,
      "message": "Personally, I don\u0027t like code duplication.\nMaybe it\u0027ll be better to combine these two checks into one check:\n\nif not min_value \u003c\u003d option_value \u003c\u003d max_value:\n  raise ...\n\nAnd the new exception class in this patch (IRInvalidMinMaxRangeException) will get only three args: min_value, max_value, option_value\nand will print a proper exception",
      "range": {
        "startLine": 512,
        "startChar": 0,
        "endLine": 527,
        "endChar": 26
      },
      "revId": "bc10be244a3ae888f01eaf32dd2d1a26cb384b65",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ac853c6a_807111aa",
        "filename": "infrared/core/utils/exceptions.py",
        "patchSetId": 5
      },
      "lineNbr": 74,
      "author": {
        "id": 1004057
      },
      "writtenOn": "2018-04-09T16:10:08Z",
      "side": 1,
      "message": "Please see my comment last comment on the previous file (inspector.py",
      "range": {
        "startLine": 72,
        "startChar": 12,
        "endLine": 74,
        "endChar": 73
      },
      "revId": "bc10be244a3ae888f01eaf32dd2d1a26cb384b65",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cc6d570b_a3948c51",
        "filename": "tests/test_spec.py",
        "patchSetId": 5
      },
      "lineNbr": 74,
      "author": {
        "id": 1004057
      },
      "writtenOn": "2018-04-09T16:10:08Z",
      "side": 1,
      "message": "Do you wanna check only integers? What about real numbers?",
      "range": {
        "startLine": 62,
        "startChar": 0,
        "endLine": 74,
        "endChar": 2
      },
      "revId": "bc10be244a3ae888f01eaf32dd2d1a26cb384b65",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "713f2114_0c684174",
        "filename": "tests/test_spec.py",
        "patchSetId": 5
      },
      "lineNbr": 141,
      "author": {
        "id": 1004057
      },
      "writtenOn": "2018-04-09T16:10:08Z",
      "side": 1,
      "message": "Please don\u0027t forget to check valid args for min\u0026max params with invalid args for test_key (option_value)",
      "range": {
        "startLine": 141,
        "startChar": 55,
        "endLine": 141,
        "endChar": 72
      },
      "revId": "bc10be244a3ae888f01eaf32dd2d1a26cb384b65",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}