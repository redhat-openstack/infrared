{
  "comments": [
    {
      "key": {
        "uuid": "c79f550c_248126b4",
        "filename": "infrared/core/inspector/inspector.py",
        "patchSetId": 3
      },
      "lineNbr": 371,
      "author": {
        "id": 1012221
      },
      "writtenOn": "2018-02-18T12:35:15Z",
      "side": 1,
      "message": "it is a bit confusing that you use 2 results lists",
      "revId": "d997a700fe0f984cd066bd4a4ee79769ba3e970c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4ca0632d_c37cbd70",
        "filename": "infrared/core/inspector/inspector.py",
        "patchSetId": 3
      },
      "lineNbr": 376,
      "author": {
        "id": 1012221
      },
      "writtenOn": "2018-02-18T12:35:15Z",
      "side": 1,
      "message": "please keep lines under 79 characters",
      "revId": "d997a700fe0f984cd066bd4a4ee79769ba3e970c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7521afce_7d0db270",
        "filename": "infrared/core/inspector/inspector.py",
        "patchSetId": 3
      },
      "lineNbr": 377,
      "author": {
        "id": 1012221
      },
      "writtenOn": "2018-02-18T12:35:15Z",
      "side": 1,
      "message": "I believe you have a problem with the condition here.\nit complains about errors when it shouldn\u0027t.\n\nFor example, if the required when is a boolean field with a default of False. Your condition will be true (even though it shouldn\u0027t) and will raise an error.",
      "revId": "d997a700fe0f984cd066bd4a4ee79769ba3e970c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "734331a3_5ae85586",
        "filename": "infrared/core/inspector/inspector.py",
        "patchSetId": 3
      },
      "lineNbr": 379,
      "author": {
        "id": 1012221
      },
      "writtenOn": "2018-02-18T12:35:15Z",
      "side": 1,
      "message": "why do you return res here?\nI think you\u0027re missing the whole point of using an array of missing required args",
      "revId": "d997a700fe0f984cd066bd4a4ee79769ba3e970c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "33ac7fea_5306ec29",
        "filename": "infrared/core/inspector/inspector.py",
        "patchSetId": 3
      },
      "lineNbr": 386,
      "author": {
        "id": 1012221
      },
      "writtenOn": "2018-02-18T12:35:15Z",
      "side": 1,
      "message": "instead of using map (which will iterate over the list again) you could make sure each value of list is str at the end of the loop you had before (lines 380-385)",
      "revId": "d997a700fe0f984cd066bd4a4ee79769ba3e970c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b02618bd_6146dedc",
        "filename": "tests/test_execute.py",
        "patchSetId": 3
      },
      "lineNbr": 46,
      "author": {
        "id": 1012221
      },
      "writtenOn": "2018-02-18T12:35:15Z",
      "side": 1,
      "message": "1) I don\u0027t think you need to add these parameters. I believe it fails without them due to a bug in the implementation of the function in the inspector file. This test should pass without adding anything to the input_string (except the \u0027example\u0027)\n2) Please limit all lines to a maximum of 79 characters\n3) Add space after comma (after the \u0027example\u0027 in list)",
      "revId": "d997a700fe0f984cd066bd4a4ee79769ba3e970c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "68f9c581_225aead1",
        "filename": "tests/test_execute.py",
        "patchSetId": 3
      },
      "lineNbr": 55,
      "author": {
        "id": 1012221
      },
      "writtenOn": "2018-02-18T12:35:15Z",
      "side": 1,
      "message": "same here + you don\u0027t need the backslash when breaking line in a list",
      "revId": "d997a700fe0f984cd066bd4a4ee79769ba3e970c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "70144060_4dadbf84",
        "filename": "tests/test_execute.py",
        "patchSetId": 3
      },
      "lineNbr": 85,
      "author": {
        "id": 1012221
      },
      "writtenOn": "2018-02-18T12:35:15Z",
      "side": 1,
      "message": "same here",
      "revId": "d997a700fe0f984cd066bd4a4ee79769ba3e970c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "298931a3_4fdbfc1e",
        "filename": "tests/test_execute.py",
        "patchSetId": 3
      },
      "lineNbr": 109,
      "author": {
        "id": 1012221
      },
      "writtenOn": "2018-02-18T12:35:15Z",
      "side": 1,
      "message": "same here",
      "revId": "d997a700fe0f984cd066bd4a4ee79769ba3e970c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "53260ee5_f6e97807",
        "filename": "tests/test_execute.py",
        "patchSetId": 3
      },
      "lineNbr": 137,
      "author": {
        "id": 1012221
      },
      "writtenOn": "2018-02-18T12:35:15Z",
      "side": 1,
      "message": "same here",
      "revId": "d997a700fe0f984cd066bd4a4ee79769ba3e970c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a42fc63_7f327da1",
        "filename": "tests/test_execute.py",
        "patchSetId": 3
      },
      "lineNbr": 168,
      "author": {
        "id": 1012221
      },
      "writtenOn": "2018-02-18T12:35:15Z",
      "side": 1,
      "message": "same here",
      "range": {
        "startLine": 163,
        "startChar": 4,
        "endLine": 168,
        "endChar": 69
      },
      "revId": "d997a700fe0f984cd066bd4a4ee79769ba3e970c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8388bc66_314ab674",
        "filename": "tests/test_spec.py",
        "patchSetId": 3
      },
      "lineNbr": 49,
      "author": {
        "id": 1012221
      },
      "writtenOn": "2018-02-18T12:35:15Z",
      "side": 1,
      "message": "I\u0027m not sure but again, I guess you\u0027ve added those parameters because this test fails without them (which I believe is due to bug in implementation)",
      "revId": "d997a700fe0f984cd066bd4a4ee79769ba3e970c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}