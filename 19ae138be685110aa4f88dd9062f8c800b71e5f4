{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2f31a7f4_ffa99ed5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1010634
      },
      "writtenOn": "2022-02-07T16:09:13Z",
      "side": 1,
      "message": "looks good, I\u0027m a fan of per \u0027testing framework\u0027 subdirectory under test_results/ due to fact that we can\u0027t control DFG-owned testing (shell scripts, ansible etc.) and where they put their testing results and how they\u0027re going to call the filenames of that...\n\nNOTE: doing that (test_results with the subdirectories) it does _not_ defeat the purpose as with this change we set a standard that \u0027test_results\u0027 is the one-and-only location for test results, ideally DFGs should be putting the results location under subdirs but even if not then at least ones controlled by ourselves will be isolated...\n\nlet see what opinions other folks have about it",
      "revId": "19ae138be685110aa4f88dd9062f8c800b71e5f4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e769e02c_36f6799d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1016110
      },
      "writtenOn": "2022-02-07T16:52:38Z",
      "side": 1,
      "message": "I disagree: the test results should be per-phase, now identified by a number but it could potentially be a label.\n\nThe test runner doesn\u0027t matter, you have a bunch of JUnitXML files where the tests can be distinguished by their IDs, and in fact from the polarion point of view there is no difference among them.\n\nIf you group by phase you can easily see which tests were executed when: in a normal deployment, all tests together post-deployment; if you add an update or upgrade step, you will have all tests after the update or upgrade; if you add a reboot, you will have all tests after the reboot, and so on.\n\nPlease rethink this. If this is a temporary step, I\u0027m fine. If this is the final destination, it doesn\u0027t serve its intended purpose.",
      "parentUuid": "2f31a7f4_ffa99ed5",
      "revId": "19ae138be685110aa4f88dd9062f8c800b71e5f4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "787a2371_9023538a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1010634
      },
      "writtenOn": "2022-02-08T10:26:14Z",
      "side": 1,
      "message": "if we pile all xml results in one dir then yes - polarion reporting script may have easier life to do one os.listdir or walk rather than looped one but then all the other places (i.e.: even archiveArtifacts in groovy, would have to maintain the tempest-results.* patterns everywhere, all other scripts that process specific tempest or rally or tobiko or ansible/bash scripts results would have to all maintain file name template instead of simply looking at a specific directory\n\nI\u0027m still not a fan of piling all xmls together only for one tool to have 1 instead of 2 lines of for loop but I\u0027m up for a correction if there are other things I can\u0027t see here\n\n... but, as always, I\u0027m ok with whatever the majority will vote as the good solution here, let\u0027s wait for others opinions",
      "parentUuid": "e769e02c_36f6799d",
      "revId": "19ae138be685110aa4f88dd9062f8c800b71e5f4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "443e89cc_2a7699eb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1010634
      },
      "writtenOn": "2022-02-08T10:26:14Z",
      "side": 1,
      "message": "@pavel et al, please chime in on the one-dir-for-all-xml-files vs. one-subdir-per-testing-framework argument we have with Luigi below, the more voted for option will get implemented",
      "revId": "19ae138be685110aa4f88dd9062f8c800b71e5f4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9ab93a6b_44d1fbc5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1016110
      },
      "writtenOn": "2022-02-08T13:17:32Z",
      "side": 1,
      "message": "Uhm, I\u0027m not sure other tools needs to know which tool generated which result file. Or at least I\u0027m not aware of it! After they are generated, they are all test results.\n\n\narchiveArtifact could just change the pattern to get all *.xml *.subunit *.html",
      "parentUuid": "787a2371_9023538a",
      "revId": "19ae138be685110aa4f88dd9062f8c800b71e5f4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "adbe8866_40a714d6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1004057
      },
      "writtenOn": "2022-02-08T17:56:51Z",
      "side": 1,
      "message": "Adrian,\n\nI really like the fact that you decided not to change the destination directories, but to fetch the files to the new destinations as well as to the original (old) ones.\nOnce we\u0027ll see that everything works as expected, we will upload a new change that remove the old destinations.\n\nPlease make sure to follow the DRY principle.\n\nGreat job!\nAriel",
      "revId": "19ae138be685110aa4f88dd9062f8c800b71e5f4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b80a7208_18c58533",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1004057
      },
      "writtenOn": "2022-02-08T18:10:18Z",
      "side": 1,
      "message": "I have to agree with Waldek here and vote for having testing frameworks named sub-dirs.\nWe saw that different tools (like ReportPortal) need to process the output of different testing frameworks differently and even if it wasn\u0027t the case, I think it\u0027ll be more readable and easier to maintain.\nIt\u0027s all possible to traverse the main results dir and find all the XML files...",
      "parentUuid": "9ab93a6b_44d1fbc5",
      "revId": "19ae138be685110aa4f88dd9062f8c800b71e5f4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f51ae4fb_6b24901b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1004057
      },
      "writtenOn": "2022-02-08T18:11:10Z",
      "side": 1,
      "message": "@Adrian, please make sure to check the Tobiko plugin as well",
      "revId": "19ae138be685110aa4f88dd9062f8c800b71e5f4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "87b84024_31fd9e33",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1016110
      },
      "writtenOn": "2022-02-14T15:05:54Z",
      "side": 1,
      "message": "I strongly disagree: the point  is to handle all test results at the same level. They are all test results from a specific phase.\nI don\u0027t care if they come from tobiko, tempest or something else.\n\nWhen you send the result, for example RP, if you want to differentiate by generator you can maybe look at the test case IDs by regexp, or by pattern of the test name.\n\nBut the focus, what people want to see is \"in this phase, after the deployment, I\u0027ve got those results. After an upgrade, I\u0027ve got those results\" and so on.\n\nI won\u0027t hold the patch for this if we can discuss this again.",
      "parentUuid": "b80a7208_18c58533",
      "revId": "19ae138be685110aa4f88dd9062f8c800b71e5f4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f92ff8e2_8e4b6c73",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1019635
      },
      "writtenOn": "2022-02-15T12:37:41Z",
      "side": 1,
      "message": "When I start working on the task I consulted with Arial abut this exactly.\nHis answer was exactly like Waldek, and also I\u0027m am thinking the same.\nI see many reason (like Waldek said)  to have a separate folder for each test and I don\u0027t see any real reason why not do do it.",
      "parentUuid": "9ab93a6b_44d1fbc5",
      "revId": "19ae138be685110aa4f88dd9062f8c800b71e5f4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6235d407_9433ce8c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1019635
      },
      "writtenOn": "2022-02-15T12:37:41Z",
      "side": 1,
      "message": "Tobiko plugin is not part of the infrared repo.\nI have a different task for it,\n\n\u0027tobiko\u0027:\n{ \u0027src\u0027: \u0027https://opendev.org/x/tobiko.git\u0027, \u0027src_path\u0027: \u0027infrared_plugin\u0027, \u0027desc\u0027: \u0027Deploy and run Tobiko test cases\u0027, \u0027type\u0027: \u0027test\u0027 }\n\nThis means that I will need to find a way to do it on the fly.",
      "parentUuid": "f51ae4fb_6b24901b",
      "revId": "19ae138be685110aa4f88dd9062f8c800b71e5f4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe8aeb2d_5f155334",
        "filename": "plugins/rally/tasks/post/report.yml",
        "patchSetId": 5
      },
      "lineNbr": 81,
      "author": {
        "id": 1004057
      },
      "writtenOn": "2022-02-08T17:56:51Z",
      "side": 1,
      "message": "DRY!!!",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 81,
        "endChar": 56
      },
      "revId": "19ae138be685110aa4f88dd9062f8c800b71e5f4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f217398b_7b9ed972",
        "filename": "plugins/rally/tasks/post/report.yml",
        "patchSetId": 5
      },
      "lineNbr": 81,
      "author": {
        "id": 1019635
      },
      "writtenOn": "2022-02-15T12:37:41Z",
      "side": 1,
      "message": "There is a with_items loop, I must repeat the task.",
      "parentUuid": "fe8aeb2d_5f155334",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 81,
        "endChar": 56
      },
      "revId": "19ae138be685110aa4f88dd9062f8c800b71e5f4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5c72101f_8d5c308b",
        "filename": "plugins/tempest/tasks/run_suite.yml",
        "patchSetId": 5
      },
      "lineNbr": 33,
      "author": {
        "id": 1004057
      },
      "writtenOn": "2022-02-08T17:56:51Z",
      "side": 1,
      "message": "DRY!!!",
      "range": {
        "startLine": 25,
        "startChar": 4,
        "endLine": 33,
        "endChar": 97
      },
      "revId": "19ae138be685110aa4f88dd9062f8c800b71e5f4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e794684_ea40c580",
        "filename": "plugins/tempest/tasks/run_suite.yml",
        "patchSetId": 5
      },
      "lineNbr": 33,
      "author": {
        "id": 1019635
      },
      "writtenOn": "2022-02-15T12:37:41Z",
      "side": 1,
      "message": "This is a very tricky file, this currently work.\nit\u0027s not perfect but it works.\nalso, this is only a temporary solution\nso we will have backward compatibility until we finish update all jobs",
      "parentUuid": "5c72101f_8d5c308b",
      "range": {
        "startLine": 25,
        "startChar": 4,
        "endLine": 33,
        "endChar": 97
      },
      "revId": "19ae138be685110aa4f88dd9062f8c800b71e5f4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a520b5b_9fbc87df",
        "filename": "plugins/tempest/tasks/run_suite.yml",
        "patchSetId": 5
      },
      "lineNbr": 33,
      "author": {
        "id": 1016110
      },
      "writtenOn": "2022-02-15T13:10:11Z",
      "side": 1,
      "message": "You don\u0027t need to compute it twice. Just use the index compute once. When it\u0027s time to switch the directory, just switch it. But right now you can compute the basename of the file just once and copy the file in two places.",
      "parentUuid": "3e794684_ea40c580",
      "range": {
        "startLine": 25,
        "startChar": 4,
        "endLine": 33,
        "endChar": 97
      },
      "revId": "19ae138be685110aa4f88dd9062f8c800b71e5f4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}