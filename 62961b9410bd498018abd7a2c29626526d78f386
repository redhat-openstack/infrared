{
  "comments": [
    {
      "key": {
        "uuid": "ba4e91ad_7cfe2d30",
        "filename": "plugins/tempest/tasks/run_suite.yml",
        "patchSetId": 2
      },
      "lineNbr": 201,
      "author": {
        "id": 1010634
      },
      "writtenOn": "2020-01-13T10:27:21Z",
      "side": 1,
      "message": "the junit XML is \u0027the one\u0027 file/format that we need for Jenkins. based on this file it generates its \"test results\" and testing history and others... I don\u0027t know whether jenkins can accept subunit only\n\nunless we deal with this generation of junit xml file somehow differently this file is rather important",
      "range": {
        "startLine": 201,
        "startChar": 12,
        "endLine": 201,
        "endChar": 31
      },
      "revId": "62961b9410bd498018abd7a2c29626526d78f386",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "12ae1224_b840f0c5",
        "filename": "plugins/tempest/tasks/run_suite.yml",
        "patchSetId": 2
      },
      "lineNbr": 201,
      "author": {
        "id": 1016110
      },
      "writtenOn": "2020-01-13T10:37:46Z",
      "side": 1,
      "message": "No, this is not about Jenkins, but the user being able to analyze what went wrong. The job will still fail, but the user will be able to debug it.\nRight now everything falls apart when this command fails, which means that you don\u0027t even know if there is just one faulty files or more of them.\nThe idea is to collect as much debug as possible (i.e. all the subunit files). Everything will still fail, but with more data.",
      "parentUuid": "ba4e91ad_7cfe2d30",
      "range": {
        "startLine": 201,
        "startChar": 12,
        "endLine": 201,
        "endChar": 31
      },
      "revId": "62961b9410bd498018abd7a2c29626526d78f386",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1833546d_029f5f85",
        "filename": "plugins/tempest/tasks/run_suite.yml",
        "patchSetId": 2
      },
      "lineNbr": 201,
      "author": {
        "id": 1010634
      },
      "writtenOn": "2020-02-17T16:33:27Z",
      "side": 1,
      "message": "I\u0027m kind of split between two opinions here: \n\noption 1) the \u0027tempest\u0027 plugin should fail here... then collect logs ... which is ran in a \u0027catch\u0027 or \u0027finally\u0027 stage after this tempest plugin (it\u0027s independent from this tempest run) should collect the debug info you want... more so, progressing this play/tasks in situation when we can\u0027t fetch the junit is pointless anyways... you even better fail here (on line #201) actually (so use \u0027fail_on_missing: yes\u0027) and _not_ run the cleanup on line #214 so the collect logs has ability to catch more debug info (despite it\u0027s defaulting to \u0027no\u0027 we have to cover the situation when it\u0027s set to \u0027yes\u0027 as well)\n\noption 2) ignore this \u0027fetching subunit\u0027 errors and progress, but then we report the tempest plugin/play as \u0027successful\u0027 despite it _possibly_ run tempest testing but we don\u0027t have any proof it actually happen (note line #147) - I\u0027m not comfortable with reporting successful play run when we are not sure it\u0027s true",
      "parentUuid": "12ae1224_b840f0c5",
      "range": {
        "startLine": 201,
        "startChar": 12,
        "endLine": 201,
        "endChar": 31
      },
      "revId": "62961b9410bd498018abd7a2c29626526d78f386",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}