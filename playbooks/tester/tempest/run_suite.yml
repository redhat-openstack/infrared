---
- name: set facts for test suite
  set_fact:
      test_output_file: "tempest-results-{{ test_suite.key }}.xml"
      blacklistfile: ''
      whitelistfile: ''
      regex: ''

- name: remove old test list for "{{ test_suite.key }}"
  file:
      state: absent
      name: "{{ tester.dir }}/{{ item }}"
  with_items:
      - white_list
      - black_list
      - "{{ test_output_file }}"

- block:
    - name: create Test List - Whitelist for "{{ test_suite.key }}"
      lineinfile:
          create: yes
          dest: "{{ tester.dir }}/white_list"
          line: "{{ item }}"
          regexp: "^{{ item }}$"
      with_items: "{{ test_suite.value.whitelist | default([]) }}"

    - name: add whitelist invocation
      set_fact:
          whitelistfile: "--whitelist_file white_list"

  when: test_suite.value.whitelist is defined and test_suite.value.whitelist

- block:
    - name: create Test List - Blacklist for "{{ test_suite.key }}"
      lineinfile:
          create: yes
          dest: "{{ tester.dir }}/black_list"
          line: "{{ item }}"
          regexp: "^{{ item }}$"
      with_items: "{{ test_suite.value.blacklist | default([]) }}"

    - name: add blacklist invocation
      set_fact:
          blacklistfile: "--blacklist_file black_list"
  when: test_suite.value.blacklist is defined and test_suite.value.blacklist

- name: add regex invoke for "{{ test_suite.key }}"
  set_fact:
      regex: "--regex {{ test_suite.value.test_regex }}"
  when: test_suite.value.test_regex is defined and test_suite.value.test_regex

- block:
      - name: run tempest "{{ test_suite.key }}" suite
        shell: >
            source .venv/bin/activate;
            ostestr -s --no-pretty {{ regex | default('') }} {{ whitelistfile }} {{ blacklistfile }}
            | subunit2junitxml --output-to={{ test_output_file }} | subunit2pyunit
        args:
            executable: /bin/bash
            chdir: "{{ tester.dir }}"
        ignore_errors: true

      - name: inject the test suite name to the XML name atribute
        shell: "sed '/^<testsuite/s/name=\"\"/name=\"{{ test_suite.key }}\"/' -i {{ test_output_file }}"
        args:
            chdir: "{{ tester.dir }}"

      - name: Fetch resulting file
        fetch:
            src: "{{ tester.dir }}/{{ test_output_file }}"
            dest: "{{ lookup('env', 'PWD') }}/{{ test_output_file }}"
            flat: yes
  when: test_suite.value.test_regex is defined or whitelistfile is defined or blacklistfile is defined
