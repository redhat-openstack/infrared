---
- name: Create private network
  hosts: tester
  become: yes
  become_user: "{{ installer.user.name }}"
  gather_facts: no
  vars:
      controller_name: "{{ provisioner.nodes.controller.name }}"
      tmp_controller_host: "{{ hostvars[controller_name].ansible_default_ipv4.address }}"
      controller_auth_url: "http://{{ tmp_controller_host }}:35357/v2.0/"
      admin_password: "{{ hostvars[controller_name].admin_password | default('redhat') }}"
      tenant: demo
      subnet_net_name: private
      subnet_name: private_subnet
      net_name: public
      undercloud_rc: overcloudrc
  tasks:
    # create tenant network
    - shell: "cat {{ undercloud_rc }} | grep AUTH | cut -d '=' -f 2"
      register: oc_auth

    - shell: "cat {{ undercloud_rc }} | grep USERNAME | cut -d '=' -f 2"
      register: oc_username

    - shell: "cat {{ undercloud_rc }} | grep TENANT | cut -d '=' -f 2"
      register: oc_tenant

    - shell: "source {{ undercloud_rc }} && env | grep OS_PASSWORD | cut -d '=' -f 2"
      args:
          executable: /bin/bash
      register: oc_password
    - pip:
          name: "{{ item.key }}"
          version: "{{ item.value }}"
          virtualenv: "{{ path_venv }}"
      with_dict:
          setuptools: "17.0"
          pytz: "2016.4"
          shade: "1.7.0"
          pip: "8.1"
      vars:
          path_venv: /tmp/venv_shade

    - vars:
          ansible_python_interpreter: "/tmp/venv_shade/bin/python"
      os_network:
          auth:
              auth_url: "{{ oc_auth.stdout }}"
              username: "{{ oc_username.stdout }}"
              password: "{{ oc_password.stdout }}"
              project_name: "{{ oc_tenant.stdout }}"
          cacert: /etc/pki/tls/certs/ca-bundle.crt
          name: private
          state: present
    - vars:
          ansible_python_interpreter: "/tmp/venv_shade/bin/python"
      os_subnet:
          auth:
              auth_url: "{{ oc_auth.stdout }}"
              username: "{{ oc_username.stdout }}"
              password: "{{ oc_password.stdout }}"
              project_name: "{{ oc_tenant.stdout }}"
          network_name: "{{ subnet_net_name }}"
          cacert: /etc/pki/tls/certs/ca-bundle.crt
          name: "{{ subnet_name }}"
          enable_dhcp: True
          dns_nameservers: "8.8.8.8,8.8.4.4"
          state: present
          cidr: "192.168.100.0/24"
    - vars:
          ansible_python_interpreter: "/tmp/venv_shade/bin/python"
      os_router:
          auth:
              auth_url: "{{ oc_auth.stdout }}"
              username: "{{ oc_username.stdout }}"
              password: "{{ oc_password.stdout }}"
              project_name: "{{ oc_tenant.stdout }}"
          name: "routerd"
          cacert: /etc/pki/tls/certs/ca-bundle.crt
          network: "{{ net_name }}"
          state: present
          interfaces:
              - "{{ subnet_name }}"
