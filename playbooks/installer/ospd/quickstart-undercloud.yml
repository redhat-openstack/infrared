---
# Any step that should happen before initiating the osp-d playbook
# This could be validation of the hosts, package installation that is assumed as per the guide, etc..
- name: Prepare our undercloud
  hosts: virthost
  gather_facts: no
  vars:
      undercloud: 'undercloud-0'
      undercloud_tar_file: "undercloud-quickstart-{{ director_puddle_version | default(core_puddle_version) }}.tar"
  tasks:
      - name: download the undercloud tar file
        get_url:
            url: "http://{{ private.storage.oc_image_repo.server }}/{{ private.storage.oc_image_repo.path }}/{{ installer.product.version }}/{{ undercloud_tar_file }}"
            dest: "~/{{ undercloud_tar_file }}"

      - name: untar the undercloud quickstart
        unarchive:
            src: "~/{{ undercloud_tar_file }}"
            dest: "~/"
            copy: no
            list_files: yes
        register: tar

      - name: copy the image into libvirt images folder
        shell: "cp -vf {{ undercloud }}-disk1.qcow2 /var/lib/libvirt/images/{{ undercloud }}-disk1.qcow2"

      - name: inject our key into the undercloud image
        shell: "virt-customize -a /var/lib/libvirt/images/{{ undercloud }}-disk1.qcow2 --ssh-inject root:file:/root/.ssh/id_rsa.pub --selinux-relabel"

      - name: define our new undercloud VM
        shell: "virsh define {{ undercloud }}.xml"

      - name: start our undercloud VM
        virt:
            name: "{{ undercloud }}"
            state: running

      #TODO(yfried): cleanup should be in a block/allways format
      - name: remove unarchived files from machine
        file:
            state: absent
            path: "{{ item }}"
        with_items: "{{ tar.files }}"

      - name: remove quickstart tar file
        file:
            state: absent
            path: "{{ undercloud_tar_file }}"

      - name: wait for the undercloud IP to become available
        shell: |
            virsh net-dhcp-leases external | awk '($4 == "ipv4") && ($6 =="{{ undercloud }}") {print $5}'
        register: undercloud_ip
        until: undercloud_ip.stdout != ''
        retries: 15
        delay: 15

      - name: waiting for the undercloud to be SSH available
        wait_for:
            port: 22
            host: "{{ undercloud_ip.stdout | ipaddr('address') }}"
            search_regex: OpenSSH
        delay: 10

      - name: add undercloud to host list
        add_host:
            name: "{{ undercloud }}"
            groups: "undercloud,tester,openstack_nodes"
            ansible_ssh_user: "root"
            ansible_ssh_private_key_file: "{{ hostvars[groups['overcloud_nodes'][0]].ansible_ssh_private_key_file }}"
            ansible_ssh_host: "{{ undercloud_ip.stdout | ipaddr('address') }}"
        notify:
            - update hosts
            - Link to new Inventory file

  handlers:
      - name: update hosts
        template:
          dest: "{{ lookup('env', 'PWD') }}/hosts-installer"
          src: "{{ inventory_dir }}/templates/inventory.j2"
        delegate_to: localhost

      - name: Link to new Inventory file
        file:
          dest: "{{ lookup('env', 'PWD') }}/hosts"
          state: link
          src: "{{ lookup('env', 'PWD') }}/hosts-installer"
        delegate_to: localhost


- name: gather facts from the undercloud
  hosts: undercloud
  gather_facts: yes
