- name: Update undercloud for ovb
  tags: ovb
  hosts: undercloud
  become: yes
  become_method: sudo
  roles:
      - {role: openstack/ovb/undercloud, when: "'bmc' in groups" }

- name: Prepare the instackenv.json for ovb deployment
  hosts: undercloud
  gather_facts: no
  become: yes
  become_user: "{{ installer.user.name }}"
  vars:
      undercloud_provision_cidr: "{{ ansible_br_ctlplane.ipv4.network }}/{{ ansible_br_ctlplane.ipv4.netmask }}"
  tasks:
      - name: Gather created servers facts
        os_server_facts:
            server: "{{ provisioner.prefix }}{{ item.value.name }}*"
            cloud: "{{ provisioner.cloud | default(omit) }}"
        register: over_servers
        when: "'overcloud_nodes' in item.value.groups"
        with_dict: provisioner.nodes
        delegate_to: localhost
        become: no

      - name: Prepare instack.json
        template:
            src: "templates/ovb_instack.json.j2"
            dest: "~/instackenv.json"

      - name: Register our hosts to instack
        shell: "source ~/stackrc; openstack baremetal import --json instackenv.json"

      - name: assign the kernel and ramdisk before introspection begins
        shell: "source ~/stackrc; openstack baremetal configure boot"

      - name: get subnet ID to update neutron's DNS server
        shell: "source ~/stackrc; neutron subnet-list | grep '{{ undercloud_provision_cidr | ipsubnet }}' | awk '{print $2;}'"
        register: subnet_id

      - name: get the nameserver
        shell: "cat /etc/resolv.conf | grep -m 1 'nameserver' | awk '{print $2}'"
        register: nameserver

      - name: update neutron DNS server
        shell: "source ~/stackrc; neutron subnet-update {{ subnet_id.stdout }} --dns-nameserver {{ nameserver.stdout }}"
