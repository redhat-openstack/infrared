#This playboook used for preperaing undercloud for Ironic inspector tempest tests.
#The main idea is to create downstream CI job for ironic and run tests on the undercloud.
#Actions:
#Registers node into ironic list
#Updates baremetal flavor
#Creates initial tempest.conf file
#Enables ironic inspector and required driver in inronic

- name: Prepare introspection
  tags: ironic_pre_introspection
  hosts: undercloud
  gather_facts: yes
  become: yes
  become_user: "{{ installer.user.name }}"
  vars:
      undercloud_provision_cidr: "{{ ansible_br_ctlplane.ipv4.network }}/{{ ansible_br_ctlplane.ipv4.netmask }}"
      custom_instack: "{{ (installer.instackenv|default({})).file | default('') }}"
  tasks:
    - name: "Set selinux state on undercloud after install"
      selinux:
          policy: "targeted"
          state: "{{ installer.selinux | default('enforcing') }}"
      become: yes
      become_user: "root"
      become_method: "sudo"

    # User provided file overwrites everything
    - name: check if instackenv is under the deployment folder
      stat:
          path: "{{ installer.deployment.files.rstrip('/') }}/instackenv.json"
      delegate_to: localhost
      become: no
      register: old_custom_instack
      when: custom_instack == ''
      changed_when: custom_instack == ''

    - set_fact:
          old_custom_instack_path: "{{ old_custom_instack.stat.path }}"
      when: old_custom_instack|changed and old_custom_instack.stat.exists != false

    - name: copy instackenv if provided by the user
      copy:
          src: "{{ (custom_instack != '') | ternary(custom_instack, old_custom_instack_path) }}"
          dest: "/home/{{ installer.user.name }}/{{ custom_instack | basename }}"
      when: custom_instack != '' or old_custom_instack.stat.exists
      register: inject_instackenv

    - set_fact:
          inject_instackenv_name: "{{ inject_instackenv.dest|basename }}"
      when: inject_instackenv|changed

    - name: verify that instackenv json file exists
      vars:
          target: "{{ (inject_instackenv|changed) | ternary((inject_instackenv_name), 'instackenv.json') }}"

      stat:
          path: "/home/{{ installer.user.name }}/{{ target }}"
      register: instack_file_path

    - set_fact:
          instack_file: "{{ instack_file_path.stat.path }}"
      when: instack_file_path.stat.exists

    - fail:
          msg: "instackenv file is missing"
      when: not instack_file_path.stat.exists

    - name: register our hosts to instack
      shell: "source ~/stackrc; openstack baremetal import --json {{ instack_file }}"

    - name: update flavor propreties with cpu arch
      shell: "source ~/stackrc; openstack flavor set --property \"cpu_arch\"=\"x86_64\" baremetal"

    - name: assign the kernel and ramdisk before introspection begins
      shell: "source ~/stackrc; openstack baremetal configure boot"

    - name: fetch deployer output for tester
      fetch:
          src: "~/stackrc"
          dest: "{{ inventory_dir }}/keystonerc"
          flat: yes

    - name: get baremetal flavor id
      shell: "source ~/stackrc; openstack flavor list | grep baremetal | awk '{print $2;}'"
      register: flavor_id


- name: Create initial tempest.conf file
  tags: ironic_tempest_conf
  hosts: undercloud
  gather_facts: yes
  tasks:
    - name: create initial tempest config file
      become: no
      template:
        src: templates/ironic-tempest-deployer-input.conf.j2
        dest: "{{ inventory_dir }}/tempest-deployer-input.conf"
      delegate_to: localhost


- name: Enable ironic inspector and required driver
  tags: ironic_enable_inspector_and_driver
  hosts: undercloud
  gather_facts: yes
  tasks:
    - name: enable ironic inspector
      ini_file:
        dest: /etc/ironic/ironic.conf
        section: inspector
        option: enabled
        value: true
        backup: yes

    - name: enable fake driver
      ini_file:
        dest: /etc/ironic/ironic.conf
        section: DEFAULT
        option: enabled_drivers
        value: "{{ driver_type }}"
        backup: yes

    - name: apply ironic changes
      shell: "systemctl restart openstack-ironic-inspector.service"

    - name: make neutron network shared
      shell: "neutron net-update $(neutron net-list | grep ctlplane | awk '{print $2;}') --shared=True"