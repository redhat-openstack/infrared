- name: Make a copy of our undercloud for virthost installation
  hosts: virthost
  gather_facts: no
  vars:
      undercloud: "{{ hostvars[(groups.undercloud|first)].inventory_hostname }}"
      undercloud_tar_file: "undercloud-quickstart-{{ director_puddle_version | default(core_puddle_version) }}.tar"
  tasks:
      - name: install package with virt-sparsify
        yum: name=libguestfs-tools-c state=present

      - name: shutdown the undercloud VM
        virt:
            name: "{{ undercloud }}"
            state: shutdown

      - name: wait for vm to be fully shut off
        shell: "virsh dominfo {{ undercloud }} | grep '^State: '"
        register: virsh_vm_status
        until: "'shut off' in virsh_vm_status.stdout"
        retries: 36  # * 5 = 3 minutes
        delay: 5

      - name: create a copy from the VM xml
        virt:
            name: "{{ undercloud }}"
            command: get_xml
        register: undercloud_xml

      - name: save undercloud xml to file
        copy:
            content: "{{ undercloud_xml.get_xml }}"
            dest: "./{{ undercloud }}.xml"

      - name: copy and shrink undercloud image
        shell: "virt-sparsify --compress /var/lib/libvirt/images/{{ undercloud }}-disk1.qcow2 {{ undercloud }}-disk1.qcow2"

      - name: tar our undercloud files
        shell: "tar -cvf {{ undercloud_tar_file }} {{ undercloud }}.xml {{ undercloud }}-disk1.qcow2"

      - name: copy our auth key to the virthost
        copy:
            src: "{{ ansible_ssh_private_key_file | expanduser | realpath }}"
            dest: "~/backup_server_auth_key"
            mode: "0400"

      - name: copy our image to the backup server
        shell: "scp -o StrictHostKeyChecking=no -i ~/backup_server_auth_key {{ undercloud_tar_file }} {{ private.storage.oc_image_repo.user }}@{{ private.storage.oc_image_repo.server }}:{{ private.storage.oc_image_repo.path }}/{{ installer.product.core.version }}/{{ undercloud_tar_file }}"

      # TODO(yfried): this should be in block/allways so cleanup is executed regardless of previous tasks
      - name: cleanup our files
        file:
            state: absent
            path: "{{ item }}"
        with_items:
            - "{{ undercloud }}.xml"
            - "{{ undercloud }}-disk1.qcow2"
            - "{{ undercloud }}-disk1.qcow2.tmp"
            - "{{ undercloud_tar_file }}"
