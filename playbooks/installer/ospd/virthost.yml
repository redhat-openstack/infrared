- name: Add rhos-release repos and update ipxe-roms (for Ironic)
  hosts: virthost
  tags: backup
  gather_facts: yes
  any_errors_fatal: true
  roles:
      - role: installer/rhos-release
        rr_rpm_url: "{{ installer.product.rpm }}"
        director_version: "{{ installer.product.version }}"
        director_build: "{{ installer.product.build }}"
        core_version: "{{ (installer.product.core.version is defined and installer.product.core.version) | ternary(installer.product.core.version, installer.product.version) }}"
        core_build: "{{ installer.product.core.build }}"
        rr_distro_version: "{% if installer.product.version|openstack_release < 10 %}7.2{% else %}7.3{% endif %}"
        mirror: "{{ installer.mirror | default(omit) }}"
        when: "ansible_distribution_version == 7.2 and installer.product.version|openstack_distribution == 'OSP'"

      - role: installer/rdo-release
        become: yes
        product_version: "{{ installer.product.version }}"
        when: installer.product.version|openstack_distribution == 'RDO'
  tasks:
      - name: update /etc/hosts with VMs details
        lineinfile:
            dest: "/etc/hosts"
            line: "{{ hostvars[item].ansible_ssh_host }}    {{ item }}.redhat.local {{ item }}"
            regexp: ".*{{ item }}$"
            state: present
        with_items: "{{ groups['all'] | difference(['localhost']) | difference(['virthost']) }}"

      - name: get Ironic requirement
        yum:
            state: latest
            name: ipxe-roms-qemu
        register: update

      # (fhubik) Detect bug in ansible, packages with long names aren't parsed correctly and upgraded
      # Remove when fixed (https://github.com/ansible/ansible-modules-core/issues/4318)
      - name: make sure we have latest ipxe-roms-qemu (workaround ansible-modules-core yum bug 4318)
        shell: yum install ipxe-roms-qemu -y
        when: not update|changed

- include: "undercloud-restore.yml"
  when: "'undercloud' not in groups"

# Dumping all facts for later use
- name: Dumping facts from all nodes for later use
  hosts: all:!localhost
  gather_facts: no
  tags: virthost
  any_errors_fatal: true
  tasks:
      - name: Dumping facts
        setup:

# In case we're dealing with virthost, we need to make sure the undercloud is able to ssh to the hypervisor
- name: Create the stack user on the virthost and allow SSH to hypervisor
  hosts: virthost
  gather_facts: no
  any_errors_fatal: true
  tasks:
      - name: create stack user on virthost
        user:
            name: "{{ installer.user.name }}"
            state: present
            password: "{{ installer.user.password | password_hash('sha512') }}"

      - name: set permissions for the user to access the hypervisor
        copy:
            content: |
                [libvirt Management Access]
                Identity=unix-user:{{ installer.user.name }}
                Action=org.libvirt.unix.manage
                ResultAny=yes
                ResultInactive=yes
                ResultActive=yes
            dest: "/etc/polkit-1/localauthority/50-local.d/50-libvirt-user-{{ installer.user.name }}.pkla"

      - name: print the public key
        shell: "cat {{ inventory_dir }}/id_rsa_undercloud.pub"
        register: undercloud_public_key
        delegate_to: localhost

      - name: insert the public key to the known hosts in virthost
        authorized_key:
            user: "{{ installer.user.name }}"
            key: "{{ undercloud_public_key.stdout }}"

- name: Power off overcloud nodes VMs so they can be properly registered
  hosts: virthost
  gather_facts: no
  any_errors_fatal: true
  tasks:
      - name: power off overcloud nodes
        shell: "virsh destroy {{ item }}"
        with_items: "{{ groups['overcloud_nodes'] }}"
        when: "{{ installer.product.version|openstack_release == 10 }}"

- include: "undercloud-backup.yml"
  tags: backup
  when: "backup is defined"
