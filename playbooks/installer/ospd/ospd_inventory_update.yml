- name: Update Inventory from OSPD
  hosts: undercloud
  tags: inventory_update
  gather_facts: yes
  become: yes
  become_user: "{{ installer.user.name }}"
  vars:
      user: heat-admin
      password: redhat
      # The var "private_key" is used outside this scope and cannot be overridden
      overcloud_pkey: "{{ inventory_dir }}/id_rsa_overcloud"
      undercloud_rc: stackrc
  tasks:
      - name: fetch the private key file from the undercloud
        fetch:
            src: "~/.ssh/id_rsa"
            dest: "{{ overcloud_pkey }}"
            flat: yes

      - name: update file permissions
        delegate_to: localhost
        become: no
        file:
            path: "{{ overcloud_pkey }}"
            mode: 0600

      # todo(yfried): find a better method to load stackrc file
      - shell: "cat {{ undercloud_rc }} | grep AUTH | cut -d '=' -f 2"
        register: oc_auth

      - shell: "cat {{ undercloud_rc }} | grep USERNAME | cut -d '=' -f 2"
        register: oc_username

      - shell: "cat {{ undercloud_rc }} | grep TENANT | cut -d '=' -f 2"
        register: oc_tenant

      - shell: "source {{ undercloud_rc }} && env | grep OS_PASSWORD | cut -d '=' -f 2"
        args:
            executable: /bin/bash
        register: oc_password

      - name: Install python-virtualenv, gcc, python-devel for the pip tasks
        become: yes
        become_user: root
        yum:
            name: "{{ item }}"
            state: present
        with_items:
           - python-virtualenv
           - gcc
           - python-devel

      - block:
          - pip:
                name: "{{ item.key }}"
                version: "{{ item.value }}"
                virtualenv: "{{ path_venv }}"
            with_dict:
                setuptools: "17.0"
                pytz: "2016.4"
                shade: "1.7.0"
                pip: "8.1"

          - name: update IP of overcloud nodes
            vars:
                # Here can't be used {{ path_venv }}, because it's not a Jinja template
                ansible_python_interpreter: "/tmp/venv_server_facts/bin/python"
            os_server_facts:
                auth:
                    auth_url: "{{ oc_auth.stdout }}"
                    username: "{{ oc_username.stdout }}"
                    password: "{{ oc_password.stdout }}"
                    project_name: "{{ oc_tenant.stdout }}"

          - name: add hosts to host list
            add_host:
                name: "{{ item.name }}"
                # only add groups for new nodes. don't touch existing nodes' groups
                groups: "{{ ( item.name in groups.all ) | ternary(omit,
                    ['overcloud_nodes', 'openstack_nodes', item.name.split('-')[0]] | join(',')
                   ) }}"
                ansible_ssh_user: "{{ user }}"
                ansible_ssh_pass: ""
                ansible_ssh_host: "{{ item.accessIPv4 }}"
                ansible_ssh_private_key_file: "{{ overcloud_pkey }}"
            with_items: "{{ openstack_servers }}"
        vars:
            path_venv: /tmp/venv_server_facts

- name: Update ansible.cfg forwarding to OC nodes
  hosts: localhost
  vars:
      overcloud_pkey: "{{ inventory_dir }}/id_rsa_overcloud"
  tasks:
      - name: update ansible with the new SSH settings
        ini_file:
            dest: "{{ inventory_dir }}/ansible.cfg"
            section: ssh_connection
            option: ssh_args
            value: "-o ForwardAgent=yes -o ServerAliveInterval=30 -o ControlMaster=auto -o ControlPersist=30m -F {{ inventory_dir }}/ansible.ssh.config"

      - name: update ansible.ssh.config template for SSH tunneling if virthost
        template:
            src: "{{ inventory_dir }}/templates/ansible.ssh.config.j2"
            dest: "{{ inventory_dir }}/ansible.ssh.config"

      - name: Generate new Inventory file
        template:
          dest: "{{ lookup('env', 'PWD') }}/hosts-installer"
          src: "{{ inventory_dir }}/templates/inventory.j2"

      - name: Link to new Inventory file
        file:
          dest: "{{ lookup('env', 'PWD') }}/hosts"
          state: link
          src: "{{ lookup('env', 'PWD') }}/hosts-installer"
