---
- name: Setup openstack repos
  hosts: openstack_nodes
  gather_facts: yes
  become: yes
  become_method: sudo
  any_errors_fatal: true
  roles:
      - role: installer/rhos-release
        rr_rpm_url: "{{ installer.product.rpm }}"
        core_version: "{{ installer.product.version }}"
        core_build: "{{ installer.product.build }}"
        mirror: "{{ installer.mirror | default(omit) }}"
  tasks:
      - name: Update all packages
        yum: name=* state=latest

- name: Ensure hostname is configured properly
  hosts: openstack_nodes
  gather_facts: yes
  become: yes
  become_method: sudo
  any_errors_fatal: true
  tasks:
    - name: Configure hostname
      hostname: name="{{ hostvars[inventory_hostname].inventory_hostname }}"

    - name: Gather updated facts after hostname configuration
      setup:

    - name: Ensure hostname is in /etc/hosts
      lineinfile:
        dest: /etc/hosts
        line: "{{ hostvars[item].ansible_default_ipv4.address }} {{ hostvars[item].inventory_hostname }}.{{ hostvars[item].ansible_dns.search[0] }} {{ hostvars[item].inventory_hostname }}"
        state: present
      with_items: "{{ groups['openstack_nodes'] }}"
      when: hostvars[inventory_hostname].ansible_default_ipv4.address is defined

    - name: restart systemd-hostnamed
      service: name=systemd-hostnamed state=restarted sleep=5
      when: ansible_distribution_version|int > 6

- name: Create ssh key if one does not exist
  hosts: controller
  gather_facts: no
  become: yes
  become_method: sudo
  any_errors_fatal: true
  tasks:
      - name: create key
        #this will not overwrite an existing key
        user: name=root generate_ssh_key=yes

      - name: fetch ssh-key generated from controller
        fetch: src=/root/.ssh/id_rsa.pub dest=/tmp/ssh_keys/ flat=yes fail_on_missing=yes

- name: Copy ssh-key to compute and network hosts
  hosts: openstack_nodes
  gather_facts: no
  become: yes
  become_method: sudo
  any_errors_fatal: true
  tasks:
    - name: copy ssh-key to nodes
      authorized_key: user=root key="{{ lookup('file', '/tmp/ssh_keys/id_rsa.pub') }}"

- name: "Workaround RHBZ#1265306 updated sqlalchemy breaks rhos-5 db_sync"
  hosts: openstack_nodes
  gather_facts: no
  become: yes
  become_method: sudo
  any_errors_fatal: true
  tasks:
      - name: exclude python-sqlalchemy from rhel-7.2 repo for rhos-5.0
        command: yum-config-manager --save --setopt=rhelosp-rhel-7-server.exclude=python-sqlalchemy
        when: (workarounds['rhbz1265306']['enabled'] is defined and workarounds['rhbz1265306']['enabled'] | bool) and
              installer.product.version == '5'

- name: Enable patched_rpm repo
  hosts: controller
  become: yes
  become_method: sudo
  any_errors_fatal: true
  tasks:
      - name: Enable patched_rpms repository
        shell: sed -i 's/enabled=0/enabled=1/' /etc/yum.repos.d/patched_rpms.repo
        register: shell_result
        changed_when: "shell_result.rc == 0"
        failed_when: "shell_result.rc > 2"
        when: patch is defined
      - name: Create swap file
        shell: if [ -e /swap ]; then echo "you already have a swap file"; else dd if=/dev/zero bs=128M count=32 of=/swap && mkswap /swap && swapon /swap && echo "DONE";  fi
