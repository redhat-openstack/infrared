---
- name: Run overcloud deploy
  hosts: undercloud
  any_errors_fatal: true
  gather_facts: no
  tasks:
      - name: check if custom overcloud_deploy.sh exists
        tags: overcloud_deploy
        stat:
            path: "{{ template_base }}/overcloud_deploy.sh"
        register: deploy_script

      - name: copy our overcloud deployment script if provided by the user
        tags: overcloud_deploy
        copy:
            src: "{{ installer.overcloud.script }}"
            dest: "/home/{{ installer.user.name }}/{{ installer.overcloud.script | basename }}"
            owner: "{{ installer.user.name }}"
            group: "{{ installer.user.name }}"
            mode: 0644
            force: yes
        when: installer.overcloud.script is defined and installer.overcloud.script

      - set_fact:
            overcloud_deploy_script: "
                {%- if deploy_script.stat.exists -%}
                {{ template_base }}/overcloud_deploy.sh
                {%- elif installer.overcloud.script is defined and installer.overcloud.script -%}
                /home/{{ installer.user.name }}/{{ installer.overcloud.script | basename }}
                {%- else -%}{%- endif -%}"
        tags: overcloud_deploy

      - name: Create deploy command
        template:
            src: deploy.command.j2
            dest: "~/overcloud_deploy.sh"
            mode: 0755
        when: overcloud_deploy_script == ''

      - name: append extra templates provided by user
        include: environment_templates.yml
        with_dict: installer.overcloud.templates|default({})
        loop_control:
            loop_var: templates_list

      - name: Enable external network access through newly created vlan interface on undercloud
        include: undercloud-ext-vlan.yml
        when: "'virthost' not in groups and installer.undercloud.ext.vlan == 'yes'"

      - name: Append storage templates to the deploy script
        include: storage/main.yml
        tags:
            - overcloud_storage
        when: "overcloud_deploy_script == '' and installer.storage.backend is defined and installer.storage.backend"

      - name: Setup the overcloud ssl
        include: ssl.yml
        tags:
            - overcloud_ssl
        when: "overcloud_deploy_script == '' and installer.overcloud.ssl == 'yes'"

      - name: Prepare the hostnames template
        include: hostnames.yml
        tags:
            - overcloud_hostnames
        when: "overcloud_deploy_script == ''"

      - block:
          - name: check for list of user defined templates
            find:
                paths: "{{ template_base }}"
                patterns: "*.yaml"
            register: template_list

          - name: append all custom templates provided by the user
            lineinfile:
                dest: "~/overcloud_deploy.sh"
                line: '-e {{ item.path }} \'
            with_items: "{{ template_list.files }}"

          - name: Append the invocation line to the base overcloud deploy script
            lineinfile:
                dest: "~/overcloud_deploy.sh"
                line: "--log-file overcloud_deployment_{{ 100 | random }}.log"
          - set_fact:
                overcloud_deploy_script: '~/overcloud_deploy.sh'
        when: overcloud_deploy_script == ''

      - name: Print deploy command
        shell: "cat {{ overcloud_deploy_script }}"

      - name: Execute the overcloud deploy script
        shell: "bash  {{ overcloud_deploy_script }} &> overcloud_install.log"
        register: overcloud_deploy
        ignore_errors: yes

      - name: Print the last few lines of the output to spot failures
        shell: "tail -n60 overcloud_install.log"

      - name: Print stack failures
        shell: "source ~/stackrc; openstack stack failures list overcloud"
        when: overcloud_deploy.rc != 0

      - name: copy summary script
        copy:
            src: files/deploy_info.sh
            dest: /home/{{ installer.user.name }}/deploy_info.sh
            mode: 0755

      - name: Execute the deployment summary script
        become: yes
        shell: "mkdir -p /var/log/extra/; source /home/{{ installer.user.name }}/stackrc; /home/{{ installer.user.name }}/deploy_info.sh 2>&1 | tee -a /var/log/extra/deploy_resources.log"

      - fail: msg="Overcloud deployment failed... :("
        when: overcloud_deploy.rc != 0
