---
- name: Add host to host list
  hosts: localhost
  gather_facts: no
  vars:
      hypervisor: "{{ provisioner.host }}"
  tasks:
      - name: add hosts to host list
        add_host:
            name: "{{ hypervisor.name }}"
            groups: "{{ hypervisor.groups| join(',') }}"
            node_label: "virthost"
            ansible_ssh_user: "{{ hypervisor.user }}"
            ansible_ssh_host: "{{ hypervisor.address }}"
            ansible_ssh_private_key_file: "{{ hypervisor.key }}"

- name: Setup the virthost
  hosts: virthost
  gather_facts: yes
  pre_tasks:
      - name: "Check if InfraRed broke yum repos on virthost"
        yum: name=libvirt state=latest
        ignore_errors: yes
        register: workaround_check_broken_repo

      - service: name=libvirtd state=restarted
        when: workaround_check_broken_repo|changed

  roles:
      - dbg: msg="Workaround repositories broken by infrared on virthost"
        when: workaround_check_broken_repo|failed
      - role: installer/rhos-release
            rr_rpm_url: "{{ private.distro.rhel.rhos_release_rpm }}"
            core_version: 10
            core_build: latest
            qe_mirror: "tlv"
        when: workaround_check_broken_repo|failed

      - {role: linux/rhel/libguestfs, when: ansible_distribution == 'RedHat'}
      - {role: provisioner/virsh}

- name: Check SSH connection to newly created VMs
  hosts: all:!localhost
  gather_facts: no
  tasks:
      - name: wait for hosts to be reachable
        wait_for:
            port: 22
            host: "{{ ansible_ssh_host }}"
            delay: 10
        delegate_to: virthost

- name: Update ansible with the new hosts
  hosts: localhost
  tasks:
      - name: update ansible with the new SSH settings
        ini_file:
            dest: "{{ inventory_dir }}/ansible.cfg"
            section: ssh_connection
            option: ssh_args
            value: "-o ForwardAgent=yes -o ServerAliveInterval=30 -o ControlMaster=auto -o ControlPersist=30m -F {{ inventory_dir }}/ansible.ssh.config"
