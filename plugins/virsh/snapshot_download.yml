---
- name: Download snapshots of virtual machines
  hosts: "{{ (_run_condition | bool) | ternary('hypervisor', 'none') }}"
  gather_facts: yes
  any_errors_fatal: true
  tasks:
    - name: Ensure a usable swift client is available
      include_role:
        name: create_venv
      vars:
        venv_destination_path: "{{ provision.virsh.snapshot.path | dirname }}/.swiftclient"
        venv_pip_packages:
          - "python-keystoneclient"
          - "python-swiftclient"

    - name: Make sure that the snapshot path exists
      file:
        path: "{{ provision.virsh.snapshot.path }}"
        state: directory

    - name: Authenticate to the cloud to get a token
      os_auth:
        cloud: "{{ lookup('env', 'OS_CLOUD') }}"
      register: _auth
      until:
        - _auth is success
        - auth_token is defined
        - auth_token is not none
        - auth_token | trim != ''
      retries: 10
      delay: 30
      delegate_to: localhost
      vars:
        ansible_python_interpreter: "{{ ansible_playbook_python }}"

    # The ansible os_object module does not currently support
    # threaded downloads, so we use the swift client instead.
    - name: Download the container contents to the snapshot path folder
      shell: |
        source .swiftclient/bin/activate
        swift download {{ provision.virsh.snapshot.container }} --prefix {{ provision.virsh.snapshot.path | basename }} --object-threads 100 --skip-identical
      args:
        executable: "/bin/bash"
        chdir: "{{ provision.virsh.snapshot.path | dirname }}"
      environment:
        OS_AUTH_TOKEN: "{{ auth_token }}"
        OS_STORAGE_URL: "{{ lookup('env', 'OS_STORAGE_URL') }}"
      register: _download_result
      retries: 10
      delay: 30
      until: _download_result is success
