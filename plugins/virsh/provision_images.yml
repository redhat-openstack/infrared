---
- name: Create base image
  hosts: hypervisor
  gather_facts: yes
  any_errors_fatal: true
  tasks:
    # Setting facts here rather than vars/ since it's the only place it's being used
    - set_fact:
          base_image: "{{ provision.image.url|basename }}"
          base_image_path: /var/lib/libvirt/images
          url: "{{ provision.image.url }}"

    # to not have to repeat base image download/setup
    # (nodes.count * node.disks.count) times (very big waste of time)
    # we do small math/logic here
    # ... we need to look in all nodes and their disk definitions
    # ... if there is at least one without import_url (and so needs base image)
    # ... (all is dictionary, no lists, so no simple map/selectattr can be used)
    # dbi_ prefix here is used to not limit these vars kind of here
    #      stands for download-base-image
    - block:
        - name: get all disks dictionaries
          set_fact:
              dbi_disks_list_tmp: "{{ nodes | map(attribute='disks') | list }}"  # | map(attribute='disks') | list }}"  # last sum is list flattening

        - name: Unpack all disks dictionaries contents
          set_fact:
              dbi_disks_list: "{{ dbi_disks_list|default([]) + item.values() }}"
          with_items: "{{ dbi_disks_list_tmp }}"

        - name: find all disks with import_url
          set_fact:
              dbi_disks_imported: "{{ dbi_disks_list | selectattr('import_url', 'defined') | selectattr('import_url') | list }}"

        - name: check if we have any not imported disk
          set_fact:
              dbi_any_not_imported: "{{ dbi_disks_list|length > dbi_disks_imported|length }}"

    - block:
        - name: download base image
          get_url:
              url: "{{ url }}"
              dest: "~/{{ base_image }}.original"
              validate_certs: "{{ url.startswith('https://url.corp.redhat.com/') | ternary(false, omit)}}"
              timeout: 30
          register: download_image_result
          until: download_image_result.msg.find("Request failed") == -1
          retries: 5
          delay: 5

        - name: copy base image for adjusting
          copy:
              remote_src: True
              src: "~/{{ base_image }}.original"
              dest: "{{ base_image_path }}/{{ base_image }}"
              owner: qemu
              group: qemu

        - name: adjust base image for this run
          shell: |
              set -ex
              export LIBGUESTFS_BACKEND=direct
              virt-sysprep -a {{ base_image_path }}/{{ base_image }} \
                  --operations dhcp-client-state,dhcp-server-state,net-hostname,net-hwaddr,udev-persistent-net

              virt-customize -a {{ base_image_path }}/{{ base_image }} \
                  --run-command 'yum remove -y cloud-init*' \
                  --root-password password:redhat \
                  --run-command 'echo "UseDNS no" >> /etc/ssh/sshd_config' \
                  --mkdir /root/.ssh \
                  --chmod 0700:/root/.ssh \
                  --upload /root/.ssh/id_rsa.pub:/root/.ssh/authorized_keys \
                  --delete /etc/dhcp/dhclient.conf \
                  --selinux-relabel
              chown qemu:qemu {{ base_image_path }}/{{ base_image }}

      when: dbi_any_not_imported|default(False)
