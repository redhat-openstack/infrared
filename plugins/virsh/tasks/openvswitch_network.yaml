- name: Load a variable file based on the OS type
  include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files:
        - "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}-hypervisor.yml"
        - 'hypervisor.yml'
      paths:
        - 'vars'

- name: install openvswitch packages
  package:
    name: "{{ openvswitch_packages }}"
    state: present

- name: enable openvswitch service
  service:
    name: "openvswitch"
    enabled: yes
    state: "started"

- name: restart NetworkManager service
  service:
    name: "NetworkManager"
    state: "restarted"

- name: create openvswitch bridge and interfaces
  shell: |
    nmcli connection add type ovs-bridge \
        conn.interface {{ network.name }} \
        con-name IR_OVS_{{ network.name }}

    nmcli connection add type ovs-port \
        conn.interface {{ network.name }} \
        master IR_OVS_{{ network.name }} \
        con-name IR_OVS_ovs-port-{{ network.name }}

    nmcli connection add type ovs-interface slave-type ovs-port \
       conn.interface {{ network.name }} \
       master IR_OVS_ovs-port-{{ network.name }} \
    {% if network.ipv4_address is defined %}
       ipv4.method static ipv4.address {{ network.ipv4_address }} \
    {% endif %}
    {% if network.ipv6_address is defined %}
       ipv6.method static ipv6.address {{ network.ipv6_address }} \
    {% endif %}
       con-name IR_OVS_ovs-if-{{ network.name }}

    {% for portgroup in portgroups if not portgroup.trunk|default(false) %}
      {% if portgroup.ipv4_address is defined or portgroup.ipv6_address is defined %}
    nmcli connection add type ovs-port \
       conn.interface {{ portgroup.name }} \
       master IR_OVS_{{ network.name }} \
       ovs-port.tag {{ portgroup.vlan_id }} \
       con-name IR_OVS_ovs-port-{{ portgroup.name }}

    nmcli connection add type ovs-interface \
       slave-type ovs-port \
       conn.interface {{ portgroup.name }} \
       master IR_OVS_ovs-port-{{ portgroup.name }} \
      {% if portgroup.ipv4_address is defined %}
       ipv4.method static ipv4.address {{ portgroup.ipv4_address }} \
      {% endif %}
      {% if portgroup.ipv6_address is defined %}
       ipv6.method static ipv6.address {{ portgroup.ipv6_address }} \
      {% endif %}
       con-name IR_OVS_ovs-if-{{ portgroup.name }}
      {% endif %}
    {% endfor %}

    {% for portgroup in portgroups if portgroup.trunk|default(false) %}
      {% for vlan in portgroup.vlans|default([]) if vlan.ipv4_address is defined or vlan.ipv6_address is defined %}
    nmcli connection add type ovs-port \
       conn.interface {{ portgroup.name }}{{ vlan.id }} \
       master {{ network.name }} \
       ovs-port.tag {{ vlan.id }} \
       con-name IR_OVS_ovs-port-{{ portgroup.name }}{{ vlan.id }}

    nmcli connection add type ovs-interface \
       slave-type ovs-port \
       conn.interface {{ portgroup.name }}{{ vlan.id }} \
       master IR_OVS_ovs-port-{{ portgroup.name }}{{ vlan.id }} \
        {% if vlan.ipv4_address is defined %}
       ipv4.method static ipv4.address {{ vlan.ipv4_address }} \
        {% endif %}
        {% if vlan.ipv6_address is defined %}
       ipv6.method static ipv6.address {{ vlan.ipv6_address }} \
        {% endif %}
       con-name IR_OVS_ovs-if-{{ portgroup.name }}{{ vlan.id }}
      {% endfor %}
    {% endfor %}
