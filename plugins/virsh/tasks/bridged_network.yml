# https://jamielinux.com/docs/libvirt-networking-handbook/bridged-network.html#bridged-network
- name: validate required nic is present
  fail:
      msg: "Cannot find bridge nic: {{ nic_name }}"
  when: nic_data == ''

- name: disable netfilter for bridges
  become: yes
  copy:
      dest: /etc/sysctl.d/bridge.conf
      content: |
          net.bridge.bridge-nf-call-ip6tables=0
          net.bridge.bridge-nf-call-iptables=0
          net.bridge.bridge-nf-call-arptables=0

- name: set bridge rules
  become: yes
  copy:
      dest: /etc/udev/rules.d/99-bridge.rules
      content: |
          ACTION=="add", SUBSYSTEM=="module", KERNEL=="bridge", RUN+="/sbin/sysctl -p /etc/sysctl.d/bridge.conf"

- name: install bridge utils for rhel-7.x
  package:
      name: bridge-utils
  when: ansible_distribution_major_version | int == 7

- name: backup interface network configuration
  become: yes
  copy:
      dest: "/etc/sysconfig/network-scripts/ir_bkp_ifcfg-{{ nic_data.device }}"
      src: "/etc/sysconfig/network-scripts/ifcfg-{{ nic_data.device }}"
      remote_src: yes
      force: no
######################################
- name: Setting the MTU size of {{ provision.host.mtu.size }}
  nmcli:
    conn_name: "{{ nic_data.device }}"
    mtu: "{{ provision.host.mtu.size }}"
    type: ethernet
    state: present
  when: provision.host.mtu.size|default('False')

- name: debug bridge network config
  debug:
    msg: "cider is {{ nic_settings.ip_address|string }}/24"

- name: Bridge network configuration
  nmcli:
     conn_name: "{{ nic_settings.name }}"
     ifname: "{{ nic_settings.name }}"
     type: bridge
     ip4: "{{ nic_settings.ip_address|string }}/24"
     autoconnect: yes
     stp: no
     forwarddelay: 2
     state: present

# todo(yfried): replace with nmcli module once this works
- name: Set bridge boot protocol to none
  shell: nmcli connection modify "{{ nic_settings.name }}" ipv4.method manual

- name: Attach interface {{ nic_data.device }} to bridge {{ nic_settings.name }}
  nmcli:
     conn_name: "{{ nic_data.device }}"
     master: "{{ nic_settings.name }}"
     state: present

- name: restart interface
  become: yes
  shell: "nmcli connection reload && nmcli connection down {{ nic_data.device }} && nmcli connection up {{ nic_data.device }}"
