---
- name: create a temporary directory for {{ topology_node.os.type }} configuration scripts
  tempfile:
    state: directory
  register: temp_dir

- name: get host name
  set_fact:
    host_name: "{{ topology_node.name }}-{{ num }}"

- name: set SSH key path
  set_fact:
    switch_ssh_key: "{{ temp_dir.path }}/id_rsa-{{ host_name }}"

- name: get undercloud ports on {{ topology_node.os.type }} from hypervisor
  shell: echo $(virsh domiflist {{ topology_node.os.type }}-0 | awk "/unde0{{ topology_node.os.type }}0/{ print NR}")
  register: undercloud_port

- name: save undercloud switchport
  set_fact:
    undercloud_switchport: "{{ undercloud_port.stdout }}"

- name: get controller ports on {{ topology_node.os.type }} from hypervisor
  shell: echo $(for i in $(virsh domiflist {{ topology_node.os.type }}-0 | grep cont | awk '{print $3}'); do echo "$(virsh domiflist {{ topology_node.os.type }}-0 | awk "/$i/{ print NR}")"; done)
  register: controller_ports

- name: save controller switchports
  set_fact:
    controller_switchports: "{{ controller_ports.stdout }}"

- name: get compute ports on {{ topology_node.os.type }} from hypervisor
  shell: echo $(for i in $(virsh domiflist {{ topology_node.os.type }}-0 | grep comp | awk '{print $3}'); do echo "$(virsh domiflist {{ topology_node.os.type }}-0 | awk "/$i/{ print NR}")"; done)
  register: compute_ports

- name: save compute switchports
  set_fact:
    compute_switchports: "{{ compute_ports.stdout }}"

- name: get ironic ports on {{ topology_node.os.type }} from hypervisor
  shell: echo $(for i in $(virsh domiflist {{ topology_node.os.type }}-0 | grep iron | awk '{print $3}'); do echo "$(virsh domiflist {{ topology_node.os.type }}-0 | awk "/$i/{ print NR}")"; done)
  register: ironic_ports

- name: save ironic switchports
  set_fact:
    ironic_switchports: "{{ ironic_ports.stdout }}"

- name: copy SSH keys to the hypervisor
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "{{ item.mode }}"
  with_items:
    - src: "{{ hostvars[host_name]['ansible_ssh_private_key_file'] }}"
      dest: "{{ switch_ssh_key }}"
      mode: "0600"
    - src: "{{ hostvars[host_name]['ansible_ssh_private_key_file'] }}.pub"
      dest: "{{ switch_ssh_key }}.pub"
      mode: "0644"

- name: copy {{ topology_node.os.type }} SSH key install script to the temp directory
  vars:
    switch_ip: "{{ hostvars[host_name]['ansible_host'] }}"
    oc_node_count: "{{ groups.controller | default([]) | length | int + groups.compute | default([]) | length | int + 1 }}"
  template:
    src: "vswitch_{{ topology_node.os.type }}_setup.sh.j2"
    dest: "{{ temp_dir.path }}/vswitch_{{ topology_node.os.type }}_setup.sh"
    mode: 0755


- name: run setup on {{ topology_node.os.type }} switch
  command: "{{ temp_dir.path }}/vswitch_{{ topology_node.os.type }}_setup.sh"

