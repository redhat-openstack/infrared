---
- name: destroy undefined vms with all remaining storage and metadata
  virt:
      name: "{{ vm_name }}"
      state: destroyed

- name: get the list of snapshots on VM
  command: "virsh snapshot-list --domain {{ vm_name }} --name --external"
  register: vm_snapshots

- name: delete external snapshots storage
  shell: |
    xml=$(virsh snapshot-dumpxml {{ vm_name }} {{ item }})
    rm -f $(echo "$xml" |  xmllint --xpath '/domainsnapshot/disks/disk/source/@file' - | sed -n 's/[^\"]*\"\([^\"]*\)\"[^\"]*/\1\n/gp')
    rm -f $(echo "$xml" |  xmllint --xpath '/domainsnapshot/memory/@file' - | sed -n 's/[^\"]*\"\([^\"]*\)\"[^\"]*/\1\n/gp')
  with_items: "{{ vm_snapshots.stdout_lines }}"
  when: vm_snapshots.stdout != ""

- name: undefine relevant VMs
  command: "virsh undefine --nvram --remove-all-storage --delete-storage-volume-snapshots --snapshots-metadata --checkpoints-metadata {{ vm_name }}"

- name: Clean /etc/hosts file
  become: yes
  lineinfile:
      dest: /etc/hosts
      regexp: ".*{{ vm_name }}.*"
      state: absent

- name: cleanup known-hosts by name
  known_hosts:
      state: absent
      name: "{{ vm_name }}"
  ignore_errors: yes

- name: remove any existing VM disks that we created
  shell: "rm -f {{ vm_name }}*disk*.qcow* {{ vm_name }}*disk*.raw"
  args:
      chdir: "{{ provision.disk.pool }}"
