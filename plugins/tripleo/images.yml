- name: Preparing the images
  hosts: undercloud
  gather_facts: no
  any_errors_fatal: true
  tags: images
  vars:
      images_source: "{{ install.images.url|default('') }}"
      images_dest: ~/base_image.qcow2
      tar_files:
          7:
              - "discovery-ramdisk.tar"
              - "deploy-ramdisk-ironic.tar"
              - "overcloud-full.tar"
          8:
              - "ironic-python-agent.tar"
              - "overcloud-full.tar"
          # Any higher version defaults to 8
      tar_images: "{{ install.images.files | default(tar_files[install.product.version|openstack_release]) | default(tar_files[8])}}"
      tmp_oc_repos_dir: /tmp/oc_repos/yum.repos.d
      overcloud_image_file: overcloud-full.qcow2
  tasks:
      - block:
          - name: Retrieve public key from private key
            command: "ssh-keygen -y -f {{ ansible_ssh_private_key_file }}"
            register: public_key_output
            delegate_to: localhost
            become: false

          - name: copy our public key to inject the images of the overcloud nodes
            copy:
                content: "{{ public_key_output.stdout }}"
                dest: "/home/{{ install.user.name }}/id_rsa.pub"
                mode: 0600
        rescue:
          - name: copy our public key to inject the images of the overcloud nodes
            copy:
                src: "~/.ssh/id_rsa.pub"
                dest: "/home/{{ install.user.name }}/id_rsa.pub"
                mode: 0600

      - include: "tasks/images/{{ install.images.task }}.yml"

      - name: list current directory
        shell: "ls -l"
        register: file_list

      - name: print file list
        debug:
            var: file_list

      - name: modify images - update to core build and install packages
        include: tasks/images/repos.yml
        # update is a func name (dict.update) so it must be used as str explicitly
        when: "{{ install.images.repos or install.images.packages|default('') }}"

      - name: upload the overcloud images to glance
        shell: "source ~/stackrc; openstack overcloud image upload --update-existing"

      - name: remove downloaded images
        file:
            path: "/home/{{ install.user.name }}/{{ item[1] }}"
            state: absent
        with_subelements:
          - "{{ image_files.results }}"
          - "files"
        when: image_files is defined and install.images.cleanup == 'yes'
