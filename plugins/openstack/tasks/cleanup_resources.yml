---
# If file is missing, nothing to do.
- name: include resource registery file
  include_vars: "{{ inventory_dir }}/resources.yml"

- name: Cleanup keypairs
  os_keypair:
      cloud: "{{ provision.cloud | default(omit) }}"
      name: "{{ item.id }}"
      state: absent
  with_items: "{{ keypairs|default([]) }}"
  register: keypairs_cleanup
  ignore_errors: yes

- name: Cleanup servers
  os_server:
      cloud: "{{ provision.cloud | default(omit) }}"
      name: "{{ item.id }}"
      state: absent
      delete_fip: yes
  with_items: "{{ servers|default([]) }}"
  register: servers_cleanup
  ignore_errors: yes

- name: Cleanup routers
  os_router:
      cloud: "{{ provision.cloud | default(omit) }}"
      name: "{{ item.id }}"
      state: absent
  with_items: "{{ routers|default([]) }}"
  register: routers_cleanup
  ignore_errors: yes

- name: Cleanup subnets
  os_subnet:
      cloud: "{{ provision.cloud | default(omit) }}"
      name: "{{ item.id }}"
      state: absent
  with_items: "{{ subnets|default([]) }}"
  register: subnets_cleanup
  ignore_errors: yes

- name: Cleanup networks
  os_network:
      cloud: "{{ provision.cloud | default(omit) }}"
      name: "{{ item.id }}"
      state: absent
  with_items: "{{ networks|default([]) }}"
  register: networks_cleanup
  ignore_errors: yes

- name: Cleanup security groups rules
  os_security_group_rule:
      cloud: "{{ provision.cloud | default(omit) }}"
      security_group: "{{ item.security_group_id }}"
      direction: "{{ item.direction }}"
      ethertype: "{{ item.ethertype }}"
      remote_ip_prefix: "{{ item.remote_ip_prefix }}"
      protocol: "{{(item.protocol == '')|ternary(item.protocol, omit)}}"
      port_range_min: "{{ item.port_range_min|int|default(omit) }}"
      port_range_max: "{{ item.port_range_max|int|default(omit) }}"
      state: absent
  with_items: "{{ security_group_rule_list|default([]) }}"
  register: sg_rules_cleanup
  ignore_errors: yes

- name: Cleanup security groups
  os_security_group:
     cloud: "{{ provision.cloud | default(omit) }}"
     state: absent
     name: "{{ item.id }}"
  with_items: "{{ security_group_list | default([]) }}"
  register: sg_cleanup

- name: Fail run if one of neutron cleanups tasks failed/skipped
  fail:
      msg: "The run failed because one of cleanup tasks failed/skipped"
  when: >
      not (routers_cleanup|succeeded and
           subnets_cleanup|succeeded and
           networks_cleanup|succeeded and
           keypairs_cleanup|succeeded and
           servers_cleanup|succeeded and
           sg_rules_cleanup|succeeded and
           sg_cleanup|succeeded)
