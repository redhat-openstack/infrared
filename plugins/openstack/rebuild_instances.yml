- name: Rebuild OpenStack instances
  hosts: localhost
  gather_facts: yes
  any_errors_fatal: true
  vars:
  tasks:
      - name: Verify instance is unlocked
        os_server_info:
          cloud: "{{ provision.cloud | default(omit) }}"
          server: "{{ item }}"
        register: rebuilt_instances
        loop: "{{ provision.instances }}"
        until: not rebuilt_instances.openstack_servers[0].locked|default(False)
        retries: 30
        delay: {{ 600 | random(start=500) }}

      - name: Pause for 5 minutes to build app cache
        pause:
          minutes: {{ 5 | random(start=1) }}

      - name: Verify instance is unlocked (again)
        os_server_info:
          cloud: "{{ provision.cloud | default(omit) }}"
          server: "{{ item }}"
        register: rebuilt_instances
        loop: "{{ provision.instances }}"
        until: not rebuilt_instances.openstack_servers[0].locked|default(False)
        retries: 30
        delay: {{ 600 | random(start=500) }}

      - name: Lock instance
        os_server_action:
          cloud: "{{ provision.cloud | default(omit) }}"
          action: lock
          server: "{{ item }}"
        loop: "{{ provision.instances }}"
        when: "{{ provision.lock|default(False) }}"

      - name: Rebuild instances
        os_server_action:
          cloud: "{{ provision.cloud | default(omit) }}"
          image: "{{ provision.image | default(omit) }}"
          action: rebuild
          server: "{{ item }}"
        loop: "{{ provision.instances }}"

      - name: Add created servers to inventory
        vars:
            instance_flavor: "{{ openstack_flavors | first }}"
        add_host:
            # item.item is the server object
            name: "{{ item.item }}"
            ansible_host: "{{ item.openstack_servers[0].accessIPv4 }}"
            groups: "{{ provision.groups }}"
            ansible_ssh_private_key_file: "{{ provision.key.file | expanduser }}"
            ansible_user: "{{ provision.username }}"
        with_items: "{{ rebuilt_instances.results }}"
