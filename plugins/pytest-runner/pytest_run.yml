- name: Run Pytest
  hosts: tester
  gather_facts: yes
  any_errors_fatal: true
  vars:
      repo_folder: 'pytest-repo/'
      output_prefix: 'pytest-results-{{ ansible_date_time.epoch }}.xml'
      #pytest_output_filename: 'pytest-results-{{ ansible_date_time.epoch }}.xml'
  tasks:
      - name: intall pytest via pip
        pip:
          name: pytest
          state: present
        become: true

      - name: Install packages
        become: true
        package:
            name:
              - git
            state: latest

      - name: Clean old folder
        file:
            path: "{{ repo_folder }}"
            state: absent

      - name: Clean old files
        file:
            path: "{{ item }}-{{ output_prefix }}"
        loop: "{{ test.file }}"

      - name: Cloning git repo
        shell: |
            export GIT_SSL_NO_VERIFY=true
            git clone {{ test.repo }} {{ repo_folder }}
        tags: skip_ansible_lint

      - name: Execute test
        ignore_errors: true
        shell: pytest -v {{ repo_folder }}{{ item }}
               --junitxml={{ item }}-{{ output_prefix }} 2>&1 --tb=no -r fp
        when: test.run|default(False)
        loop: "{{ test.file }}"
        register: pytest_execution

      - name: Fetch JUnit XML results file
        fetch:
            src: "{{ pytest_output_filename }}"
            dest: "{{ inventory_dir }}/pytest_results/{{ item }}-{{ output_prefix }}"
            flat: yes
            fail_on_missing: yes
        loop: "{{ test.file }}"