# 'undercloud_version' has been setted as host's fact for undercloud nodes.
- include: tasks/ironic_pxe_ipmitool.yml
  when: "install.version|default(hostvars[groups['undercloud'][0]]['undercloud_version']) | openstack_release >= 11"

- name: Generate the instackenv.json
  hosts: undercloud
  gather_facts: no
  any_errors_fatal: true
  tasks:
      - name: grab undercloud private key
        command: "cat ~/.ssh/id_rsa"
        register: uc_pkey_result

      - name: get information about vm's from hypervisor
        delegate_to: hypervisor
        shell: |
            NODE_XML=`virsh dumpxml {{ item }}`
            disks_list="["
            for dsk in $(virsh domblklist {{ item }} | tail -n +3 | awk '{print $1}'); do
                disks_list="${disks_list}\"${dsk}\","
            done
            disks_list="${disks_list}]"
            disks_list="$(echo ${disks_list} | sed 's/,]/]/g')"

            echo "{
                'name': '{{ item }}',
                'arch': '`echo "$NODE_XML" | grep arch | cut -d\' -f2`',
                'memory_kibs': '`echo "$NODE_XML" | grep currentMemory | cut -d\< -f2 | cut -d\> -f2`',
                'mac': '`echo "$NODE_XML" | grep data -B 1 | grep mac | cut -d\' -f2`',
                'cpu': '`echo "$NODE_XML" | grep vcpu | cut -d\< -f2 | cut -d\> -f2`',
                'disk_bytes': '`virsh domblkinfo {{ item }} vda | grep -e Capacity | cut -d\: -f2 | xargs`',
                'disks': '${disks_list}',
            }"
        with_items: "{{ groups['overcloud_nodes'] }}"
        register: nodes_info
        tags:
            - skip_ansible_lint

      - name: prepare instack.json if one doesn't exist
        vars:
            instack_input: "{{ (install.instackenv|default({})).file|default('') }}"
            instack_output: "~/instackenv.json"
            # json file shouldn't hold newlines
            undercloud_private_key: "{{ uc_pkey_result.stdout_lines | join('\\n')}}"
        template:
            src: templates/instackenv.json.j2
            dest: "{{ instack_output }}"
        when: not instack_input

      - name: Retrieve public key from private key to localhost
        command: "ssh-keygen -y -f ~/.ssh/id_rsa"
        register: uc_pubkey_result

      - name: insert the public key to the known hosts in hypervisor
        authorized_key:
            user: "{{ ansible_ssh_user }}"
            key: "{{ uc_pubkey_result.stdout }}"
        delegate_to: hypervisor

      # Using delegete here because of
      # https://github.com/ansible/ansible/issues/16972
      # This issue causes an exception when that playbook is included with the false condition
      - name: power off overcloud nodes
        virt:
            name: "{{ item }}"
            state: destroyed
        with_items: "{{ groups['overcloud_nodes'] }}"
        delegate_to: hypervisor
