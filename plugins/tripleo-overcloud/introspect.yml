- name: Auto generate instackenv.json for virt
  import_playbook: "{{ overcloud_virt | default('hypervisor.yml') }}"
  tags:
      - hypervisor
      - ironic
      - instack
  when: "'hypervisor' in groups"

- name: Auto generate instackenv.json for ovb
  import_playbook: "{{ overcloud_ovb | default('ovb.yml') }}"
  tags:
     - ironic
     - instack
     - ovb
  when: "'bmc' in groups"

- name: Introspect our machines
  hosts: undercloud
  gather_facts: no
  any_errors_fatal: true
  vars:
      undercloud_provision_cidr: "{{ ansible_br_ctlplane.ipv4.network }}/{{ ansible_br_ctlplane.ipv4.netmask }}"
      instack_input: "{{ (install.instackenv|default({})).file | default('') }}"
      ironic_cli: "{{ (install.version|default(undercloud_version)|openstack_release < 14)|ternary('ironic node-list','openstack baremetal node list') }}"
  tasks:
      - name: inject instackenv file if provided by the user
        tags: ironic
        copy:
            src: "{{ instack_input }}"
            dest: "~/{{ instack_input | basename }}"
        when: not instack_input == ''
        register: inject_instackenv

      - name: verify that instackenv json file exists
        stat:
            path: "~/{{ (instack_input or 'instackenv.json') | basename }}"
        register: instack_file_path
        tags: ironic

      - name: fail if instackenv file is missing
        fail:
            msg: instackenv file is missing
        when: not instack_file_path.stat.exists
        tags: ironic

      # FIXME(psedlak): netboot boot for non-virthost nodes?
      # Not confirmed atm, but there is likely change needed (for 13+?),
      # to in place of --instance-boot-option local,
      # use netboot instead of local, when nodes are not local vms?
      # That would also mean to instead of passing instance-boot-option to
      # import, to instead after import do loop over all nodes uuids,
      # and based on if they are virthost or not, set corresponding value.
      - name: register hosts to instack and configure boot
        shell: |
            set -eo pipefail
            source ~/stackrc

            {% if install.version|default(undercloud_version) |openstack_release < 13 %}
            openstack baremetal import --json {{ instack_file_path.stat.path }}
            openstack baremetal configure boot
            {% else %}
            openstack overcloud node import --instance-boot-option=local {{ instack_file_path.stat.path }}
            {% endif %}
        tags:
            - ironic
            # FIXME(yfried) use "--os-cloud" instead of "source rc" and replace with command
            - skip_ansible_lint

      - name: set the root device for baremetal nodes (with size hint)
        shell: |
            source ~/stackrc
            NODE_UUID=$({{ ironic_cli }} | awk '/{{ item.name | default(item) }}/ {print $2}' )
            ironic node-update ${NODE_UUID} add properties/root_device='{"size": {{ hostvars[item].disk  }} }'
            #TODO(skatlapa): Check if Ironic CLI BZ#1602066 affects baremetal update command
        with_items: "{{ groups['overcloud_nodes'] | default([])}}"
        when: "'bmc' in groups"

      - name: set root-disk override fact
        set_fact:
            root_disk: "{{ install.root.disk.get('override', []) }}"
        when: install.get('root',{}).get('disk',{})

      - name: configure root-disk for multi-disk nodes
        shell: |
            set -exo pipefail

            REGEX=".*-[0-9]+$"
            source ~/stackrc

            {% for node in item.node.split(':') %}
                if [[ "{{ node }}" =~ $REGEX ]]; then
                    openstack baremetal node set \
                      --property root_device='{"{{item.hint}}":"{{item.hintvalue}}"}' {{ node }}
                else
                    openstack baremetal node list|awk '/{{ node }}/ {print $2}'| \
                    xargs -I{} openstack baremetal node set {} --property root_device='{"{{item.hint}}":"{{item.hintvalue}}"}'
                fi
            {% endfor %}
        tags: skip_ansible_lint
        with_items: "{{ root_disk }}"
        when: root_disk is defined

      # Because introspection is faulty and tricky especially on baremetals
      # we need to check multiple times if any failure occured. Reasonable time
      # for this process to take is < 10 minutes no matter how many nodes for baremetals.
      # Virtual setups don't suffer from long timeouts caused by delays in boot
      # process, BIOS timeouts and errors in firmware so they are covered by such timeout
      # seamlessly. This must be async task because we need to enforce explicit timeout
      # for this process, otherwise timeout is controlled by ironic and seriously long
      # (usually one must wait for 1 hour if any failure on any node occurs).

      - name: start node introspection
        shell: |
            source ~/stackrc
            {% if install.version|default(undercloud_version) |openstack_release < 13 %}
            openstack baremetal introspection bulk start
            {% else %}
            openstack overcloud node introspect --provide --all-manageable
            {% endif %}
        tags:
            # FIXME(yfried) use "--os-cloud" instead of "source rc" and replace with command
            - skip_ansible_lint
        register: bulk_intro_result
        poll: 50
        async: 1000
        retries: 20
        delay: 90
        ignore_errors: yes

      # Async tasks in Ansible don't have rc defined if they failed (for some reason) which makes registered
      # variable different for various outcomes and just using "result" key is not possible here.
      # Following fact will construct properly introspection result properly from possibly
      # different statutes presented by output of async task.
      - set_fact:
            bulk_intro_ok: "{{ true if bulk_intro_result.rc is defined and bulk_intro_result.rc == 0 else false }}"

      # If bulk introspection failed, play introspection_recovery playbook which runs node-by-node introspection
      # and also helps with debugging and recovery.
      - name: Recover from errors during bulk introspection
        include_tasks: tasks/introspection_recovery.yml
        when: not bulk_intro_ok

      # when we need to use vbmc for OSP10 we have an issue [1] with pxe_impi driver
      # and the fix [2] for that issue cannot be backported to the OSP10:
      # [1] https://bugzilla.redhat.com/show_bug.cgi?id=1373468
      # [2] https://github.com/openstack/ironic-inspector/commit/0ce5cdb7c8344e981a919aab136c4c2eba79d4a2
      - name: switch pxe_ssh to the pxe_impi
        shell: |
            source ~/stackrc
            NODE_UUID=$({{ ironic_cli }} | grep -w {{ item.key }} | awk '{print $2}' )
            openstack baremetal node set $NODE_UUID \
                --driver pxe_ipmitool \
                --driver-info ipmi_username={{ install.vbmc.username }} \
                --driver-info ipmi_address=::ffff:{{ vbmc_management_address }} \
                --driver-info ipmi_password={{ install.vbmc.password }} \
                --driver-info ipmi_port={{ item.value }}
        with_dict: "{{ vbmc_ports }}"
        when:
            - install.vbmc.force
            - install.version|default(undercloud_version) | openstack_release == 10
            - vbmc_ports is defined
