---
- name: create clouds.yml file
  hosts: undercloud
  gather_facts: no
  tasks:
    - name: check if we have stackrc
      stat:
          path: /home/stack/stackrc
      register: stackrc

    - block:
        - name: get the undercloud cloud auth variables
          shell: |
              for key in $( set | awk '{FS="="}  /^OS_/ {print $1}' ); do unset $key ; done
              source /home/stack/stackrc
              echo "
              auth_url: $OS_AUTH_URL
              username: $OS_USERNAME
              password: $OS_PASSWORD
              project_name: ${OS_PROJECT_NAME:-$OS_TENANT_NAME}"
          register: cloud_details_uc

        - set_fact:
              cloud_auth: "{{ cloud_auth|default({}) | combine({'clouds':{'undercloud':{'auth': cloud_details_uc.stdout|from_yaml }}} , recursive=True) }}"
      when: stackrc.stat.exists

    - name: check if we have overcloudrc
      stat:
          path: /home/stack/overcloudrc
      register: overcloudrc

    - block:
        - name: get overcloud cloud variables
          shell: |
              for key in $( set | awk '{FS="="}  /^OS_/ {print $1}' ); do unset $key ; done
              source /home/stack/overcloudrc
              echo "
              auth_url: $OS_AUTH_URL
              username: $OS_USERNAME
              password: $OS_PASSWORD              
              project_name: ${OS_PROJECT_NAME:-$OS_TENANT_NAME}"
          register: cloud_details_oc

        - set_fact:
              cloud_auth: "{{ cloud_auth|default({}) | combine({'clouds':{'overcloud':{'auth': cloud_details_oc.stdout|from_yaml }}}, recursive=True) }}"
      when: overcloudrc.stat.exists

    - name: updater clouds.yaml file
      blockinfile:
          content: "{{ cloud_auth | to_nice_yaml}}"
          dest: "~/clouds.yaml"
          marker: "# {mark} ANSIBLE MANAGED BLOCK {{ cloud_auth.keys() }}"
          backup: yes
          create: yes