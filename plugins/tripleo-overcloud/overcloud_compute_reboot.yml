- name: Overcloud Compute Reboot
  hosts: compute:!unused
  gather_facts: false
  any_errors_fatal: true
  serial: 1
  vars:
      overcloud_version: "{{ install.version | default(undercloud_version) | openstack_release }}"
  tasks:
      - set_fact:
            overcloud_rc: "/home/stack/{{ install.overcloud.stack }}rc"
      # Evacuate compute node before reboot
      - block:

          - name: Register storage backend type
            shell: |
                source {{ overcloud_rc }}
                openstack volume service list -f json | jq -r -c '.[] | select(.Binary | contains("cinder-volume")) | .Host' | sed s/hostgroup@tripleo_//
            register: storage_backend

          - name: Register hypervisor name fqdn
            shell: |
                source {{ overcloud_rc }}
                openstack hypervisor list -f value -c 'Hypervisor Hostname' | grep {{ inventory_hostname }}
            register: compute_fqdn

          - name: Register instances running on compute node
            shell: |
                source {{ overcloud_rc }}
                openstack server list --all --host {{ compute_fqdn.stdout }} -f json | jq -r -c '.[] | select(.Status | contains("ACTIVE") or contains("PAUSED")) | .ID'
            register: compute_instances

          - name: Quiesce compute node
            shell: |
                source {{ overcloud_rc }}
                nova host-evacuate-live {% if 'ceph' not in storage_backend.stdout %}--block-migrate{% endif %} {{ compute_fqdn.stdout }}
            when: compute_instances.stdout | length > 0

          - name: Wait for compute node to get quiesced
            shell: |
                source {{ overcloud_rc }}
                openstack server list --all --host {{ compute_fqdn.stdout }} -f json | jq -r -c '[.[] | select(.Status | contains("ACTIVE") or contains("PAUSED") or contains("MIGRATING"))] | length'
            register: compute_node_instances
            until: compute_node_instances.stdout.find("0") > -1
            retries: 30
            delay: 5
            when:
              - compute_instances.stdout | length > 0
        delegate_to: "{{ groups['undercloud']|first }}"
        when:
          - "'compute' in group_names"
          - groups.compute|difference(groups.unused|default([]))|length > 1
          - install.postreboot_evacuate|default(False)

      # We check with systemctl if system has finished booting up
      # but on RHEL7 we don't have --wait option so we check only
      # for the state. We accept running or degraded as some
      # services seem to flap after bootup but work fine.
      - name: reboot the node
        become: true
        reboot:
            reboot_timeout: "{{ install.reboot.timeout }}"
            test_command: >-
                systemctl is-system-running | grep -e running -e degraded

      - name: Assert nova-compute and Open vSwitch agent are up after reboot
        block:
          - name: Register hypervisor name fqdn
            shell: |
                source {{ overcloud_rc }}
                openstack hypervisor list -f value -c 'Hypervisor Hostname' | grep {{ inventory_hostname }}
            register: compute_fqdn

          - name: Waiting for nova-compute service to go up
            shell: |
                source {{ overcloud_rc }}
                openstack compute service list --host {{ compute_fqdn.stdout }} -f json | jq -r -c '.[] | select(.Binary | contains("nova-compute")) | .State' | tr A-Z a-z
            register: nova_compute_up
            until: nova_compute_up.stdout.find('up') > -1
            retries: 60
            delay: 5

          - block:
              - name: Waiting for OVS agent on compute node to come up for OSP > 10
                shell: |
                    source {{ overcloud_rc }}
                    openstack network agent list --host {{ compute_fqdn.stdout }} -f json | jq -r -c '.[] | select(.Binary | contains("neutron-openvswitch-agent")) | .Alive'
                register: nova_ovs_up
                until: nova_ovs_up.stdout.find(':-)') > -1 or nova_ovs_up.stdout.find('true') > -1
                retries: 60
                delay: 5
                when: >
                    (overcloud_version|int < 15 and not install.network.ovn) or
                    (install.network.ovs and overcloud_version|int >= 15)

              - name: Waiting for ovn-controller agent on compute node to come up
                shell: |
                    source {{ overcloud_rc }}
                    openstack network agent list --host {{ compute_fqdn.stdout }} -f json | jq -r -c '.[] | select(.Binary | contains("ovn-controller")) | .Alive'
                register: ovn_controller_up
                until: ovn_controller_up.stdout.find('true') > -1 or ovn_controller_up.stdout.find(':-)') > -1
                retries: 60
                delay: 5
                when:
                  - overcloud_version|int >= 15
                  - not install.network.ovs

              - name: Waiting for networking-ovn-metadata-agent agent on compute node to come up
                shell: |
                    source {{ overcloud_rc }}
                    openstack network agent list --host {{ compute_fqdn.stdout }} -f json | jq -r -c '.[] | select(.Binary | contains("networking-ovn-metadata-agent")) | .Alive'
                register: ovn_meta_up
                until: ovn_meta_up.stdout is match('true') or ovn_controller_up.stdout is regex(':-\)|true')

                retries: 60
                delay: 5
                when:
                  - overcloud_version|int >= 15
                  - not install.network.ovs
            when: overcloud_version|int > 10

          - name: Waiting for OVS agent on compute node to come up for OSP == 10
            shell: |
                source {{ overcloud_rc }}
                openstack network agent list -f json | jq -r -c '.[] | select(.Binary | contains("neutron-openvswitch-agent")) | select(.Host | contains("{{ compute_fqdn.stdout }}")) | .Alive'
            register: nova_ovs_up
            until: nova_ovs_up.stdout.find('true') > -1
            retries: 60
            delay: 5
            when: overcloud_version|int == 10
        delegate_to: "{{ groups['undercloud']|first }}"
        when:
          - "'compute' in group_names"

      - name: migrate instance back to {{ compute_fqdn.stdout }}
        shell: |
          source {{ overcloud_rc }}
          nova live-migration {% if 'ceph' not in storage_backend.stdout %}--block-migrate{% endif %} {{ item }} {{ compute_fqdn.stdout }}
          openstack server show {{ item }}  -f json | jq -r -c '. | .["OS-EXT-SRV-ATTR:host"]'
        register: instance_host
        until: instance_host.stdout.find(compute_fqdn.stdout) > -1
        retries: 30
        delay: 5
        with_items: "{{ compute_instances.stdout_lines }}"
        delegate_to: "{{ groups['undercloud']|first }}"
        when:
          - "'compute' in group_names"
          - groups.compute|difference(groups.unused|default([]))|length > 1
          - install.postreboot_evacuate|default(False)
          - compute_instances.stdout | length > 0
