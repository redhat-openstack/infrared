- name: Prepare the overcloud configuration
  hosts: undercloud
  gather_facts: yes
  any_errors_fatal: true
  vars:
      source_dir: "{{ install.deployment.files }}"
      # FIXME(yfried): use '~/' once https://github.com/ansible/ansible/issues/19869 is resolved
      template_base: "{{ ansible_user_dir }}/{{ source_dir | basename }}"
      network_environment_file: "network-environment{{ (install.network.protocol == 'ipv6') | ternary('-v6','') }}.yaml"
  tasks:
      - name: read all flavors
        shell: |
            source ~/stackrc
            openstack flavor list | awk  'FNR>3 {print $4}' | sed '/^\s*$/d'
        register: existing_flavors
        tags: skip_ansible_lint

      - name: Create template base folder
        file:
            path: '{{ template_base }}'
            state: directory
            mode: u=rwX,g=rX,o=rX

      - name: Ensure deployment folder nested structure exists
        file:
            path: '{{ template_base }}/{{ item.path }}'
            state: directory
        with_filetree: '{{ source_dir }}'
        when: item.state == 'directory'

      # consider all the files as templates
      - name: Copy deployment folder
        vars:
            nics_subfolder: "{{ (install.version|default(undercloud_version)|openstack_release > 10) | ternary('osp11', 'legacy') }}"
        template:
            src: '{{ item.src }}'
            dest: '{{ template_base }}/{{ item.path | regex_replace("\.j2$", "") }}'
        with_filetree: '{{ source_dir }}'
        when: item.state == 'file'

      - name: inject debug.yaml so it will be auto discovered with user templates
        template:
            src: templates/debug.yaml.j2
            dest: "{{ template_base }}/debug.yaml"
        when: install.overcloud.debug

      - name: set parameter_defaults for config_heat.yaml
        set_fact:
            config_heat_yaml:
                parameter_defaults: "{{ install.get('config', {}).get('heat', {}) }}"
        when: install.get('config', {}).get('heat', {})

      - name: set resource_registry for config_heat.yaml
        vars:
            config_resource: "{{ install.get('config', {}).get('resource', {}) }}"
        set_fact:
            config_heat_yaml: "{{ config_heat_yaml | default({}) | combine({'resource_registry': config_resource}) }}"
        when: install.get('config', {}).get('resource', {})

      - name: inject config_heat.yaml so it will be auto discovered with user templates
        copy:
            dest: "{{ template_base }}/config_heat.yaml"
            content: "{{ config_heat_yaml | to_nice_yaml }}"
        when: config_heat_yaml is defined

      - name: check if custom overcloud_deploy.sh exists
        stat:
            path: "{{ template_base }}/overcloud_deploy.sh"
        register: deploy_script

      - name: copy our overcloud deployment script if provided by the user
        tags: overcloud_deploy
        copy:
            src: "{{ install.overcloud.script }}"
            dest: "~/{{ install.overcloud.script | basename }}"
            mode: 0644
            force: yes
        when: install.overcloud.script|default('')

      - set_fact:
            overcloud_deploy_script: "{{ install.overcloud.script|default('') or deploy_script.stat.path|default('') | basename }}"

      - name: create the base overcloud deploy script
        template:
            src: "{{ deploy_script_template | default('templates/overcloud_deploy.sh.j2') }}"
            dest: "~/overcloud_deploy.sh"
            mode: 0755
        when: not overcloud_deploy_script|default('')

      - name: append extra templates provided by user
        include_tasks: tasks/environment_templates.yml
        with_items: "{{ install.overcloud.templates|default([]) }}"
        loop_control:
            loop_var: templates_list_file
        # avoid empty strings
        when: "templates_list_file != ''"

      - name: Enable external network access through newly created vlan interface on undercloud
        include_tasks: tasks/undercloud-ext-vlan.yml
        tags:
            - ext_vlan
        vars:
            undercloud_public_ip: "{{ install.public.get('vlan', {}).get('ip', '') }}"
        when:
            - "'hypervisor' not in groups or install.hybrid|default(false)"
            - undercloud_public_ip

      # ensure we have all envs/roles referenced in deploy script for container image preparation
      - include_tasks: tasks/append_script.yml
        when:
            - not overcloud_deploy_script|default('')
            - install.containers|default('')
            - install.version|default(undercloud_version)|openstack_release >= 12

      - include_role: name="containers/prepare-templates"
        tags:
            - containers
        when:
            - install.containers|default('')
            - install.version|default(undercloud_version)|openstack_release >= 12

      - name: add environment plan to deply script
        lineinfile:
            dest: "~/overcloud_deploy.sh"
            line: '-p ~/environment_plan.yaml \'
        when: (install.environment|default({})).plan|default(false)

      - include_tasks: tasks/append_script.yml
        when: not overcloud_deploy_script|default('')

      - name: set overcloud_deploy script
        set_fact:
           overcloud_deploy_script: '~/overcloud_deploy.sh'
        tags: deploy

      - name: Print deploy command
        command: "cat {{ overcloud_deploy_script }}"
        tags: deploy
