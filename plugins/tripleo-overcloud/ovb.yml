- name: Generate the instackenv.json
  hosts: undercloud
  gather_facts: no
  any_errors_fatal: true
  vars:
      # todo(obaranov) dynamically get/read from settings the ipmi interface name
      ipmi_interface: "eth1"

      # depends on the host cloud. Should be 50 less than on host cloud
      ovb_mtu_value: 1350
  vars_files:
      - vars/instackenv/profiles.yml
  tasks:
      - name: Get undercloud private key
        command: "cat ~/.ssh/id_rsa"
        register: uc_pkey_result

      - name: Prepare instack.json if one doesn't exist
        vars:
            instack_input: "{{ (install.instackenv|default({})).file|default('') }}"
            instack_output: "~/instackenv.json"
        template:
            src: templates/instackenv-bmc.json.j2
            dest: "{{ instack_output }}"
        when: not instack_input

      - name: Read {{ ipmi_interface }} interface MTU value
        command: "cat /sys/class/net/{{ ipmi_interface }}/mtu"
        register: mtu_val
        changed_when: False

      - name: Check if the right MTU was configured when deploying the undercloud
        fail:
            msg: |
                The Undercloud MTU should be {{ ovb_mtu_value }} in undercloud.conf, make sure
                undercloud is deployed with local_mtu = {{ ovb_mtu_value }}.
        when: mtu_val.stdout|int != ovb_mtu_value

      - name: Set neutron subnet quota to unlimited
        ignore_errors: true
        shell: >
            source ~/stackrc;
            openstack quota set --subnets -1 --networks -1 --secgroups -1 admin;
