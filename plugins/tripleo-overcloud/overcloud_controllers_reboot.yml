- name: Overcloud Controllers Reboot
  hosts: overcloud_nodes:!ceph:!compute:!unused
  gather_facts: false
  any_errors_fatal: true
  serial: 1
  vars:
      overcloud_version: "{{ install.version | default(undercloud_version) | openstack_release }}"
  tasks:
      # Check the following conditions:
      # A) pcmk_remote is succeeded will be true is this is a pcmk-remote node
      # B) pcmk_core is succeeded will be true when we are pcmk core node
      #    aka a pcmk node but not a remote
      # C) both pcmk_remote and pcmk_core will be 'failed' if we are not part of
      #    a pcmk cluster (networker node/ceph node)
      # NB: we use crm_mon and not pcs status due to:
      #     https://bugzilla.redhat.com/show_bug.cgi?id=1830552
      - name: check if this is a pcmk-remote node
        become: true
        shell: |
            crm_mon -1 2>&1 | grep -w 'RemoteOnline:' | grep -w {{ inventory_hostname }}
        register: pcmk_remote
        ignore_errors: true

      - name: check if this is a pacemaker core node
        become: true
        shell: crm_mon -1
        register: pcmk_core
        ignore_errors: true
        failed_when: pcmk_remote is succeeded or pcmk_core is failed

      - name: stop pcs cluster on core cluster nodes
        become: true
        command: "pcs cluster stop --request-timeout=300 {% if groups['controller']|length  < 3 %} --force {% endif %}"
        when: pcmk_core is succeeded

      - name:  stop pcs cluster on remote cluster nodes
        become: true
        shell: "pcs cluster stop --request-timeout=300; systemctl stop pacemaker_remote"
        when: pcmk_remote is succeeded

      # We check with systemctl if system has finished booting up
      # but on RHEL7 we don't have --wait option so we check only
      # for the state. We accept running or degraded as some
      # services seem to flap after bootup but work fine.
      - name: reboot the node
        become: true
        reboot:
            reboot_timeout: "{{ install.reboot.timeout }}"
            test_command: >-
                systemctl is-system-running | grep -e running -e degraded

      - name: check pcmk_remote node is up
        become: true
        shell: crm_mon -1 2>&1 | grep -w 'RemoteOnline:'
        register: remote_online
        until: "inventory_hostname in remote_online.stdout"
        retries: 6
        delay: 5
        when: pcmk_remote is succeeded

      - name: wait for pacemaker node to recover
        become: true
        shell: crm_mon -1 2>&1 | grep -w 'Online:'
        register: pcs_status
        until: "inventory_hostname in pcs_status.stdout"
        retries: 60
        delay: 5
        when: pcmk_core is succeeded

      - name: cleanup pacemaker resource
        shell: |
            pcs resource restart {{ item }} ;
            pcs resource cleanup {{ item }}
        become: true
        ignore_errors: true
        with_items:
          - "{{ cleanup_services }}"
        when:
          - cleanup_services is defined
          - cleanup_services|default({})|length > 0
          - pcmk_core is succeeded or pcmk_remote is succeeded

      # Todo(yprokule): enhance search patterns
      - name: check for any stopped pcs resources
        become: true
        shell: |
            crm_mon -1 2>&1 | grep {{ item }} || /bin/true
        register: srv_status
        until: srv_status.stdout.find("{{ item }}") == -1
        ignore_errors: true
        retries: 36
        delay: 10
        with_items:
            - "{{ (overcloud_version|int > 11) | ternary('Stopped', 'Stopped:') }}"
            - "Starting"
            - "Promoting"
        when:
            - pcmk_core is succeeded or pcmk_remote is succeeded
            - "(install.deployment.files | basename) == 'virt'"

      - name: Report pacemaker status for stopped resources
        become: true
        register: fail_stop
        command: crm_mon -1 2>&1
        when:
            - srv_status is failed

      - name: Stopped resources found
        fail:
            msg: Some pacemeker resource failed to come back online after reboot
        when:
            - fail_stop is changed


      # Todo(yprokule): enhance search patterns
      - name: Check for any unmanaged pcs resources
        become: true
        shell: |
            crm_mon -1 2>&1 | grep {{ item }} || /bin/true
        register: srv_status
        until: srv_status.stdout.find("{{ item }}") == -1
        ignore_errors: true
        retries: 36
        delay: 10
        with_items:
            - 'unmanaged'
        when: pcmk_core is succeeded or pcmk_remote is succeeded

      - name: Report pacemaker status for unmanaged resources
        become: true
        register: fail_unmanaged
        command: pcs status
        when:
            - srv_status is failed

      - name: Unmanged resources found
        fail:
            msg: Some pacemeker resource(s) unmanged after reboot
        when:
            - fail_unmanaged is changed
