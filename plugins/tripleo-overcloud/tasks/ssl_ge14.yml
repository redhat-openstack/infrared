- name: Prepare the overcloud configuration
  hosts: undercloud
  gather_facts: yes
  any_errors_fatal: true
  vars:
      source_dir: "{{ install.deployment.files }}"
      template_base: "{{ ansible_user_dir }}/{{ source_dir | basename }}"
      network_environment_file: "network-environment{{ (install.network.protocol == 'ipv6') | ternary('-v6','') }}.yaml"
  tasks:

  - set_fact:
      oc_cert_path: "{{ template_base }}/overcloud-cert"

  - set_fact:
      oc_cert_file: "{{ oc_cert_path }}/server.crt"
      oc_cert_key: "{{ oc_cert_path }}/private.key"

  - name: copy the enable-tls.yaml file locally
    vars:
        template_dir: "{{ install.heat.templates.basedir }}/environments/ssl"
    copy:
        src: "{{ template_dir}}/{{ item }}"
        dest: "{{ template_base }}/{{ item }}"
        remote_src: yes
    with_items:
          - enable-tls.yaml
    register: copy_templates

  - name: adjust the reference of template dir
    vars:
        replace_with: "{{ item.src|dirname|dirname|dirname }}"
        regex: "{{ '\\.\\./\\.\\.' }}"
    replace:
        dest: "{{ item.dest }}"
        replace: "{{ replace_with }}"
        regexp: "{{ regex }}"
    with_items: "{{ copy_templates.results }}"

  - name: extract our external allocation pools start value
    command: "cat {{ template_base }}/network/{{ network_environment_file }}"
    register: network_env
    when: "not 'bmc' in groups"

  - name: get IP address of VIP
    set_fact:
        external_allocation_pool_start: "{{ (network_env.stdout | from_yaml).parameter_defaults.ExternalAllocationPools[0].start }}"
    when: "not 'bmc' in groups"

  - name: generate SSL subject when ovb
    set_fact:
        external_allocation_pool_start: "ir-{{ 9999 | random }}"
    when: "'bmc' in groups"

  - name: set correct selinux context for certmonger's access
    become: yes
    sefcontext:
        target: '{{ oc_cert_path }}(/.*)?'
        setype: cert_t
        state: present
        reload: yes

  - name: create directory to store OC certificate
    file:
        path: "{{ oc_cert_path }}"
        state: directory
        recurse: yes
        mode: 0755

    # restorecon since sefcontext ansible module doesn't apply context to filesystem
  - name: restore selinux context
    become: yes
    command: >
        restorecon -R -v {{ oc_cert_path }}

  - name: create certificate request signed by cermonger's local CA
    become: yes
    vars:
        cn_string: >
            "CN={{ external_allocation_pool_start }},OU=QE,O=Red Hat,L=Raleigh,ST=NC,C=US"
    command: >
        getcert request -r -I overcloud -N {{ cn_string }}
        -k {{ oc_cert_key}} -c local
        -f {{ oc_cert_file }}
        -A {{ external_allocation_pool_start }}

  - name: fix user permissions for certificate and key
    become: yes
    file:
        path: "{{ oc_cert_path }}"
        state: directory
        recurse: yes
        owner: stack
        group: stack

  - name: update the tls template
    replace:
        dest: "{{ template_base }}/enable-tls.yaml"
        replace: IP_ADDRESS
        regexp: CLOUDNAME

  - name: register the CA certificate
    become: yes
    become_user: stack
    command: "cat {{ oc_cert_file }}"
    register: oc_cert

  - name: register the private key
    become: yes
    become_user: stack
    command: "cat {{ oc_cert_key }}"
    register: oc_privkey

  - name: insert the content of the CA certificate and private key respectfully
    replace:
        dest: "{{ item.dest }}"
        regexp: "{{ item.regex }}"
        replace: "{{ item.replace_with }}"
    with_items:
        - dest: "{{ template_base }}/enable-tls.yaml"
          regex: "The contents of your certificate.*$"
          replace_with: "{{ oc_cert.stdout | indent(4) | string }}"
        - dest: "{{ template_base }}/enable-tls.yaml"
          regex: "The contents of the private key.*$"
          replace_with: "{{ oc_privkey.stdout | indent(4) | string }}"

  - name: append the invocation lines to the base overcloud deploy script
    lineinfile:
        dest: "~/overcloud_deploy.sh"
        line: '-e {{ item.dest }} \'
    with_items: "{{ copy_templates.results }}"

  - name: create public VIP environment file
    template:
        src: ssl/public_vip.yaml.j2
        dest: "{{ template_base }}/ssl/public_vip.yaml"

  - name: append the invocation line to the base overcloud deploy script
    lineinfile:
        dest: "~/overcloud_deploy.sh"
        line: '-e {{ template_base }}/public_vip.yaml \'

  - name: append the invocation line to the base overcloud deploy script
    lineinfile:
        dest: "~/overcloud_deploy.sh"
        line: '-e {{ install.heat.templates.basedir }}/environments/ssl/tls-endpoints-public-ip.yaml \'
