---
- set_fact:
      isolation_file: "network-isolation{{ (install.network.protocol == 'ipv6') | ternary('-v6','') }}{{ (install.network.protocol == 'ipv6-all') | ternary('-v6-all','') }}.yaml"
  when: install.version|default(undercloud_version) | openstack_release < 13

- set_fact:
      isolation_file: "network-isolation{{ (install.network.protocol == 'ipv6' and install.storage.protocol.backend == 'nfs-ganesha') | ternary('-v6','') }}{{ (install.network.protocol == 'ipv6-all') | ternary('-v6-all','') }}.yaml"

  when: install.version|default(undercloud_version) | openstack_release >= 13

# Starting from OSP11, the overcloud deploy deprecated the neutron flags
# and because they should be used even in older releases, there is no reason
# to not do so.
- name: Append the network type
  yedit:
      src: "{{ template_base }}/network/{{ network_environment_file }}"
      update: True
      key: parameter_defaults
      value:
          NeutronNetworkType:
              '{{ install.network.backend }}'

# OSP7 does not likes this arg in vlan networks
- name: Append the network type
  yedit:
      src: "{{ template_base }}/network/{{ network_environment_file }}"
      update: True
      key: parameter_defaults
      value:
          NeutronTunnelTypes:
              "{{ (install.network.backend) | regex_replace('vlan', '') | regex_replace(',,', ',') | regex_replace(',$', '') | regex_replace('^,', '') }}"
  when: install.version|default(undercloud_version)|openstack_release >= 8 or install.network.backend == 'gre'

- name: Disable DVR
  yedit:
      src: "{{ template_base }}/network/{{ network_environment_file }}"
      update: True
      key: parameter_defaults
      value:
          NeutronEnableDVR:
              "false"
  when:
      - not install.network.dvr
      - install.version|default(undercloud_version) | openstack_release >= 15

- name: Disable DVR for OVN even when OSP<15
  yedit:
      src: "{{ template_base }}/network/{{ network_environment_file }}"
      update: True
      key: parameter_defaults
      value:
          NeutronEnableDVR:
              "false"
  when:
      - not install.network.dvr
      - install.network.ovn

- name: Append the network isolation template line to the base overcloud deploy script
  lineinfile:
      dest: "~/overcloud_deploy.sh"
      line: '-e {{ install.heat.templates.basedir }}/environments/{{ isolation_file }} \'
  when: install.version|default(undercloud_version) | openstack_release < 17

- name: Predictable IPs resource_registry
  import_tasks: control_node_placement/predictable_ips.yml
  when:
     - install.predictable.ips
     - install.version|default(undercloud_version) | openstack_release >= 10

- name: Custom network names
  import_tasks: network/custom_network_names.yml
  when:
     - install.get('custom_network_names',{})|default(False)
     - install.version|default(undercloud_version) | openstack_release >= 14

- name: Upload network file for custom network topology
  block:
    - name: Override the default network_data.yaml
      copy:
          src: "{{ install.network.data.file }}"
          dest: "{{ template_base }}/network/network_data.yaml"

    - name: Append the network_data.yaml -n template line to the base overcloud deploy script
      lineinfile:
          state: present
          dest: "~/overcloud_deploy.sh"
          line: '-n {{ template_base }}/network/network_data.yaml \'

    - name: Remove the network_data.yaml -e template line to the base overcloud deploy script
      lineinfile:
          state: absent
          dest: "~/overcloud_deploy.sh"
          line: '-e {{ template_base }}/network/network_data.yaml \'
  when:
     - install.get('network', {}).get('data', {}).file is defined
     - install.version|default(undercloud_version) | openstack_release >= 13

- name: Upload roles data file to add custom roles to deployment
  block:
    - name: Add roles data file
      copy:
          src: "{{ install.custom.data.roles.file }}"
          dest: "{{ template_base }}/roles/roles_data.yaml"

    - name: Append the roles_data.yaml to the base overcloud deploy script
      lineinfile:
          dest: "~/overcloud_deploy.sh"
          line: '-r {{ template_base }}/roles/roles_data.yaml \'
  when:
     - install.get('custom', {}).get('data', {}).get('roles', {}).file is defined
     - install.version|default(undercloud_version) | openstack_release >= 13

- name: Append the network template line for splitstack to the base overcloud deploy script
  lineinfile:
      dest: "~/overcloud_deploy.sh"
      line: '-e {{ template_base }}/roles-port-config.yml \'
  when: install.splitstack|default(False)

- name: Append the network_data.yaml to the base overcloud deploy script
  lineinfile:
      dest: "~/overcloud_deploy.sh"
      line: '-n {{ template_base }}/network/network_data.yaml \'
  when: use_network_data|bool

- name: Append the network environment template line to the base overcloud deploy script
  lineinfile:
      dest: "~/overcloud_deploy.sh"
      line: '-e {{ template_base }}/network/{{ network_environment_file }} \'

- name: Inject nodes_software_config.yaml
  vars:
      template_base: "{{ ansible_user_dir }}/{{ install.deployment.files | basename }}"
      roles_base: "/usr/share/openstack-tripleo-heat-templates/roles"
      ipv6_postfix: "{{  (install.network.protocol == 'ipv4') | ternary('', '-v6') }}"
      ipv6_postfix_underscore: "{{  (install.network.protocol == 'ipv4') | ternary('', '_v6') }}"
      nics_subfolder: "{{ (install.version|default(undercloud_version)|openstack_release > 10) | ternary('', 'legacy') }}"
      flavor_name_mapping:
          Controller: Controller
          ObjectStorage: SwiftStorage
      role_names_mapping:
          ceph: CephStorage
          swift: ObjectStorage
          compute_dvr: ComputeDVR
          aio: Standalone
          computehci: ComputeHCI
      tht_mapping:
          - regexp: ^(Controller).*
            net_config_file: "controller{{ ipv6_postfix }}.yaml"
            node_name: controller
          - regexp: ^(Novacontrol).*
            net_config_file: "novacontrol.yaml"
            node_name: novacontrol
          - regexp: ^(Compute)(?!HCI).*$
            net_config_file: "compute.yaml"
            node_name: compute
          - regexp: ^(Ceph).*
            net_config_file: "ceph-storage.yaml"
            node_name: ceph
          - regexp: ^(ObjectStorage).*
            net_config_file: "swift-storage.yaml"
            node_name: swift
          - regexp: ^(Database).*
            net_config_file: "database_internal.yaml"
            node_name: database
          - regexp: ^(Messaging).*
            net_config_file: "messaging_internal.yaml"
            node_name: messaging
          - regexp: ^(Networker).*
            net_config_file: "networker.yaml"
            node_name: networker
          - regexp: ^(HciCephAll).*
            net_config_file: "osdcompute.yaml"
            node_name: hcicephall
          - regexp: ^(ComputeHCI).*
            net_config_file: "osdcompute.yaml"
            node_name: computehci
  tags:
      - deploy_preparation
      - tht_roles
  when:
      - install.deploy|default('')
      - install.role is defined and install.role.files != 'default'
      - (install.version|default(undercloud_version) | openstack_release > 12) or install.tht.roles | bool
      - not install.splitstack
  template:
      src: templates/nodes_software_config.yaml.j2
      dest: "{{ template_base }}/nodes_software_config.yaml"

- name: Append nodes_software_config.yaml to overcloud deploy script
  tags:
      - deploy_preparation
      - tht_roles
  when:
      - install.deploy|default('')
      - install.role is defined and install.role.files != 'default'
      - (install.version|default(undercloud_version) | openstack_release > 12) or install.tht.roles | bool
      - not install.splitstack
  lineinfile:
      dest: "~/overcloud_deploy.sh"
      line: '-e {{ template_base }}/nodes_software_config.yaml \'
      insertafter: ".*network-environment.*"

- name: Append the bgpvpn template line to the base overcloud deploy script
  lineinfile:
      dest: "~/overcloud_deploy.sh"
      line: '-e {{ install.heat.templates.basedir }}/environments/neutron-bgpvpn.yaml \'
  when: install.network.bgpvpn

- name: Inject dvr override template
  vars:
      nics_subfolder: "{{ (install.version|default(undercloud_version)|openstack_release > 10) | ternary('', 'legacy') }}"
  template:
      src: dvr-override.yaml.j2
      dest: "{{ template_base }}/network/dvr-override.yaml"
  when:
      - install.network.dvr or install.network.force.compute.dvr
      - install.version|default(undercloud_version)|openstack_release <= 14

- name: Append neutron-ovs to overcloud deploy script
  lineinfile:
      dest: "~/overcloud_deploy.sh"
      line: '-e {{ install.heat.templates.basedir }}/environments/services/neutron-ovs.yaml \'
      insertbefore: ".*network-environment.*"
  when:
      - install.network.ovs and not install.network.dvr
      - install.version|default(undercloud_version)|openstack_release >= 15

- name: Append neutron-ovs-dvr to overcloud deploy script
  lineinfile:
      dest: "~/overcloud_deploy.sh"
      line: '-e {{ install.heat.templates.basedir }}/environments/neutron-ovs-dvr.yaml \'
      insertbefore: ".*network-environment.*"
  when:
      - install.network.dvr
      - (install.network.ovs and install.version|default(undercloud_version)|openstack_release >= 15) or
        (not install.network.ovn and install.version|default(undercloud_version)|openstack_release < 15)

- name: Append the l2gw template line to the base overcloud deploy script
  lineinfile:
      dest: "~/overcloud_deploy.sh"
      line: '-e {{ install.heat.templates.basedir }}/environments/neutron-l2gw.yaml \'
  when: install.network.l2gw

- name: Disable l2gw agent
  become: yes
  replace:
      path: "{{ install.heat.templates.basedir }}/environments/neutron-l2gw.yaml"
      regexp: '(OS::TripleO::Services::NeutronL2gwAgent:)[^\n]+$'
      replace: '\1 OS::Heat::None'
  when: install.network.l2gw

- name: Configure several service plugins
  become: yes
  replace:
      path: "{{ install.heat.templates.basedir }}/environments/neutron-l2gw.yaml"
      regexp: '(NeutronServicePlugins:)[^\n]+$'
      replace: '\1 "router,qos,trunk,l2gw"'
  when: install.network.l2gw

- name: Create neutron-lbaas environment file
  become: yes
  copy:
      dest: "{{ install.heat.templates.basedir }}/environments/services/neutron-lbaas.yaml"
      src: "files/network/neutron-lbaas.yml"
  when:
      - install.network.lbaas
      - install.version|default(undercloud_version)|openstack_release >= 13

- name: Append the LBaaS v2 template line to the base overcloud deploy script
  lineinfile:
      dest: "~/overcloud_deploy.sh"
      line: '-e {{ install.heat.templates.basedir }}/environments/services/neutron-lbaas.yaml \'
  when:
      - install.network.lbaas
      - install.version|default(undercloud_version)|openstack_release >= 13

- name: Append the network dvr overrides
  lineinfile:
      dest: "~/overcloud_deploy.sh"
      line: '-e {{ template_base }}/network/dvr-override.yaml \'
  when:
      - install.network.dvr or install.network.force.compute.dvr
      - install.version|default(undercloud_version)|openstack_release <= 14

- name: Create DVR compute env file
  vars:
  template:
      dest: "{{ template_base }}/network/compute-dvr.yaml"
      src: "compute-dvr.yaml.j2"
  when:
      - install.network.dvr or install.network.force.compute.dvr
      - not install.get('network', {}).get('override', {}).get('dvr', {}).get('nic', {})

- name: Copy the custom compute dvr yaml to the undercloud templates dir
  copy:
      src: "{{ install.network.override.dvr.nic }}"
      dest: "{{ template_base }}/network/compute-dvr.yaml"
  when:
      - install.network.dvr or install.network.force.compute.dvr
      - install.get('network', {}).get('override', {}).get('dvr', {}).get('nic', {})

- block:
  - name: Set NeutronTypeDrivers to {{ install.network.backend }} in neutron-ovn{{ net_dvr }}-ha env file
    yedit:
      src: "{{ install.heat.templates.basedir }}/environments/{{ services }}/neutron-ovn{{ net_dvr }}-ha.yaml"
      update: True
      key: parameter_defaults
      value:
        NeutronTypeDrivers:
          "{{ install.network.backend }},flat"


  - name: Set NeutronNetworkType to {{ install.network.backend }} in neutron-ovn{{ net_dvr }}-ha env file
    yedit:
      src: "{{ install.heat.templates.basedir }}/environments/{{ services }}/neutron-ovn{{ net_dvr }}-ha.yaml"
      update: True
      key: parameter_defaults
      value:
        NeutronNetworkType:
          "{{ install.network.backend }},flat"
  vars:
    net_dvr: "{{ (install.network.dvr | bool) | ternary('-dvr', '') }}"
    services: "{{ (install.version|openstack_release > 13) | ternary('services', 'services-docker') }}"
  become: yes
  when:
    - install.network.ovn
    - install.version|default(undercloud_version)|openstack_release >= 13

- block:
  - name: Remove OVNCMSOptions for controller nodes in non-DVR deployments
    command: |
        sed -i '/ControllerParameters/,+1 d' {{ install.heat.templates.basedir }}/environments/services/neutron-ovn-ha.yaml
    when:
        - install.network.ovn and not install.network.dvr
        - "'networker' in install.role.files"

  - name: Remove OVNCMSOptions for controller nodes in DVR deployments
    command: |
        sed -i '/ControllerParameters/,+1 d' {{ install.heat.templates.basedir }}/environments/services/neutron-ovn-dvr-ha.yaml
    when:
        - install.network.ovn and install.network.dvr
        - "'networker' in install.role.files"

  - name: Enable networker chasis as gateway in composable DVR deployments
    yedit:
        src: "{{ install.heat.templates.basedir }}/environments/services/neutron-ovn-dvr-ha.yaml"
        update: True
        key: parameter_defaults
        value:
            NetworkerParameters:
                OVNCMSOptions: enable-chassis-as-gw
    when:
        - install.network.ovn and install.network.dvr
        - install.version|default(undercloud_version) | openstack_release >= 15
        - "'networker' in install.role.files"
  become: yes
  when:
      - install.version|default(undercloud_version)|openstack_release >= 13
      - install.get('role', {}).files is defined

- name: Add bridge mappings for compute nodes in non-DVR OVN VLAN deployments
  vars:
    services: "{{ (install.version|openstack_release > 13) | ternary('services', 'services-docker') }}"
  become: yes
  command: |
      sed -i "s/\(NeutronBridgeMappings: \)''/\1'tenant:br-isolated'/" "{{ install.heat.templates.basedir }}/environments/{{ services }}/neutron-ovn-ha.yaml"
  when:
      - install.network.ovn and not install.network.dvr and install.network.backend == 'vlan'
