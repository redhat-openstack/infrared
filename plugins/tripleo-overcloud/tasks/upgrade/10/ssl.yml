---
- name: Check for ssl in overcloudrc
  command: "grep -Fq OS_AUTH_URL=https {{ overcloud_rc }}"
  register: check_for_ssl
  ignore_errors: true

- name: Check for IPV6 network environment file
  command: "grep -Fq network-isolation-v6.yaml {{ overcloud_deploy_script }}"
  register: net_env_ipv6
  ignore_errors: true
  when: check_for_ssl|succeeded

- name: Set network_environment_file to IPV6 file
  set_fact:
      network_environment_file: "{{ ansible_user_dir }}/{{ install.deployment.files | basename }}/network/network-environment-v6.yaml"
  when: check_for_ssl|succeeded and net_env_ipv6|succeeded

- name: Check for IPV4 network environment file
  command: "grep -Fq network-isolation.yaml {{ overcloud_deploy_script }}"
  register: net_env_ipv4
  ignore_errors: true
  when: check_for_ssl|succeeded

- name: Set network_environment_file to IPV4 file
  set_fact:
      network_environment_file: "{{ ansible_user_dir }}/{{ install.deployment.files | basename }}/network/network-environment.yaml"
  when: check_for_ssl|succeeded and net_env_ipv4|succeeded

- name: Extract our external allocation pools start value
  command: "cat {{ network_environment_file }}"
  register: result
  when: check_for_ssl|succeeded

- name: Setting external_allocation_pool_start
  set_fact:
      external_allocation_pool_start: "{{ (result.stdout | from_yaml).parameter_defaults.ExternalAllocationPools[0].start }}"
  when: check_for_ssl|succeeded

- name: Create public VIP environment file
  template:
      src: ssl/public_vip.yaml.j2
      dest: "{{ ansible_user_dir }}/{{ install.deployment.files | basename }}/public_vip.yaml"
  when: check_for_ssl|succeeded

- name: Append the invocation line to the base overcloud upgrade script
  lineinfile:
      dest: "{{ item }}"
      insertbefore: '^--log-file.*'
      line: '-e {{ ansible_user_dir }}/{{ install.deployment.files | basename }}/public_vip.yaml \'
  with_items:
    - "{{ overcloud_upgrade_script }}"
    - "{{ overcloud_deploy_script }}"
  when: check_for_ssl|succeeded

- name: Append the invocation line to the base overcloud upgrade script
  lineinfile:
      dest: "{{ item }}"
      insertbefore: '^--log-file.*'
      line: '-e {{ install.heat.templates.basedir }}/environments/tls-endpoints-public-ip.yaml \'
  with_items:
    - "{{ overcloud_upgrade_script }}"
    - "{{ overcloud_deploy_script }}"
  when: check_for_ssl|succeeded
