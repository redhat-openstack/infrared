---
- name: Check if the baremetal deployment file exists
  stat:
      path: "{{ template_base }}/network/baremetal_deployment.yaml"
  register: baremetal_deployment

- block:
    - name: Copy the generator script
      copy:
        src: "files/generate_baremetal_deployment_from_roles_data.py"
        dest: "generate_baremetal_deployment_from_roles_data.py"
        mode: 0755

    - name: Create directory for Ansible playbook
      file:
        path: "ansible_playbook"
        state: directory

    - name: Copy growvols Ansible playbook Controller file
      copy:
        src: "files/ansible_playbook/Controller.yaml"
        dest: "ansible_playbook/Controller.yaml"
        mode: 0644
      when: (install.storage|default({})).backend != 'ceph'

    - name: Copy sssd_selinux Ansible playbook Controller file
      template:
        src: "files/ansible_playbook/Controller.sssd_selinux.yaml.j2"
        dest: "ansible_playbook/Controller.sssd_selinux.yaml"
        mode: 0644
      when: install.container.extra.repos is defined

    - name: Find out the number of nodes per role
      roles_node_count:
        tht_roles: "{{ install.role.files }}"
        overcloud_nodes: "{{ groups.overcloud_nodes }}"
      register: roles_count

    - name: Create the baremetal_deployment input file used by the deploy script
      shell: |
        ./generate_baremetal_deployment_from_roles_data.py \
        -t {{ template_base }}/network/nic-configs/ \
        -n {{ template_base }}/network/network_data_v2.yaml \
        {{ template_base }}/roles/roles_data.yaml \
        -p \
        {% for name, count in roles_count.nodes_count.items() %}
        -c {{ name }} {{ count }} \
        {% endfor %}
        -a ansible_playbook \
        >{{ template_base }}/network/baremetal_deployment.yaml

  when: not baremetal_deployment.stat.exists
