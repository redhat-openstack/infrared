---
- name: Copy custom baremetal deployment file
  copy:
      src: "{{ custom_baremetal_deployment_file }}"
      dest: "{{ template_base }}/network/baremetal_deployment.yaml"
      mode: 0644
      force: True
  when: custom_baremetal_deployment_file is defined

- name: Check if the baremetal deployment file exists
  stat:
      path: "{{ template_base }}/network/baremetal_deployment.yaml"
  register: baremetal_deployment

- block:
    - name: Copy the generator script
      copy:
        src: "files/generate_baremetal_deployment_from_roles_data.py"
        dest: "generate_baremetal_deployment_from_roles_data.py"
        mode: 0755

    - name: Create directory for Ansible playbook
      file:
        path: "ansible_playbook"
        state: directory

    - name: Copy growvols Ansible playbook files
      copy:
        src: "{{ item }}"
        dest: "ansible_playbook/"
        mode: 0644
      with_fileglob:
          - "files/ansible_playbook/*.yaml"

    - name: Copy sssd_selinux Ansible playbook Controller file
      template:
        src: "files/ansible_playbook/Controller.sssd_selinux.yaml.j2"
        dest: "ansible_playbook/Controller.sssd_selinux.yaml"
        mode: 0644
      when: >
        install.container.extra.repos is defined or
        (install.network.ovs and install.version|default(undercloud_version)|openstack_release >= 17)

    - name: Find out the number of nodes per role
      roles_node_count:
        tht_roles: "{{ install.role.files }}"
        overcloud_nodes: "{{ groups.overcloud_nodes }}"
      register: roles_count

    - name: Create the baremetal_deployment input file used by the deploy script
      shell: |
        ./generate_baremetal_deployment_from_roles_data.py \
        -t {{ template_base }}/network/nic-configs/ \
        -n {{ template_base }}/network/network_data_v2.yaml \
        {{ template_base }}/roles/roles_data.yaml \
        -p \
        {% for name, count in roles_count.nodes_count.items() %}
        -c {{ name }} {{ count }} \
        {% endfor %}
        {% for name, mapped_name in roles_count.nodes_mapping.items() %}
        -m {{ name }} {{ mapped_name }} \
        {% endfor %}
        -a ansible_playbook \
        {% if multirhel_enabled %}
        -x enabled \
        {% endif %}
        >{{ template_base }}/network/baremetal_deployment.yaml

  when: not baremetal_deployment.stat.exists

# Set the overcloud-minimal image for ceph nodes
- block:
    - name: Check if the baremetal deployment file exists
      stat:
        path: "{{ template_base }}/network/baremetal_deployment.yaml"
      register: baremetal_deployment

    - name: Register encoded contents of baremetal_deployment.yaml to a var
      ansible.builtin.slurp:
        src: "{{ template_base }}/network/baremetal_deployment.yaml"
      register: baremetal_deployment_contents_encoded
      when: baremetal_deployment.stat.exists | default('')

    - name: Decode the deployment contents
      ansible.builtin.set_fact:
        baremetal_deployment_contents: "{{ baremetal_deployment_contents_encoded.content | b64decode }}"
      when: baremetal_deployment.stat.exists | default('')

    - name: Set overcloud-minimal image for ceph nodes
      blockinfile:
        path: "{{ template_base }}/network/baremetal_deployment.yaml"
        insertbefore: 'profile: ceph-storage'
        block: |2
              image:
                href: file:///var/lib/ironic/images/overcloud-minimal.raw
                kernel: file:///var/lib/ironic/images/overcloud-minimal.vmlinuz
                ramdisk: file:///var/lib/ironic/images/overcloud-minimal.initrd
      when: "'profile: ceph-storage' in baremetal_deployment_contents"

    - name: Fail if ceph-storage is not found in baremetal_deployment
      ansible.builtin.fail:
        msg: "'profile: ceph-storage' was not found in baremetal_deployment.yaml"
      when: "'profile: ceph-storage' not in baremetal_deployment_contents"

  when: install.set.ceph.minimal.image
