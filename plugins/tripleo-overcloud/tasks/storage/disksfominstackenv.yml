- name: load instackenv
  command: cat ~/instackenv.json
  register: instackenv_js

- name:
  set_fact:
      instackenv_data: "{{ instackenv_js.stdout | from_json }}"

- name: Get storage nodes disks from instackenv
  set_fact:
      storage_node_disks: "{{ item['disks'] | default(['vda']) }}"
  # All hosts 'from instackenv.json' which name is in storage group (swift or ceph) of inventory
  with_items: "{{ instackenv_data.nodes }}"
  when:
      - install.version |openstack_release < 11
      - item["name"] in storage_group

  # NOTE(oanufrii): Works only for OSPd > 10
- name: Get BareMetal introspection data
  shell: |
      source ~/stackrc
      # Get list of baremetal introspection UUIDs
      for UUID in $(openstack baremetal introspection list | tail -n +4 | head -n -1 | awk {'print $2'});
      do
          # For every UUID get introspection data and search for mac address, defined in 'instackenv.json'
          MATCH=$(openstack baremetal introspection data save ${UUID} | jq ''|grep "{{ item.mac[0] }}" | wc -l)
          # If mac address if found
          if [ ${MATCH} != 0 ];
          then
              # get corresponding section from baremetal introspection
              echo "$(openstack baremetal introspection data save ${UUID} | jq '.inventory.disks | map(.name)' | sed 's/\/dev\///g')"
          fi
      done
  # All hosts 'from instackenv.json' which name is in storage group (swift or ceph) of inventory
  with_items: "{{ instackenv_data.nodes }}"
  when:
      - item["name"] in storage_group
      - install.version |openstack_release > 10
  register: inventory_disks

- name:
  set_fact:
      # Parse JSON output of 'Get BareMetal introspection data' shell module
      # We need only one of resault, assuming storage nodes configuretions are identical
      storage_node_disks: "{{ (inventory_disks.results | first).stdout | from_json }}"
  when: install.version |openstack_release > 10


- name:
  debug:
      msg: "Storage_node_disks: {{ storage_node_disks }}"
      verbosity: 2
