- block:
      # If you reached this stage, it means a user explicitely entered the storage flag therefore he wants at least 1 node
      - name: append the ceph storage template line to the base overcloud deploy script
        lineinfile:
            dest: "~/overcloud_deploy.sh"
            line: '--ceph-storage-scale {{ storage_nodes }} \'
        when:
            - "templates.storage_add_scale | default(True)"
            - install.version|default(undercloud_version)|openstack_release < 11

      - name: append the ceph storage flavor name to the base overcloud deploy script
        lineinfile:
            dest: "~/overcloud_deploy.sh"
            line: '--ceph-storage-flavor {{ ("ceph" in existing_flavors.stdout_lines and not install.specific.node.ids) | ternary("ceph", "baremetal") }} \'
        when:
            - "templates.storage_add_scale | default(True)"
            - install.version|default(undercloud_version)|openstack_release < 11

  when:
    - "not install.storage.external"
    - "not install.splitstack"
  vars:
      storage_nodes: "{{ (install.storage.nodes|default(0)) or (groups['ceph']|default([])|length) or 1 }}"

- name: append the storage template line to the base overcloud deploy script
  lineinfile:
      dest: "~/overcloud_deploy.sh"
      line: '-e {{ install.heat.templates.basedir }}/environments/storage-environment.yaml \'
  when: (not install.containers) or (install.version|default(undercloud_version)|openstack_release < 12)

- name: append the storage template line to the base overcloud external ansible ceph deploy script
  lineinfile:
      dest: "~/overcloud_deploy.sh"
      line: '-e  /usr/share/openstack-tripleo-heat-templates/environments/ceph-ansible/ceph-ansible-external.yaml \'
  when:
      - (install.version|default(undercloud_version)|openstack_release >= 12)
      - (install.version|default(undercloud_version)|openstack_release < 17)
      - install.storage.external
      - ((install.ceph.deploy.method is not defined and (install.version|default(undercloud_version)|openstack_release > 12)) or (install.ceph.deploy.method is defined and install.ceph.deploy.method == 'ansible'))

- name: append the storage template line to apply the external-ceph deploy script for >= OSP17
  lineinfile:
      dest: "~/overcloud_deploy.sh"
      line: '-e  /usr/share/openstack-tripleo-heat-templates/environments/external-ceph.yaml \'
  when:
      - (install.version|default(undercloud_version)|openstack_release >= 17)
      - install.storage.external

- name: append the storage template line to the base overcloud external puppet ceph deploy script
  lineinfile:
      dest: "~/overcloud_deploy.sh"
      line: '-e  /usr/share/openstack-tripleo-heat-templates/environments/puppet-ceph-external.yaml \'
  when:
      - (install.version|default(undercloud_version)|openstack_release >= 12)
      - install.storage.external
      - ((install.ceph.deploy.method is not defined and (install.version|default(undercloud_version)|openstack_release == 12)) or (install.ceph.deploy.method is defined and install.ceph.deploy.method == 'puppet'))

- block:
      - name: prepare ceph storage template
        vars:
            # we have different keyrings mapped to each ospd version capabilities
            ceph_compt_version: "
                {%- if install.version|default(undercloud_version)|openstack_release < 8 -%}8
                {%- elif install.version|default(undercloud_version)|openstack_release >= 10 -%}10
                {%- else -%}{{ install.version|default(undercloud_version)|openstack_release }}{%- endif -%}"
        template:
            src: "storage/{{ install.storage.config }}.yml.j2"
            dest: "{{ template_base }}/{{ install.storage.config }}.yaml"
            mode: 0755

      - name: append the storage ceph custom template line to the base overcloud deploy script
        lineinfile:
            dest: "~/overcloud_deploy.sh"
            line: '-e {{ template_base }}/{{ install.storage.config }}.yaml \'

  when:
    - install.storage.config == 'internal'

- name: append the storage ceph template in splitstack deployment
  lineinfile:
      dest: "~/overcloud_deploy.sh"
      line: '-e /usr/share/openstack-tripleo-heat-templates/environments/storage-environment.yaml \'
  when:
    - "install.splitstack"
    - install.version|default(undercloud_version)|openstack_release < 12

- block:
      - name: Check if storage-config contains a valid full local path
        stat:
            path: "{{ install.storage.config }}"
        delegate_to: localhost
        register: storage_config_file

      # Support both the oldest, not flexible, way (a string which contains the name of a file,
      # without its extension, under vars/storage/config/) and the cleaner one (the full path
      # to the configuration files one). When the latter becomes the only way, the code which
      # copies the template should be moved to a shared file, as it applies regardless of
      # the storage backend.
      - set_fact:
            source_storage_config_file: >-
                {{ (storage_config_file.stat.exists) |
                    ternary(install.storage.config, "vars/storage/config/{{ install.storage.config }}.yml") }}
            storage_config_file_basename: >-
                {{ (storage_config_file.stat.exists) |
                    ternary(storage_config_file.stat.path|default("")|basename, "{{ install.storage.config }}.yml") }}

      - name: Copy storage configuration file to the remote
        copy:
            src: "{{ source_storage_config_file }}"
            dest: "{{ template_base }}/{{ storage_config_file_basename }}"

      - name: Append the storage configuration line to the base overcloud deploy script
        lineinfile:
            dest: "~/overcloud_deploy.sh"
            line: '-e {{ template_base }}/{{ storage_config_file_basename }} \'

  when: install.storage.config != 'internal'
