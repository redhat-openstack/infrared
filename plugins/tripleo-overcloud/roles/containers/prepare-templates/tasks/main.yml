- name: Get all environment files from the deploy script
  shell: |
     for file in `awk '/^-e / || /^--environment-file / {print $2}' ~/overcloud_deploy.sh`; do if [ -f $file ]; then echo $file; fi; done
  register: ds_env_files

- name: Create one variable with all the environment yamls
  set_fact:
      environment_yamls: "{{ environment_yamls| default('') }} -e {{ item }}"
  with_items: "{{ ds_env_files.stdout_lines }}"
  when: "'{{ template_base }}/docker-images.yaml' != item"

- name: Get all roles files from the deploy script
  shell: |
     for file in `awk '/^-r / || /^--roles-file / {print $2}' ~/overcloud_deploy.sh`; do if [ -f $file ]; then echo $file; fi; done
  register: ds_roles_files

- name: Create one variable with all the roles yamls
  set_fact:
      roles_yamls: "{{ roles_yamls| default('') }} --roles-file {{ item }}"
  with_items: "{{ ds_roles_files.stdout_lines }}"

- name: clear fact extra_service_environment fact
  set_fact:
      extra_service_environment: ''

- name: create nondefault fact for upload
  include: "{{ role_path }}/../prepare-templates/tasks/nondefault_images_fact.yml"
  with_items: "{{ install.overcloud.templates|default([]) }}"
  loop_control:
      loop_var: templates_list_file
  # avoid empty strings
  when: "templates_list_file != ''"

- name: generate docker images file, using the undercloud registry
  vars:
      env_file: "{{ template_base }}/docker-images.yaml"
      basereg_relative: "{{ install.get('registry', {}).namespace|default(False)|ternary(install.get('registry', {}).namespace|default(''), ''.join(container_env['container-image-prepare']['namespace'].split('/')[1:])) }}"
      arg_ceph_namespace: "{{ install.get('registry', {}).get('ceph', {}).namespace|default('') }}"
      cephreg_relative: "{{ arg_ceph_namespace|tenary(arg_ceph_namespace, ''.join(container_env['container-image-prepare']['ceph-namespace'].split('/')[1:])) }}"
      undercloud_reg_namespace: "{{ ansible_br_ctlplane['ipv4']['address'] + ':8787/' + basereg_relative }}"
      undercloud_reg_cehp_namespace: "{{ ansible_br_ctlplane['ipv4']['address'] + ':8787/' + cephreg_relative }}"
      mirror_reg: "{{ install.get('registry', {}).mirror|default('') }}"
      external_reg: "{{ mirror_reg | tenarey(mirror_reg, container_env['container-image-prepare']['namespace'].split('/')[0]) }}"
      external_reg_namespace: "{{ external_reg + '/' + basereg_relative }}"
      external_ceph_namespace: "{{ external_reg + '/' + cephreg_relative }}"
      arg_ceph_image: "{{ install.get('registry', {}).get('ceph', {}).image|default('') }}"
      arg_ceph_tag: "{{ install.get('registry', {}).get('ceph', {}).tag|default('') }}"
      ceph_tag: "{{ arg_ceph_tag|tenary(arg_ceph_tag, container_env['container-image-prepare']['ceph-tag']) }}"
      ceph_image: "{{ arg_ceph_image|tenary(arg_ceph_image,container_env['container-image-prepare']['ceph-image']) }}"
      reg_namespace: "{{ install.registry.undercloud.skip|ternary(external_reg_namespace, undercloud_reg_namespace) }}"
      reg_namespace_ceph: "{{ install.registry.undercloud.skip|ternary(external_ceph_namespace, undercloud_reg_cehp_namespace) }}"

  shell: |
      set -exo pipefail
      openstack overcloud container image prepare \
        --namespace={{ reg_namespace }} \
        --env-file={{ env_file }} {{ environment_yamls | default('') }} {{ roles_yamls | default('') }} \
        --prefix={{ container_env['container-image-prepare']['prefix'] }} \
        --tag={{ container_env['container-image-prepare']['tag'] }} \
        --set ceph_namespace={{ reg_namespace_ceph }} \
        --set ceph_image={{ ceph_image }} \
        --set ceph_tag={{ ceph_tag }} \
        {{ extra_service_environment|default('') }}
  tags:
      - skip_ansible_lint
