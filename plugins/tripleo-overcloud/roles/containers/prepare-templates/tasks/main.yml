- name: get origin(not mirrored) docker registry name
  shell: |
      cat {{ containers_images_template_dest_file }} | awk '/pull_source:/ {print $2}' | head -n1 | tr -d ' '
  register: docker_origin_registry

- name: generate docker images file, using the undercloud registry
  vars:
      env_file: "{{ template_base }}/docker-images.yaml"
      undercloud_reg_base: "{{ ansible_br_ctlplane['ipv4']['address'] }}:8787/rhosp12"
      external_reg_base: "{{ install.get('registry', {}).mirror|default(docker_origin_registry) }}/rhosp12"
      reg_base: "{{ install.registry.undercloud.skip|ternary(external_reg_base, undercloud_reg_base)  }}"
  shell: |
      tag=`awk '/- imagename:.*openstack-glance-api-docker:.*/ {print $3}' <{{ containers_images_template_dest_file }}  | cut -f 2 -d:`
      openstack overcloud container image prepare --namespace={{ reg_base }} --env-file={{ env_file }} --prefix=openstack- --suffix=-docker --tag=$tag
  tags:
      - skip_ansible_lint

- name: add insecure registry line
  vars:
      undercloud_reg_base: "{{ ansible_br_ctlplane['ipv4']['address'] }}:8787"
      external_reg_base: "{{ install.get('registry', {}).mirror|default(docker_origin_registry) }}"
      reg_base: "{{ install.registry.undercloud.skip|ternary(external_reg_base, undercloud_reg_base) }}"
  lineinfile:
      path: "{{ template_base }}/docker-images.yaml"
      state: present
      line: "  DockerInsecureRegistryAddress: {{ reg_base }}"

- name: append ceph-ansible template
  lineinfile:
      dest: "{{ containers_ir_deploy_script }}"
      line: '-e {{ install.heat.templates.basedir }}/environments/ceph-ansible/ceph-ansible.yaml \'
  when:
      - not install.storage.external
      - storage_backend|default('') == 'ceph'

- name: append extra containers templates for the build scripts
  lineinfile:
      dest: "{{ containers_ir_deploy_script }}"
      line: "{{ item }}"
  with_items:
      - '-e {{ install.heat.templates.basedir }}/environments/docker.yaml \'
      - '-e {{ install.heat.templates.basedir }}/environments/docker-ha.yaml \'
