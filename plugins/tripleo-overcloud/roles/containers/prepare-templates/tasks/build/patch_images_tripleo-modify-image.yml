---
- name: Set facts for images patching
  set_fact:
      container_images_patch_dir: "{{ containers_home_dir }}/images_patch"
      tmp_oc_repos_dir: "{{ containers_home_dir }}/images_patch"

- name: Create context dir base
  file:
      path: "{{ container_images_patch_dir }}"
      state: "{{ item }}"
  with_items:
      - absent
      - directory

- name: Create context dir for packages
  file:
      path: "{{ container_images_patch_dir }}/packages"
      state: "{{ item }}"
  with_items:
      - directory

- name: Set new_baseurl_dir variable
  set_fact:
      new_baseurl_dir: "{{ container_images_patch_dir }}/packages/"

- name: Downloading extra repositories
  become: yes
  get_url:
    url: "{{ item }}"
    dest: "/etc/yum.repos.d/"
  with_items: "{{ install.container.extra.repos }}"
  when: install_container_extra_repos is defined

- name: Prepare custom repository temp directory
  include_tasks: prepare_tmp_repos.yml
  when: repo_config.stat.exists
  with_items: "{{ patched_rpms.results }}"
  loop_control:
      loop_var: repo_config

- name: make copy of containers-prepare-parameter.yaml
  copy:
      src: "{{ containers_home_dir }}/containers-prepare-parameter.yaml"
      dest: "{{ containers_home_dir }}/containers-prepare-parameter-copy.yaml"
      remote_src: yes

- name: Configure containers-prepare-parameter-copy.yaml for image modification
  blockinfile:
      path: "{{ containers_home_dir }}/containers-prepare-parameter-copy.yaml"
      block: |2
            modify_role: tripleo-modify-image
            modify_append_tag: '-patched'
            modify_vars:
              tasks_from: yum_update.yml
              yum_repos_dir_path: /etc/yum.repos.d
              update_repo: "{{ install.update_repo|default('patched-rpms') }}"
            excludes: [ceph, node-exporter, prom, alertmanager, grafana]

- name: Run images modification
  shell: |
      source /home/stack/stackrc
      {% if install.version|default(undercloud_version)|openstack_release > 14 %}
      sudo \
      {% endif %}
      openstack tripleo container image prepare \
        -e {{ containers_home_dir }}/containers-prepare-parameter-copy.yaml \
        --output-env-file {{ template_base }}/docker-images.yaml
