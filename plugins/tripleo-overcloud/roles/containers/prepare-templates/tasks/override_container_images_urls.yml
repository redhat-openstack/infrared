---
- name: convert install_container_images_urls(string) into install_container_images_overrides(dict)
  vars:
    container_name: |-
      {%- if item is string -%}
        {%- if item.split('/')[2] is defined -%}
      {{ item.split('/')[2].split(':')[0] }}
        {%- elif item.split('/')[1] is defined and item.split('/')[1].split(':')[0] is defined -%}
      {# because ceph images may have shorter URLs, i.e.: brew-pulp-docker01.web.prod.ext.phx2.redhat.com:8888/rhceph:3-25 #}
      {{ item.split('/')[1].split(':')[0] }}
        {%- endif -%}
      {%- endif -%}
  set_fact:
    install_container_images_overrides: "{{ install_container_images_overrides | default({}) | combine({ container_name: { 'url': item } }) }}"
  when: item != ""
  with_items: "{{ install_container_images_urls }}"
  no_log: true # each {{ item }} iteration displays the whole install_container_images_overrides content - unnecessarily
  tags: container-images-urls

- name: "read {{ template_base }}/docker-images.yaml"
  command: cat {{ template_base }}/docker-images.yaml
  register: docker_images_yaml

- name: convert output of previous command into Ansible dict
  set_fact:
    original_heat_docker_images: "{{ docker_images_yaml.stdout | from_yaml }}"

- name: "print original heat docker images which were read from {{ template_base }}/docker-images.yaml file (before we added overrides)"
  debug:
    var: original_heat_docker_images

- name: print container images URLs which will override the original ones
  debug:
    var: install_container_images_overrides

- name: "merge install_container_images_overrides into content of {{ template_base }}/docker-images.yaml"
  vars:
    install_container_images_output: {}
    install_container_images_registries: {}
  set_fact:
    install_container_images_registries: >-
      {
      {% for k in install_container_images_overrides %}
        {% set registry = install_container_images_overrides[k].url.split('/')[0] %}
      "{{ registry }}": "",
      {% endfor %}
      }
    install_container_images_output: >-
      { 'parameter_defaults': {
      {%- set insecure_registries = [] -%}
      {%- for param_name,param_value in original_heat_docker_images.parameter_defaults.items() | list -%}
        {%- set print_coma = 1 -%}
        {%- set image_name = '' -%}
        {%- if param_value is string -%}
          {%- if param_value.split('/')[2] is defined -%}
            {%- set image_name = param_value.split('/')[2].split(':')[0] | default('not_an_image_url') -%}
          {%- elif param_value.split('/')[1] is defined and param_value.split('/')[1].split(':')[0] is defined -%}
            {# because ceph images may have shorter URLs, i.e.: brew-pulp-docker01.web.prod.ext.phx2.redhat.com:8888/rhceph:3-25 #}
            {%- set image_name = param_value.split('/')[1].split(':')[0] | default('not_an_image_url') -%}
          {%- endif -%}
        {%- endif -%}
        {%- if install_container_images_overrides[image_name] is defined -%}
      "{{ param_name }}": "{{ install_container_images_overrides[image_name].url }}"
        {%- elif param_value | type_debug == 'list' -%}
      "{{ param_name }}": {{ param_value | list }}
        {%- else -%}
      "{{ param_name }}": "{{ param_value }}"
        {%- endif -%}
        {%- if print_coma == 1 -%}
      ,
        {%- endif -%}
      {%- endfor -%}
      }
      }

- name: append insecure docker registry addresses to install_container_images_output
  vars:
    original_insecure_registry_adresses: "{{ install_container_images_output.parameter_defaults.DockerInsecureRegistryAddress }}"
  set_fact:
    install_container_images_output: >-
      {{ install_container_images_output | combine({ 'parameter_defaults':
      {'DockerInsecureRegistryAddress': original_insecure_registry_adresses + install_container_images_registries.keys() | list }}, recursive=True) }}

- name: print container images (including overrides)
  debug:
    var: install_container_images_output

- name: "save new {{ template_base }}/docker-images.yaml file (including image urls and insecure registries overrides)"
  copy:
    content: "{{ install_container_images_output | to_nice_yaml(indent=2) }}"
    dest: "{{ template_base }}/docker-images.yaml"
    backup: yes

- debug:
    msg: "Build mark: WARNING! some overcloud container images URLs overrides were applied"

- name: add insecure registries to /etc/sysconfig/docker (RHEL == 7)
  replace:
    dest: /etc/sysconfig/docker
    regexp: '^(INSECURE_REGISTRY=.--insecure-registry)'
    replace: '\1 {{ item }} --insecure-registry'
    backup: no
  with_items: "{{ install_container_images_output.parameter_defaults.DockerInsecureRegistryAddress }}"
  when: ansible_distribution_major_version | int == 7
  become: true

- name: add insecure registries to /etc/containers/registries.conf (RHEL >= 8)
  become: true
  blockinfile:
    path: /etc/containers/registries.conf
    block: |
        [[registry]]
        prefix = "{{ item }}"
        insecure = true
        location = "{{ item }}"
    create: no
    backup: yes
    marker: "# {mark} ANSIBLE MANAGED BLOCK - added by override_container_images_urls.yml"
  with_items: "{{ install_container_images_output.parameter_defaults.DockerInsecureRegistryAddress }}"
  when: ansible_distribution_major_version | int >= 8
