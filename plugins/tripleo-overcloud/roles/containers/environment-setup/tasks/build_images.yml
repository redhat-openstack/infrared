---
- name: modify puddle number url
  shell: >
      echo '{{ containers_puddle_base_url.stdout }}' | sed 's/{{ containers_puddle_number.stdout }}/{{ install.build|default("latest") }}/'
  register: modified_url
  when:
      - install.ocupdate|default(False)
      - install.build is defined and install.build != 'None'

- name: adjust containers_puddle_base_url
  set_fact:
      containers_puddle_base_url: "{{ modified_url }}"
  when: modified_url|changed

- name: replace IP with hostname in /etc/sysconfig/docker
  replace:
      dest: /etc/sysconfig/docker
      regexp: '^(INSECURE_REGISTRY=".*)"'
      replace: '\1 --insecure-registry {{ docker_insecure_registry }}"'
      backup: no
  become: true

- name: restart docker service
  service:
      name: docker
      state: restarted
  become: true

- name: Check if docker is running
  command: systemctl status docker
  ignore_errors: yes
  changed_when: false
  register: service_docker_status

- name: Report status of docker
  fail:
      msg: |
         Service docker is not running.
         Output of `systemctl status docker`:
         {{ service_docker_status.stdout }}
         {{ service_docker_status.stderr }}
  when: service_docker_status | failed

- name: get tag of container images
  shell: |
        #cat {{ containers_images_template_dest_file }} | awk '/- imagename: / {print $3}' | head -n1
        openstack overcloud container image tag discover --image {{ docker_insecure_registry }}/rhosp{{ os_version }}/openstack-base-docker:latest --tag-from-label version-release
  register: containers_images_tag
  tags:
      - container-images-patch
      - container-images-packages

- name: Create {{ containers_images_template_dest_file }} to upload to local registry
  shell: >
    openstack overcloud container image prepare \
        --namespace {{ docker_insecure_registry }}/rhosp{{ os_version }} \
        --tag {{ containers_images_tag.stdout }} \
        --prefix openstack \
        --suffix docker \
        --set ceph_namespace={{ docker_insecure_registry }}/ceph \
        --set ceph_image=rhceph-2-rhel7 \
        --set ceph_tag=latest \
        --output-images-file {{ containers_images_template_dest_file }}

- name: replace docker registry with mirror
  replace:
      dest: "{{ containers_images_template_dest_file }}"
      regexp: '^(- imagename: ).*?(\/.*)'
      replace: '\1{{ install.registry.mirror }}\2'
      backup: no
  when: install.get('registry', {}).mirror|default(false)
  tags:
      - container-images-patch

- name: replace docker namespace
  replace:
      dest: "{{ containers_images_template_dest_file }}"
      regexp: '^(- imagename:)(.*)?(\/.*).*?(\/.*)'
      replace: '\1\2/\{{ install.registry.namespace }}\4'
      backup: no
  when: install.get('registry', {}).namespace|default(false)
  tags:
      - container-images-patch

- name: openstack overcloud container image upload
  shell: |
      source /home/stack/stackrc
      openstack overcloud container image upload --verbose --config-file {{ containers_images_template_dest_file }}
  when: not install.registry.undercloud.skip
  tags:
      - skip_ansible_lint

- name: patch and push container images
  include: patch_images.yml
  when: install_container_images_patch is defined
  tags: container-images-patch

- name: tag the original image(s) with 'before_packages_install' and install rpms&push new ones
  shell: |
      docker tag {{ docker_registry_undercloud }}{{ docker_registry_undercloud_namespace }}/{{ item.key }}:{{ containers_images_tag.stdout }} \
      {{ docker_registry_undercloud }}{{ docker_registry_undercloud_namespace }}/{{ item.key }}:{{ containers_images_tag.stdout }}-before_packages_install
      echo "FROM {{ docker_registry_undercloud }}{{ docker_registry_undercloud_namespace }}/{{ item.key }}:{{ containers_images_tag.stdout }}
      RUN yum localinstall {{ item.value.split(",") | join(" ") }} -y -v" | docker build -t {{ docker_registry_undercloud }}{{ docker_registry_undercloud_namespace }}/{{ item.key }}:{{ containers_images_tag.stdout }} -
      docker push {{ docker_registry_undercloud }}{{ docker_registry_undercloud_namespace }}/{{ item.key }}:{{ containers_images_tag.stdout }}
  when: install_container_images_packages is defined
  with_dict: "{{ install_container_images_packages }}"
  become: true
  tags: container-images-packages

- name: Output from uploading images
  debug: var=image_upload
