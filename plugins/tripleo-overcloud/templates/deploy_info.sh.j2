#!/bin/bash

if ! options=$(getopt -o "h,l" -l "help,long" -- "$@"); then
	# parse error
	display_help
	exit 1
fi

eval set -- $options

function display_help()
{
	echo "$0 [option..]"
	echo "This command supposed to help to debug openstack overcloud deployment issues."
	echo "The undercloud credentials has to be available as an environment variable, and will be used by the openstack command."
	echo "-h|--help Display help"
	echo "-l|--long To show long, uncut, logs"
}

LONG=""
while [ $# -gt 0 ]; do
	case "$1" in
		-h|--help) display_help; exit 0 ;;
		-l|--long) LONG="--long"; ;;
		(--) shift; break ;;
		(-*) echo "$0: error - unrecognized option $1" >&2; display_help; exit 1 ;;
		(*)  echo "$0: error - unexpected argument $1" >&2; display_help; exit 1 ;;
	esac
	shift
done

echo "Server info"
{% if (install.version|default(undercloud_version)|openstack_release) >= 17 %}
metalsmith -f value -c 'UUID' list | xargs -n 1  metalsmith show
{% else %}
openstack server list -f value -c ID | xargs -n 1 openstack server show
{% endif %}

echo "BM node info"
{% if (install.version|default(undercloud_version)|openstack_release) >= 11 %}
openstack baremetal node list
openstack baremetal node list -f value -c UUID | xargs -r -n 1 openstack baremetal node show
{% endif %}

echo "Deployments"
{% if (install.version|default(undercloud_version)|openstack_release) >= 9 %}
openstack software deployment list --long
DEPLOYMENTS=`openstack software deployment list -f value -c id -c config_id -c status --quote none`

while read deployment config status; do
	[ "${status}" == "COMPLETE" ] && continue

	echo openstack software deployment output show "$deployment" --all $LONG
	openstack software deployment output show "$deployment" --all $LONG
	echo openstack software deployment show "$deployment"
	openstack software deployment show "$deployment"
	echo openstack software config show "$config"
	openstack software config show "$config"
done < <(echo "$DEPLOYMENTS")
{% else %}
DEPLOYMENTS=`heat resource-list --n 5 overcloud | grep -wE "OS::Heat::SoftwareDeployment|OS::Heat::StructuredDeployment"`
echo "$DEPLOYMENTS"

for deployment in `echo "$DEPLOYMENTS" | grep -v 'COMPLETE' | awk '{print $4}'`; do
	echo heat deployment-output-show "$deployment" --all
	heat deployment-output-show "$deployment" --all
	echo heat deployment-show "$deployment"
	heat deployment-show "$deployment"
	echo heat config-show
	heat config-show `heat deployment-show "$deployment" | jq '.config_id' | tr -d '"'`
done
{% endif %}

{% if (install.version|default(undercloud_version)|openstack_release) >= 10 %}
echo "WorkFlow/Actions"
echo openstack action execution list
openstack action execution list
echo openstack workflow execution list
openstack workflow execution list
#TODO: detailed info about the failed actions (output)
{% endif %}

echo FIN
