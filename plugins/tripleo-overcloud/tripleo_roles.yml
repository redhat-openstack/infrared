---
- name: Create roles templates
  hosts: undercloud
  any_errors_fatal: true
  gather_facts: yes
  vars:
      template_base: "{{ ansible_user_dir }}/{{ install.deployment.files | basename }}"
      roles_base: "/usr/share/openstack-tripleo-heat-templates/roles"
      ipv6_postfix: "{{  (install.network.protocol == 'ipv4') | ternary('', '-v6') }}"
      ipv6_postfix_underscore: "{{  (install.network.protocol == 'ipv4') | ternary('', '_v6') }}"
      nics_subfolder: "{{ (install.version|default(undercloud_version)|openstack_release > 10) | ternary('', 'legacy') }}"
      flavor_name_mapping:
          Controller: Controller
          ObjectStorage: SwiftStorage
      role_names_mapping:
          ceph: CephStorage
          swift: ObjectStorage
          compute_dvr: ComputeDVR
          aio: Standalone
          computehci: ComputeHCI
          computerhel8: ComputeRHEL8
      tht_mapping:
          - regexp: ^(Controller).*
            net_config_file: "controller{{ ipv6_postfix }}.yaml"
            node_name: controller
          - regexp: ^(Novacontrol).*
            net_config_file: "novacontrol.yaml"
            node_name: novacontrol
          - regexp: ^(Compute)(?!HCI)(?!RHEL8).*$
            net_config_file: "compute.yaml"
            node_name: compute
          - regexp: ^(Ceph).*
            net_config_file: "ceph-storage.yaml"
            node_name: ceph
          - regexp: ^(ObjectStorage).*
            net_config_file: "swift-storage.yaml"
            node_name: swift
          - regexp: ^(Database).*
            net_config_file: "database_internal.yaml"
            node_name: database
          - regexp: ^(Messaging).*
            net_config_file: "messaging_internal.yaml"
            node_name: messaging
          - regexp: ^(Networker).*
            net_config_file: "networker.yaml"
            node_name: networker
          - regexp: ^(HciCephAll).*
            net_config_file: "osdcompute.yaml"
            node_name: hcicephall
          - regexp: ^(ComputeHCI).*
            net_config_file: "osdcompute.yaml"
            node_name: computehci
          - regexp: ^(ComputeRHEL8).*
            net_config_file: "compute.yaml"
            node_name: computerhel8
            flavor: compute
  tags:
      - deploy_preparation
      - tht_roles
  tasks:
      - name: create roles folder
        file:
            path: "{{ template_base }}/roles"
            state: directory

      - name: create an inversed version of multirhel_roles_map
        set_fact:
          multirhel_roles_map_inversed: |-
            {
            {%- for m in multirhel_roles_map.split(',') -%}
            "{{ m.split(':')[1] }}": "{{ m.split(':')[0] }}",
            {%- endfor -%}
            }

      - when: "multirhel_enabled|default(False) or multirhel_enabled_legacy|default(False)"
        block:
        - name: "ensure {{ template_base }}/roles/multirhel exists"
          file:
              path: "{{ template_base }}/roles/multirhel"
              state: "{{ item }}"
          with_items:
              - absent
              - directory

        - name: "create ComputeRHEL8 and other requested rhel8/multirhel-related THT role files"
          # note that putting a 'href: file' inside the ImageDefault is not supported inside role files as per https://github.com/openstack/tripleo-heat-templates/blob/6c17f63aab39a1b98a6875304bdb03a23fecc90e/roles/README.rst
          # we add it here and support for it inside the generate_baremetal_deployment_from_roles_data.py to enable support for user-defined images they may want to pass in their role files for multirhel machines
          shell: |
            set -x
            {% set roles = install.role.files.split(',') %}
            {% set roles_iter = [] %}
            {% set saved_roles = [] %}

            {% if roles|length == 1 %}
            {% for host_name in groups.overcloud_nodes %}
            {% set host_short_name = host_name is search(".*rhel8.*") | ternary(host_name.split('-')[-2], host_name.rstrip('1234567890-').split('-')[-1]) %}
            {% set role_name = role_names_mapping.get(host_short_name, host_short_name|title) %}
            {% if role_name not in saved_roles %}
            {%- if roles_iter.append(role_name)%}{% endif %}
            {%- if saved_roles.append(role_name)%}{% endif %}
            {% endif %}
            {% endfor %}
            {% else %}
            {% set roles_iter = roles %}
            {% endif %}

            {% for r in roles_iter %}
            {% if r in multirhel_roles_map_inversed %}
            cat {{ install.heat.templates.basedir }}/roles/{{ multirhel_roles_map_inversed[r] }}.yaml | \
                sed 's/name: {{ multirhel_roles_map_inversed[r] }}/name: {{ r }}/g' | \
                sed 's/Role: {{ multirhel_roles_map_inversed[r] }}/Role: {{ r }}/g' | \
                sed 's/OS::TripleO::Services::NovaLibvirt$/OS::TripleO::Services::NovaLibvirtLegacy/g' | \
                sed 's/{{ multirhel_roles_map_inversed[r] }} Node role/{{ r }} Node role/g' | \
                sed 's/{{ multirhel_roles_map_inversed[r] }} role/{{ r }} role/g' | \
                sed 's/{{ multirhel_roles_map_inversed[r] }} role/{{ r }} role/g' | \
                sed 's/HostnameFormatDefault:.*$/HostnameFormatDefault: "{{ r | lower }}-%index%"/g' | \
                sed -E 's#^(.*)(CountDefault:.*)$#\1\2\n\1ImageDefault: file:///var/lib/ironic/images/overcloud-rhel8.raw#g' \
                >> {{ template_base }}/roles/multirhel/{{ r }}.yaml
            {% endif %}
            {% endfor %}

      - name: template for generating roles_data.yml
        template:
            src: tripleo_roles/tripleo_roles.sh.j2
            dest: "{{ template_base }}/roles/tripleo_roles.sh"
            force: yes

      - name: generate roles_data.yaml
        shell: |
            source ~/stackrc
            bash "{{ template_base }}/roles/tripleo_roles.sh" &> roles_data.log
        register: roles_data

      - name: Set up 'default_route_networks' in roles data
        when:
          - install.network.protocol == 'ipv6'
        set_default_route_networks:
          roles_file: "{{ template_base }}/roles/roles_data.yaml"
          value: ControlPlane
          backup: true

      - name: generate node_names_mapping from role_names_mapping
        set_fact:
            node_names_mapping: "{{ node_names_mapping|default({}) | combine({ item.value: item.key}) }}"
        with_dict: "{{ role_names_mapping }}"

      # the host name template is not needed with baremetal provisioning before overcloud
      - set_fact:
          override_hostname_format: "{{ (install.version|default(undercloud_version)|openstack_release < 17) | ternary(True, False) }}"

      - block:
          - name: read roles data file
            command: "cat {{ template_base }}/roles/roles_data.yaml"
            register: roles_data_output

          - name: load roles data to var
            set_fact:
                roles_data_var: "{{ roles_data_output.stdout | from_yaml }}"

          - name: create list with nodes which don't have hostname format
            set_fact:
                nodes_without_hostname_format: "{{ nodes_without_hostname_format|default({}) | combine({node_names_mapping.get(item.name, item.name|lower): item.name}) }}"
            when: item.HostnameFormatDefault is not defined
            with_items: "{{ roles_data_var }}"

          - name: prepare hostname template for roles without default format
            template:
                src: tripleo_roles/hostnames.yaml.j2
                dest: "{{ template_base }}/hostnames.yaml"
            when: nodes_without_hostname_format is defined
        when: override_hostname_format

      - name: load networks mapping for specific ips
        include_vars:
            file: "files/control_node_placement/network_mapping.yaml"
        when:
           - install.predictable
           - install.predictable.ips
           - install.version|default(undercloud_version) | openstack_release >= 10

      - name: create the nodes file
        template:
            src: tripleo_roles/nodes.yaml.j2
            dest: "{{ template_base }}/roles/nodes.yaml"
            force: yes

      - name: replace '%stackname%- in host name formats
        replace:
            path: "{{ template_base }}/roles/roles_data.yaml"
            regexp: "HostnameFormatDefault: '%stackname%-(.*)'"
            replace: 'HostnameFormatDefault: "\1"'

      - name: replace host names for roles
        replace:
            path: "{{ template_base }}/roles/roles_data.yaml"
            regexp: 'HostnameFormatDefault: "{{ item.old }}-(.*)"'
            replace: 'HostnameFormatDefault: "{{ item.new }}-\1"'
        with_items:
            - old: novacompute[a-z]*
              new: compute
            - old: compute[a-z]*
              new: compute

      - name: assigning specific node ids
        import_tasks: tasks/control_node_placement/specific_node_ids.yml
        when:
           - install.specific.node.ids
           - install.version|default(undercloud_version) | openstack_release >= 10
        vars:
            role_file_path: "{{ template_base }}/roles/roles_data.yaml"
            generate_scheduler_hints: yes

- name: Deploy the Overcloud with composable roles
  import_playbook: "{{ overcloud_deploy | default('deploy.yml') }}"
  tags:
      - tripleo_roles_deploy
