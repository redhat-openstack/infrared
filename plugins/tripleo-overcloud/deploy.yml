- name: non-container hacks
  hosts: undercloud
  any_errors_fatal: true
  tags:
      - deploy_preparation
      - deploy_environment
  tasks:
      - shell: |
          #MODIFY THT_ROOT to point to your tripleo-heat-templates
          THT_ROOT=/usr/share/openstack-tripleo-heat-templates/
          cd $THT_ROOT/environments
          > docker.yaml
          > docker-ha.yaml
          find . -exec sed -i -e "s|docker/services/collectd.yaml|puppet/services/metrics/collectd.yaml|g" {} \;
          find . -exec sed -e "s|docker/services/sensu-client.yaml|puppet/services/monitoring/sensu-client.yaml|g" -i {} \;
          find . -exec sed -e "s|docker/services|puppet/services|g" -i {} \;
        when:
          - install.containers|bool == false
          - install.version|default(undercloud_version)|openstack_release >= 12
        become: yes

- name: Populate the overcloud deploy script
  import_playbook: build_templates.yml
  tags:
      - deploy_preparation
      - templates

- name: Prepare TLS Everywhere
  import_playbook: tls_everywhere.yml
  tags:
      - deploy_preparation
      - templates
      - freeipa
  when:
      - install.tls.everywhere|default(False)
      - install.version|default(undercloud_version)|openstack_release >= 12
      - (install.version|default(undercloud_version)|openstack_distribution) == 'OSP'

- name: Run heat agent script in a background if splitstack deployment
  hosts: undercloud
  gather_facts: no
  any_errors_fatal: true
  tags: deploy_preparation
  tasks:
    - name: Run heat agent script in a background if splitstack deployment
      shell: ~{{ ansible_user|default(ansible_ssh_user)  }}/heat-agent.sh > heat_agent.log 2>&1
      async: 1000
      poll: 0
      when: install.splitstack|default(False)

- name: Deploy the Overcloud
  hosts: undercloud
  gather_facts: yes
  any_errors_fatal: true
  vars:
      overcloudrc_file: "{{ ansible_user_dir }}/{{ install.overcloud.stack }}rc"
  tags:
      - deploy
  tasks:
      - name: adjust max number of concurrent builds to prevent undercloud overload
        ini_file:
            path: /etc/nova/nova.conf
            section: DEFAULT
            option: max_concurrent_builds
            value: 5
        become: yes

      - name: restart nova services
        command: "systemctl restart openstack-nova-*"
        become: yes

      - name: Execute the overcloud deploy script
        shell: |
            source ~/stackrc
            bash {{ overcloud_deploy_script }} &> overcloud_install.log
        register: overcloud_deploy
        ignore_errors: yes

      - include_role:
            name: tls-everywhere
        vars:
            stages:
                - post_overcloud
        when:
            - install.tls.everywhere|default(False)
            - install.version|default(undercloud_version)|openstack_release >= 12
            - overcloud_deploy.rc == 0

      - name: Print the last few lines of the output to spot failures
        command: tail -n60 overcloud_install.log

      # List of failures is supported since RHOS10
      - name: Print stack failures
        shell: |
            source ~/stackrc
            openstack stack failures list overcloud
        when: overcloud_deploy.rc != 0 and install.version|default(undercloud_version)|openstack_release >= 10
        tags: skip_ansible_lint

      - name: Prepare stack failures long log
        shell: |
            source ~/stackrc
            openstack stack failures list overcloud --long > openstack_failures_long.log
        when: overcloud_deploy.rc != 0 and install.version|default(undercloud_version)|openstack_release >= 10
        tags: skip_ansible_lint

      - name: copy summary script
        template:
            src: deploy_info.sh.j2
            dest: ~/deploy_info.sh
            mode: 0755
        tags: summary

      - name: Prepare Execute the deployment summary script
        become: yes
        # TODO(yfried): use "file" module intead mkdir
        shell: |
            mkdir -p /var/log/extra/
            source ~/stackrc
            ~{{ ansible_user|default(ansible_ssh_user) }}/deploy_info.sh --long > /var/log/extra/deploy_resources.log 2>&1 &
            ~{{ ansible_user|default(ansible_ssh_user) }}/deploy_info.sh 2>&1 &
            wait
        tags: summary

- name: Update inventory with overcloud details
  import_playbook: update_inventory.yml
  tags:
      - inventory_update
      - deploy

- name: Verify overcloud deployment
  hosts: undercloud
  gather_facts: no
  any_errors_fatal: true
  vars:
      overcloudrc_file: "{{ ansible_user_dir }}/{{ install.overcloud.stack }}rc"
  tags:
      - deploy
  tasks:
    - fail:
          msg: "Overcloud deployment failed... :("
      when: overcloud_deploy is defined and overcloud_deploy.rc != 0

    - name: verify overcloudrc was created
      wait_for:
          path: "{{ overcloudrc_file }}"
          state: present
          timeout: 60

    - name: check if we have v3 rc file
      stat:
          path: "{{ ansible_user_dir }}/{{ install.overcloud.stack }}rc.v3"
      register: rc_file_path
      tags:
          - clouds_file

    - name: update clouds.yaml file
      include_tasks: clouds.yml
      vars:
            v3_file: "{{ install.overcloud.stack }}rc.v3"
            v2_file: "{{ install.overcloud.stack }}rc"
            auth_file_path: "{{ ansible_user_dir }}/{{ rc_file_path.stat.exists | ternary(v3_file, v2_file) }}"
            cloudname: "{{ (auth_file_path|basename == 'stackrc') |ternary('undercloud','overcloud') }}"
      tags:
          - clouds_file

    - name: fetch the overcloud rc file
      tags:
          - fetch_rc_file
      fetch:
          src: "{{ overcloudrc_file }}"
          dest: "{{ inventory_dir }}/keystonerc"
          flat: yes
          fail_on_missing: yes

    - name: fetch overcloud v3 file if present
      tags:
          - fetch_rc_file
      fetch:
          src: "{{ ansible_user_dir }}/{{ install.overcloud.stack }}rc.v3"
          dest: "{{ inventory_dir }}/{{ install.overcloud.stack }}rc.v3"
          flat: yes
          fail_on_missing: no

    - name: Read baremetal nodes got from user input on hybrid deployment
      block:
        - name: Set hybrid var
          include_vars:
              file: "{{ install.hybrid }}"
              name: bm_nodes

        - name: get nodes name
          set_fact:
              node_name: "{{ item.name }}"
          with_items: "{{ bm_nodes.nodes }}"
          register: nodes

        - name: set list of bm nodes
          set_fact:
              bm_nodes: "{{ nodes.results | map(attribute='ansible_facts.node_name') | list }}"
      when: install.hybrid is defined

    - name: set bm_nodes to empty when not hybrid
      set_fact:
          bm_nodes: ""
      when: install.hybrid is not defined

    - name: Get overcloud nodes
      set_fact:
        oc_nodes: "{{ groups.get('overcloud_nodes', []) }}"

    - name: vbmc for overcloud
      delegate_to: hypervisor
      include_role:
          name: vbmc
      vars:
          vbmc_nodes: "{{ oc_nodes | difference(bm_nodes) }}"
          overcloud_deploy: "yes"
      when:
          - install.version|default(undercloud_version) | openstack_release >= 11 or install.vbmc.force
          - "'hypervisor' in groups"
          - vbmc_host == 'hypervisor'
