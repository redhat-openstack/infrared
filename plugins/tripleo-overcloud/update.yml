- name: Collecting Info
  hosts: undercloud:overcloud_nodes:!unused
  gather_facts: yes
  any_errors_fatal: true
  tags: update_collect_info
  tasks:
      - name: Get Undercloud version
        become: true
        find:
            use_regex: yes
            patterns: 'rhos-release-[0-9]+.*'
            paths:
              - '/etc/yum.repos.d/'
        register: result
        when: "'undercloud' in group_names"

      - name: Setting undercloud_version
        set_fact:
            undercloud_version: "{{ hostvars[groups['undercloud'][0]]['result'].files[0]['path'] | basename | regex_replace('^rhos-release-([0-9]+).*$', '\\1') }}"

- name: Undercloud Validation
  hosts: undercloud
  gather_facts: yes
  any_errors_fatal: true
  vars:
      overcloud_deploy_script: "~/overcloud_deploy.sh"
      reg_file: "environment-rhel-registration.yaml"
  tags:
      - update_validation
      - update_undercloud_validation
  tasks:
      - name: Validation
        include: "tasks/update/undercloud_validation.yml"

      - name: check for cdn registration env file
        command: grep "{{ reg_file }}" {{ overcloud_deploy_script }}
        ignore_errors: yes
        register: cdn_status

      - name: set fact oc registered
        set_fact:
            oc_cdn_register: "{{ cdn_status.rc }}"

- name: Update Overcloud repos
  hosts: overcloud_nodes:!unused
  gather_facts: yes
  any_errors_fatal: true
  tags:
      - update
      - update_repos
  vars:
      rhos_release_rpm: "https://url.corp.redhat.com/rhos-release-latest-rpm"
  roles:
      - role: rhos-release
        release: "{{ (undercloud_version|int) }}"
        rr_buildmods: "{{ install.buildmods }}"
        build: "{{ install.build }}"
        mirror: "{{ install.mirror | default(omit) }}"
        rr_distro_version: "{{ install.osrelease|default(omit) }}"
        when: hostvars[groups['undercloud'][0]]['oc_cdn_register']|int == 1

- name: Overcloud Minor Update
  hosts: undercloud
  gather_facts: yes
  any_errors_fatal: true
  vars:
      undercloud_rc: "~/stackrc"
      overcloud_rc: "~/overcloudrc"
      overcloud_deploy_script: "~/overcloud_deploy.sh"
      overcloud_update_script: "~/overcloud_update.sh"
      overcloud_update_plan: "~/overcloud_update_plan.sh"
  tags:
      - update
  tasks:
      - name: update deployment plan in Mistral
        include: tasks/update/common/update_mistral_plan.yaml
        when: undercloud_version|openstack_release in [10, 11]

      - name: Scan nodes ssh keys
        command: "ssh-keyscan -t rsa {{ hostvars[item].ansible_ssh_host }}"
        with_items: "{{ groups.overcloud_nodes|default([])|difference(groups.unused|default([])) }}"
        register: pubkeys

      - name: Add nodes to known_hosts
        known_hosts:
            name: "{{ hostvars[item.item].ansible_ssh_host  }}"
            key: "{{ item.stdout }}"
        with_items: "{{ pubkeys.results }}"

      - name: Overcloud Update
        include: tasks/update/common/update_overcloud.yaml

- name: Overcloud Reboot
  hosts: overcloud_nodes:!unused
  gather_facts: false
  any_errors_fatal: true
  serial: 1
  tasks:
      # TODO(yprokule): figure out if we should migrate instances from computes ?
      - name: put node to standby mode
        command: |
            sudo pcs node standby --wait=300
        ignore_errors: True
        register: standby_node

      - name: Reboot the node
        become: true
        shell: "sleep 5 && shutdown -r now"
        async: 1
        poll: 0
        ignore_errors: true

      - block:
            - name: waiting for the node to be available
              wait_for:
                  port: 22
                  host: "{{ ansible_ssh_host }}"
                  search_regex: OpenSSH
                  delay: 10
                  timeout: 360
              delegate_to: localhost
              when: "'hypervisor' not in groups"

            - name: waiting for the node to be available
              become: no
              wait_for:
                  host: "{{ ansible_ssh_host }}"
                  search_regex: OpenSSH
                  delay: 10
                  timeout: 360
              delegate_to: hypervisor
              when: "'hypervisor' in groups"

      - name: unstandby node
        command: |
            sudo pcs node unstandby
        when: standby_node|succeeded
