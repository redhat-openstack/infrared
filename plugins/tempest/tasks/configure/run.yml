- name: Check if deployer file is present
  stat:
      path: "{{ deployer_input }}"
  register: deployer_input_stat

- name: Run Whitebox plugin configuration commands
  block:
    - name: Get Compute node IP inventory
      shell: "source ~/stackrc && openstack server list -f value -c Name -c Networks | grep -i compute | sort -h"
      register: ip_inventory
    - name: Get hypervisor inventory
      shell: "source ~/keystonerc && openstack hypervisor list -f value -c \"Hypervisor Hostname\" | sort -h"
      register: hostname_inventory
    - name: Map host with corresponding IP
      vars:
        final_compute: ''
      set_fact:
        final_compute: "{{ item.0.split() | first }}:{{ item.1.split('ctlplane=')[1] }},{{ final_compute | default('') }}"
      loop: "{{ hostname_inventory.stdout_lines | zip(ip_inventory.stdout_lines) | list }}"
      when: 'item.1.split() | first in item.0.split() | first'
  when: test.configure.whitebox.plugin

- name: Configure Whitebox db parameters
  block:
    - name: Get controller hostname
      shell: source ~/stackrc && ansible-inventory -i /usr/bin/tripleo-ansible-inventory --graph Controller | sed -ne 's/^[ \t|]\+--\([a-z0-9\-]\+\)$/\1/p' | head -n 1
      register: controller_host
    - name: Get internal IP
      shell: source ~/stackrc && ansible-inventory -i /usr/bin/tripleo-ansible-inventory --host={{ controller_host.stdout | trim }} | jq '.internal_api_ip' | tr -d '"'
      register: internal_ip
    - name: Get control plane IP
      shell: source ~/stackrc && ansible-inventory -i /usr/bin/tripleo-ansible-inventory --host={{ controller_host.stdout | trim }}| jq '.ctlplane_ip' | tr -d '"'
      register: host_ip
    - name: Get Nova password
      shell: |
        source ~/stackrc && openstack object save overcloud plan-environment.yaml
        cat plan-environment.yaml | awk '/NovaPassword/ {print $2}'
      register: nova_password
  when: test.configure.whitebox.db

- debug:
    var: test

- debug:
    var: virtualenvs

- name: Run tempest configuration tool
  vars:
      installer_options:
          tripleo:
              orchestration:
                  stack_owner_role: heat_stack_owner
              identity:
                  region: regionOne
          packstack: {}

      openstack_config_options: "{{ installer_options.get(test.openstack.installer, {}) }}"
      config_options: "{{ openstack_config_options | combine(test.get('config', {}).get('options', {})) }}"

  shell: |
      test -e {{ virtualenvs.tempest }}/bin/activate && source {{ virtualenvs.tempest }}/bin/activate
      source ~/keystonerc
      {{ config_command | default("tools/config_tempest.py") }} \
              {% if deployer_input_stat.stat.exists %}
              --deployer-input {{ deployer_input }} \
              {% endif %}
              --debug \
              -v \
              --create \
              {% if test.image|default('') %}
                  {% if test.images is defined and test.images.packages|default('') %}
                      --image ~/tempest_image \
                  {% else %}
                      --image {{ test.image }} \
                  {% endif %}
              {% endif %}
              {% if test.get('config', {}).get('longopt', []) %}
                   {% for value in test['config']['longopt'] %}
                       --{{ value }} \
                   {% endfor %}
              {% endif %}
              identity.uri $OS_AUTH_URL \
              identity.admin_password $OS_PASSWORD \
              scenario.img_dir ~/{{ test.dir }}/etc \
              {# https://bugzilla.redhat.com/show_bug.cgi?id=1382048 #}
              {# https://github.com/openstack/tripleo-heat-templates/commit/9b739012b71e2833e59e94cbe423cda77405c6cb#diff-2df80226aa5ac8fe81e6159bda8d4d2f #}
              {% if test.openstack.version|default(overcloud_version)|openstack_release < 10 %}
              volume-feature-enabled.backup false \
              {% endif %}
              {# This option only exists for letting mitaka tempest to run with liberty openstack, otherwise it must be set to true #}
              {% if test.openstack.version|default(overcloud_version)|openstack_release == 9 %}
              volume-feature-enabled.volume_services true \
              {% endif %}
              {# Whitebox Tempest Plugin #}
              {% if test.configure.whitebox.plugin %}
              whitebox.hypervisors {{ final_compute | regex_replace(',$', '') }} \
              {% endif %}
              {% if test.configure.whitebox.db %}
              whitebox-database.internal_ip {{ internal_ip.stdout }} \
              whitebox-database.host {{ host_ip.stdout }} \
              whitebox-database.password {{ nova_password.stdout }} \
              {% endif %}
              {# config options #}
              {% for section_name,options in config_options.items() %}
              {% for option_name,value in options.items() %}
              {{ section_name }}.{{ option_name }} {{ value }} \
              {% endfor %}
              {% endfor %}
              {% if test.mode == 'debug_failing' | default('') %}
              debug.run_on_failure '{{ tempest_debug_command  }}' \
              {% endif %}
              {% if test.mode == 'debug_all' | default('') %}
              debug.run_on_teardown '{{ tempest_debug_command }}' \
              {% endif %}
              {# remove options #}
              {% if test.get('remove', {}).get('options', {}) %}
                {% for section_name,options in test.get('remove', {}).get('options', {}).items() %}
                    {% for option_name,value in options.items() %}
                        --remove {{ section_name }}.{{ option_name }}={{ value }} \
                    {% endfor %}
                {% endfor %}
              {% endif %}
              --out ~/{{ test.dir }}/etc/tempest.conf
  args:
      chdir: "{{ config_dir | default('~/' + test.dir) }}"
  environment:
      REQUESTS_CA_BUNDLE: '/etc/pki/tls/certs/ca-bundle.crt'
  register: config_result

- name: Save the current state for the later cleanup
  shell: >
      test -e {{ virtualenvs.tempest }}/bin/activate && source {{ virtualenvs.tempest }}/bin/activate;
      tempest cleanup --init-saved-state
  args:
      executable: /bin/bash
      chdir: "{{ test.dir }}"
  when: test.openstack.version|default(overcloud_version)|openstack_release > 7 or test.setup != 'rpm'


- name: Print configuration cmd
  debug:
        var: config_result.cmd
        verbosity: 3

- name: Print configuration stdout
  debug:
        var: config_result.stdout_lines
        verbosity: 3
