- name: Check if deployer file is present
  stat:
      path: "{{ deployer_input }}"
  register: deployer_input_stat

- name: Run tempest configuration tool
  vars:
      installer_options:
          tripleo:
              orchestration:
                  stack_owner_role: heat_stack_owner
              identity:
                  region: regionOne
          packstack: {}

      openstack_config_options: "{{ installer_options.get(test.openstack.installer, {}) }}"
      config_options: "{{ openstack_config_options | combine(test.get('config', {}).get('options', {})) }}"

  shell: |
      test -e {{ virtualenvs.tempest_conf }}/bin/activate && source {{ virtualenvs.tempest_conf }}/bin/activate
      source ~/keystonerc
      {{ config_command | default("tools/config_tempest.py") }} \
              {% if deployer_input_stat.stat.exists %}
              --deployer-input {{ deployer_input }} \
              {% endif %}
              --debug \
              -v \
              --create \
              {% if test.image|default('') %}
              --image {{ test.image }} \
              {% endif %}
              identity.uri $OS_AUTH_URL \
              identity.admin_password $OS_PASSWORD \
              scenario.img_dir ~/{{ test.dir }}/etc \
              {# https://bugzilla.redhat.com/show_bug.cgi?id=1382048 #}
              {# https://github.com/openstack/tripleo-heat-templates/commit/9b739012b71e2833e59e94cbe423cda77405c6cb#diff-2df80226aa5ac8fe81e6159bda8d4d2f #}
              {% if test.openstack.version|default(overcloud_version)|openstack_release < 10 %}
              volume-feature-enabled.backup false \
              {% endif %}
              {# config options #}
              {% for section_name,options in config_options.iteritems() %}
              {% for option_name,value in options.iteritems() %}
              {{section_name}}.{{option_name}} {{value}} \
              {% endfor %}
              {% endfor %}
              {# remove options #}
              {% if test.get('remove', {}).get('options', {}) %}
                {% for section_name,options in test.get('remove', {}).get('options', {}).iteritems() %}
                    {% for option_name,value in options.iteritems() %}
                        --remove {{section_name}}.{{option_name}}={{value}} \
                    {% endfor %}
                {% endfor %}
              {% endif %}
              --out ~/{{ test.dir }}/etc/tempest.conf
  args:
      chdir: "{{ config_dir | default('~/' + test.dir) }}"
  register: config_result

- name: Save the current state for the later cleanup
  shell: >
      test -e {{ virtualenvs.tempest }}/bin/activate && source {{ virtualenvs.tempest }}/bin/activate;
      tempest cleanup --init-saved-state
  args:
      executable: /bin/bash
      chdir: "{{ test.dir }}"
  when: test.openstack.version|default(overcloud_version)|openstack_release > 7 or test.setup != 'rpm'


- name: Print configuration cmd
  debug:
        var: config_result.cmd
        verbosity: 3

- name: Print configuration stdout
  debug:
        var: config_result.stdout_lines
        verbosity: 3
