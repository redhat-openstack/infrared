- name: Create the tempest directory
  file:
      dest: "~/{{ test.dir }}"
      state: directory

- name: Get the script which configures the tempest directory
  shell: ls -d /usr/share/openstack-tempest-*/tools/configure-tempest-directory
  register: configure_tempest_dir
  ignore_errors: true

- name: Initialize tempest workspace directory using configure-tempest-directory
  command: "{{ configure_tempest_dir.stdout_lines[0] }}"
  args:
      chdir: "~/{{ test.dir }}"
      creates: "~/{{ test.dir }}/LICENSE"
  when: configure_tempest_dir.rc == 0

- name: Install tempestconf if config script is not part of tempest
  become: yes
  vars:
      tempestconf_rpm: "{{ (test.openstack.version|default(overcloud_version)|openstack_release >= 15) | ternary('python3-tempestconf', 'python-tempestconf') }}"
  package:
      name: "{{ tempestconf_rpm }}"
      state: present
  when: configure_tempest_dir.rc != 0

- name: Initialize tempest workspace directory using tempest init
  command: "tempest init"
  args:
      chdir: "~/{{ test.dir }}"
      creates: "~/{{ test.dir }}/etc"
  when: configure_tempest_dir.rc != 0

- name: Create stestr dir
  file:
    path: "~/{{ test.dir }}/.stestr"
    state: directory
  ignore_errors: true

- name: Copy custom .stestr files from the given location
  get_url:
    url: "~/{{ test.sdir }}/{{ item }}"
    dest: "~/{{ test.dir }}/.stestr"
  with_items:
    - 0.gz
    - 1.gz
    - failing.gz
    - format.gz
    - meta.dbm.dat.gz
    - meta.dbm.dir.gz
    - next-stream.gz
    - times.dbm.bak.gz
    - times.dbm.dat.gz
    - times.dbm.dir.gz
  ignore_errors: true

- name: Unzip archived .stestr files
  unarchive:
    src: "~/{{ test.dir }}/{{ item }}"
    dest: "~/{{ test.dir }}/{{ item.split('.') | first }}"
    remote_src: yes
  with_items:
    - 0.gz
    - 1.gz
    - failing.gz
    - format.gz
    - meta.dbm.dat.gz
    - meta.dbm.dir.gz
    - next-stream.gz
    - times.dbm.bak.gz
    - times.dbm.dat.gz
    - times.dbm.dir.gz
  ignore_errors: true

- name: Check if we have tempestconf tool installed
  stat:
      path: /usr/bin/discover-tempest-config
  register: tempest_conf_tool

- name: Set facts for configuration run
  set_fact:
      config_command: /usr/bin/discover-tempest-config
  when: tempest_conf_tool.stat.exists
