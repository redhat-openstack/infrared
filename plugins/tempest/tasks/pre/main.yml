---
- name: copy openstackrc file
  vars:
      file_src: "{{ test.openstackrc|default(inventory_dir + '/keystonerc') }}"
  copy:
      src: "{{ file_src }}"
      dest: "~/keystonerc"
      force: yes

- name: find deployer-input file
  find:
      pattern: "{{ test.deployer.input.file | basename }}"
      paths:
          - "{{ lookup('env', 'PWD') }}/{{ test.deployer.input.file | dirname }}"
          - "{{ test.deployer.input.file | expanduser | dirname }}"
  register: deployer_find
  delegate_to: localhost
  when:
    - test.deployer is defined
    - test.deployer.input.file is defined

- name: fail when deployer file was not found
  fail:
      msg: "Unable to find deployer input file: {{ test.deployer.input.file }}"
  when: not deployer_find|skipped and deployer_find.matched == 0

- name: check if default deployer file is present
  stat:
      path: "{{ inventory_dir }}/tempest-deployer-input.conf"
  delegate_to: localhost
  register: default_deployer_stat
  when: deployer_find|skipped

- name: copy the tempest-deployer-input to the tester
  vars:
      input_file: "{{ deployer_find.files[0].path if not deployer_find|skipped else default_deployer_stat.stat.path|default('') }}"
  copy:
      src: "{{ input_file }}"
      dest: "{{ deployer_input }}"
      force: yes
  when: input_file|default('')

- name: set facts for results formats - define dictionary
  set_fact:
      results_formats: {}

- name: set facts for results formats
  set_fact:
      results_formats: "{{ results_formats | combine({item: ''}) }}"
  with_items:
      "{{ test.get('results', {}).get('formats', {}).split(',') }}"

- name: set 'pip_packages' facts
  vars:
      pip_packages: []
  set_fact:
      pip_packages: "{{ pip_packages }} + [ '{{ item }}' ]"
  with_items: "{{ test.get('pip', {}).get('packages', ('')).split(',') | default('') }}"

- name: run configuration tasks for installer '{{ test.openstack.installer }}'
  include_tasks: "{{ test.openstack.installer }}.yml"
