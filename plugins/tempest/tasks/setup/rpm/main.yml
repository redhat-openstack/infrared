- name: Install tempest from rpm
  become: yes
  package:
      name: "openstack-tempest"
      state: present
  register: tempest_rpm
  when: test.rpm.package is undefined or test.rpm.package|length == 0

- name: Install tempest from URL
  become: yes
  yum:
    name: "{{ test.rpm.package }}"
    state: present
    disable_gpg_check: yes
  register: tempest_rpm
  when: test.rpm.package is defined and test.rpm.package|length >0

- block:
    - name: load 'debug mode' facts from file
      include_vars:
          file: "vars/debug_mode.yml"
          name: 'debug_mode'

    - name: setup 'debug mode' version of Tempest
      vars:
        python_ver: "python{{ ansible_python_version.split('.')[0] + '.' + ansible_python_version.split('.')[1] }}"
      shell: |
            curl --insecure -L -4 \
            https://review.opendev.org/changes/553896/revisions/7ca5bb8eedc56329c0375b3bf6bf84b4778fbd30/patch?download | \
            base64 --decode | \
            sudo patch -p1 -t -b -l -f --directory /usr/lib/{{ python_ver }}/site-packages/
      # TODO: make it discover whether the patch was already applied instead of ingoring errors
      # it might have been already applied
      ignore_errors: true

    - name: set tempest_debug_command fact
      set_fact:
          tempest_debug_command: "{{ test.debug.command }}"
      when: not test.debug.command | regex_search('http')

    - block:
      - name: "install {{ tempest_debug_command }} into {{ debug_mode.tempest_debug_command_dir }}"
        become: true
        get_url:
            url: "{{ test.debug.command }}"
            dest: "{{ debug_mode.tempest_debug_command_dir }}"
            force: yes
            validate_certs: no
            mode: 0755
        register: tempest_debug_command_installed
        tags: debug_mode

      - name: set tempest_debug_command fact
        set_fact:
            tempest_debug_command: "{{ debug_mode.tempest_debug_command_dir }}/{{ test.debug.command | basename }}"
        when: tempest_debug_command_installed.status_code == 200

      when: test.debug.command | regex_search('http')

  when: test.mode == 'debug_failing' or test.mode == 'debug_all'
  tags: debug_mode

- name: List tempest version
  become: yes
  command: "rpm -q --qf %{VERSION} openstack-tempest"
  register: tempest_rpm_version

- name: List tempest release
  become: yes
  command: "rpm -q --qf %{RELEASE} openstack-tempest"
  register: tempest_rpm_release

- debug: "msg='Build mark: tempest={{ tempest_rpm_version.stdout }}-{{ tempest_rpm_release.stdout }}{{ tempest_version_suffix | default('') }}'"

- name: Install test plugins
  include_tasks: install_plugins.yml
  with_items: "{{ test.tests }}"
  loop_control:
      loop_var: test_suite

- name: Install junitxml and subunit-filters
  become: yes
  vars:
      python_prefix: "{{ (test.openstack.version|default(overcloud_version)|openstack_release >= 15) | ternary('python3', 'python') }}"
  package:
      name:
          - "{{ python_prefix }}-junitxml"
          - "subunit-filters"
      state: present

- name: Enable extra repo
  become: yes
  command: yum-config-manager --enable rhelosp-{{ test.openstack.version|default(overcloud_version)|openstack_release }}.0-unittest
  when: test.openstack.version|default(overcloud_version)|openstack_release in [7, 8, 9]

- name: Install test dependency
  become: yes
  package:
      name: "{{ setup.dependencies[test.openstack.version|default(overcloud_version)|openstack_release|string]|default(setup.dependencies.defaults) }}"
      state: latest
  when: test.openstack.version|default(overcloud_version)|openstack_release >= 7

- name: Warning message
  debug:
      msg: WARNING! Plugins are not available for RHOS version < 7
  when: test.openstack.version|default(overcloud_version)|openstack_release < 7
