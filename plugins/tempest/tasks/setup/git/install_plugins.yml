---
- name: Include test vars
  include_vars: "{{ test_suite }}"

- name: Get plugins from cli
  vars:
    item_src: "{{ item.split(',')[0] }}"
    item_ver: "{{ item.split(',')[1] | default('HEAD') }}"
  set_fact:
      cli_plugins: '{{ cli_plugins|default({}) | combine({ (item_src|basename): { "repo": item_src, "version": item_ver } } ) }}'
  with_items: "{{ test.plugin|default([]) }}"

- name: Set plugins list iterator for "{{ test_suite }}"
  set_fact:
      plugins: "{{ test_dict.plugins | default({}) | combine(cli_plugins|default({})) }}"
      plugins_dir: "{{ ansible_user_dir }}/{{ setup.clone_dir | dirname }}/plugins"

- name: Create plugins directory
  file:
      state: directory
      path: "{{ plugins_dir }}"
  when: plugins

- name: Clone tempest plugins
  environment:
      GIT_SSL_NO_VERIFY: 0
  git:
      repo: "{{ item.value.repo }}"
      dest: "{{ plugins_dir }}/{{ item.key }}"
      version: "{{ item.value.version | default(omit) }}"
  with_dict: "{{ plugins }}"

- name: Install extra system requirements for tests
  package:
    name: "{{ item.value.dependencies }}"
    state: present
  with_dict: "{{ plugins }}"
  when: item.value.dependencies is defined
  become: yes

- block:
  # some repos have "requirements" files and some don't.
    - name: Check if requirements exists
      stat:
          path: "{{ plugins_dir }}/{{ item }}/requirements.txt"
      with_items: "{{ plugins.keys() | list }}"
      register: plugins_reqs

    - name: Get repo requirements
      pip:
          virtualenv: "{{ virtualenvs.tempest }}"
          chdir: "~/{{ setup.clone_dir }}"
          requirements: "{{ item }}"
      with_items: "{{ plugins_reqs.results|selectattr('stat.exists')|map(attribute='stat.path')|list }}"

- name: Install plugin packages
  pip:
      virtualenv: "{{ virtualenvs.tempest }}"
      name: "{{ plugins_dir }}/{{ item }}"
      state: present
      editable: true
  with_items: "{{ plugins.keys() | list }}"
