- name: Test openstack with tempest
  hosts: tester
  gather_facts: yes
  any_errors_fatal: true
  vars:
      deployer_input: "~/ir-tempest-deployer-input.conf"
  tasks:
      - name: Prepare tempest files
        include: "tasks/discover_overcloud_version.yml"
        tags:
            - discover_overcloud
        when: test.openstack.version is not defined
        delegate_to: "{{ groups.controller[0] }}"

      - debug:
            msg: "Overcloud's OpenStack version that has been auto discovered is {{ overcloud_version }}"
        when: overcloud_version is defined

      - name: Prepare tempest files
        include: tasks/pre/main.yml
        tags:
            - pre

      - name: Setup tempest
        include: "tasks/setup/main.yml"
        tags:
            - setup

      - name: Configure tempest
        include: "tasks/configure/main.yml"
        tags:
           - configure

      - name: Run tempest test suites
        include: "tasks/run_suite.yml"
        with_items: "{{ test.tests }}"
        loop_control:
            loop_var: test_suite_file
        tags:
            - run

- name: collect ansible facts
  hosts: all
  tasks:
    - set_fact:
        ansible_facts_dir: "{{ ansible_user_dir }}/ansible_facts"
        ansible_facts_dir_host: "{{ inventory_dir }}/../../../ansible_facts"
        ansible_facts_filename: "infrared_tempest_"

    - name: recreate facts directory on inventory hosts
      file:
        path: "{{ ansible_facts_dir }}"
        state: "{{ item }}"
      with_items:
        - absent
        - directory

    - name: save ansible facts in json file
      copy:
        content: "{{ hostvars[inventory_hostname] | to_nice_json }}"
        dest: "{{ ansible_facts_dir }}/{{ansible_facts_filename}}{{ inventory_hostname }}.json"

    - name: recreate facts directory on localhost
      file:
        path: "{{ ansible_facts_dir_host }}"
        state: "{{ item }}"
      when: inventory_hostname == 'localhost'
      with_items:
        - absent
        - directory

    - name: fetch ansible facts file from inventory hosts
      fetch:
        src: "{{ ansible_facts_dir }}/{{ inventory_hostname }}.json"
        dest: "{{ ansible_facts_dir_host }}/"
        flat: yes
  tags: collect_facts