---
- name: install the RPM with the pre-built overcloud images
  become: yes
  package:
      name: "{{ install.images.url is defined | ternary(install.images.get('url', '').split(','), install.download.ppc64le.images | ternary (['rhosp-director-images-all'],  ['rhosp-director-images'])) }}"
      state: latest
  register: yum_install
  until: "yum_install is not failed or not yum_install.msg | regex_search('Operation too slow')"
  retries: 2
  # on a regular day this package install takes 120-150sec
  # here we want to allow for mirror/proxy cache to have enough time to download it from main download server before we'll retry
  delay: "{{ install.download.ppc64le.images | ternary(300, 150) }}"

# create Directory structure for multiarch images
- name: create multiarch image directory structure
  become_user: "{{ install.user.name }}"
  become: yes
  file:
      path: "~/images/{{ item }}"
      state: directory
  with_items:
      - x86_64
      - ppc64le
  when: multiarch_images

# todo(yfried): investigate gtar error "Warning: Cannot stat: No such file or directory")'
- name: untar the images
  become: yes
  unarchive:
      src: "/usr/share/rhosp-director-images/{{ item }}"
      dest: "~{{ install.user.name }}/"
      copy: no
      owner: "{{ install.user.name }}"
      group: "{{ install.user.name }}"
      list_files: yes
  register: image_files
  with_items: "{{ tar_images }}"
  when: not multiarch_images

- name: untar the images - Multiarch deployment
  become: yes
  unarchive:
      src: "/usr/share/rhosp-director-images/{{ item }}"
      dest: "~{{ install.user.name }}/images/{{ item | regex_search('(x86_64)|(ppc64le)|(s390x)') }}"
      copy: no
      owner: "{{ install.user.name }}"
      group: "{{ install.user.name }}"
      list_files: yes
  register: image_files
  with_items: "{{ tar_images }}"
  when: multiarch_images
