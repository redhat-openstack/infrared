---
- name: install libguestfs-tools to get virt-customize
  become: yes
  package:
      name: libguestfs-tools
      state: present

# TODO(dtodorov): mirrors need refactoring.
- name: copy select-mirror.sh into home
  copy:
      src: "{{ playbook_dir }}/roles/rhos-release/files/select-mirror.sh"
      dest: "~/select-mirror.sh"
      mode: "0755"
  when: install.mirror|default('')

- name: run select-mirror with provided mirror value
  command: "~/select-mirror.sh {{ install.mirror }}"
  register: selected_mirror
  when: install.mirror|default('')

- name: process results of mirror selection
  set_fact:
      mirror_fqdn: "{{ selected_mirror.stdout | trim }}"
  when: install.mirror|default('')

- name: tmp repos.d for overcloud
  file:
      name: "{{ tmp_oc_repos_dir }}"
      state: directory

# TODO(psedlak): use install/rhos-release / mirror urls (do we want it here?)
- name: setup repositories locally
  rhos_release:
      state: install
      release: "{{ install.version | default(undercloud_version) }}"
      build_date: "{{ install.build }}"
      # explicitly avoid director packages for images
      director: no
      target_directory: "{{ tmp_oc_repos_dir }}"
      # Assume images distro is the same as undercloud
  register: command_result
  until: command_result.stderr.find('Connection reset by peer') == -1
  retries: 40
  delay: 5

- name: copy use-mirror.sh to home
  copy:
      src: "{{ playbook_dir }}/roles/rhos-release/files/use-mirror.sh"
      dest: "~/use-mirror.sh"
      mode: 0755
  when: mirror_fqdn|default('')

- name: reconfigure system to use mirror
  command: "~/use-mirror.sh {{ mirror_fqdn }} yes"
  args:
      chdir: "{{ tmp_oc_repos_dir }}"
  register: mirror_used_cmd
  changed_when: "'Skipping mirror' not in mirror_used_cmd.stdout"
  when: mirror_fqdn|default('')

- name: push repos to overcloud image
  command: "virt-copy-in -a {{ overcloud_image_file }} {{ tmp_oc_repos_dir }} /etc/"

- stat:
      path: /etc/yum.repos.d/patched_rpms.repo
  register: patched_rpms

- name: push patched_rpms.repo to overcloud image
  command: "{{ item }}"
  with_items:
    - "virt-copy-in -a {{ overcloud_image_file }} /etc/yum.repos.d/patched_rpms.repo /etc/yum.repos.d"
    - "virt-copy-in -a {{ overcloud_image_file }} /patched_rpms /"
    - "virt-customize --selinux-relabel --update -a {{ overcloud_image_file }}"
  when: patched_rpms.stat.exists

- name: Install packages in overcloud image
  command: "virt-customize -a {{ overcloud_image_file }} --install {{ install.images.packages }} --selinux-relabel"
  when: install.images.packages|default(None) != None

# Don't use virt-customize to update images. It's unreliable.
