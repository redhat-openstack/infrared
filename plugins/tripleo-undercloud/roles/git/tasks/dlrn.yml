- name: enable test repo in order to get access to pip
  shell: |
    yum-config-manager \
      --setopt 'rhelosp-{{ install.version }}.0-test-deps.includepkgs=python-pip,python2-pip' \
      --enable rhelosp-{{ install.version }}.0-test-deps >/var/log/yum.log
  args:
    warn: no
  tags: skip_ansible_lint

- name: Install epel-release-latest-7
  yum:
    name: https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
    state: present

- name: Creating delorean-latest extra repositories
  yum_repository:
      name: "delorean-latest"
      description: "delorean-latest"
      baseurl: "https://trunk.rdoproject.org/centos7-master/deps/latest/"
      enabled: "1"
      gpgcheck: "0"
      includepkgs: "puppet*,python*,openstack-kolla"
      keepcache: "0"

- name: Creating delorean-passed-ci extra repositories
  yum_repository:
      name: "delorean-passed-ci"
      description: "delorean-passed-ci"
      baseurl: "https://trunk.rdoproject.org/centos7/current-passed-ci/"
      enabled: "1"
      gpgcheck: "0"
      includepkgs: "puppet*,openstack-kolla"
      keepcache: "0"

- name: Install build dependencies
  yum:
      name: "{{ item }}"
      state: latest
  with_items: "{{ setup.dependencies[overcloud_version|default('defaults')] }}"

- name: Add user to mock group
  user:
    name: stack
    groups: mock
    append: yes

- block:
    - name: Clone delorean project
      git:
        repo: "{{ item.repo }}"
        dest: "{{ work_dir }}/{{ item.dest }}"
        version: "{{ item.version|default('master') }}"
        force: yes
      with_items: "{{ git }}"

    - name: Create delorean virtualenv
      pip:
        requirements: "{{ work_dir }}/delorean/requirements.txt"
        virtualenv: "{{ work_dir }}/delorean/venv"
        virtualenv_python: python2.7

    - name: Install delorean
      shell: |
          source venv/bin/activate
          pip install .
      args:
        chdir: "{{ work_dir }}/delorean"

    # TODO Create and replace centos.cfg file to rhel.cfg
    - name: Disable gpg check for delorean repo
      replace:
        dest: "{{ work_dir }}/delorean/scripts/centos.cfg"
        regexp: "gpgcheck=1"
        replace: "gpgcheck=0"

    - name: Update openstack project names
      set_fact:
        openstack_projects: "
            {%- for prj in build_components -%}
                {%- set tmp_dest = prj['name'].split('/')[-1] -%}
                {%- if tmp_dest.startswith(('puppet', 'python')) -%}
                    {{ prj.update({'dest': tmp_dest}) }}
                {%- else -%}
                    {{ prj.update({'dest': 'openstack-%s' % tmp_dest}) }}
                {%- endif -%}
            {%- endfor -%}
            {{ build_components }}"

    - name: Clone tripleo components
      git:
        repo: "https://git.openstack.org/{{ item.name }}"
        dest: "{{ work_dir }}/delorean/data/{{ item.dest }}"
        refspec: "{{ item.refs }}"
        version: 'FETCH_HEAD'
      with_items: "{{ openstack_projects }}"
      when:
        - item.refs is defined

    - name: Build package of tripleo components
      vars:
        packages: "{{ openstack_projects|json_query('[*].dest')|join(' --package-name ') }}"
      shell: |
          source venv/bin/activate
          ./venv/bin/dlrn --package-name {{ packages }} \
                          --config-file projects.ini \
                          --info-repo rdoinfo --dev --local
      args:
        chdir: "{{ work_dir }}/delorean"
  become: no

- name: Setup repository in /etc/yum.repos.d
  template:
    src: patched_rpms.j2
    dest: '/etc/yum.repos.d/patched_rpms.repo'
