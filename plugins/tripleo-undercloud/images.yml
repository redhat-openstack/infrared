- name: Get the undercloud version
  include: version.yml

- name: Preparing the images
  hosts: undercloud
  gather_facts: yes
  any_errors_fatal: true
  tags: images
  vars:
      images_source: "{{ install.images.url|default('') }}"
      images_dest: "{{ ansible_user_dir }}/base_image.qcow2"
      tar_files:
          7:
              - "discovery-ramdisk.tar"
              - "deploy-ramdisk-ironic.tar"
              - "overcloud-full.tar"
          8:
              - "ironic-python-agent.tar"
              - "overcloud-full.tar"
          # Any higher version defaults to 8
      tar_images: "{{ install.images.files | default(tar_files[undercloud_version|openstack_release]) | default(tar_files[8])}}"
      tmp_oc_repos_dir: /tmp/oc_repos/yum.repos.d
      overcloud_image_file: overcloud-full.qcow2
      rhos_release_rpm: "https://url.corp.redhat.com/rhos-release-latest-rpm"
  pre_tasks:
      - name: check for subscription
        command: subscription-manager identity
        become: yes
        ignore_errors: yes
        register: cdn_status
        changed_when: false
        when: install.images.packages|default('') or install.images['update']

      - name: check if rhos-release is available
        uri:
            url: "{{ rhos_release_rpm }}"
            validate_certs: false
        ignore_errors: yes
        register: internal_repos
        when: install.images.packages|default('') or install.images['update']

      - fail:
            msg: overcloud image customization currently not supported outside Red Hat internal network or when using CDN
        when:
            - install.images.packages|default('') or install.images['update']
            - internal_repos|failed or cdn_status|success

      - name: tmp repos.d for overcloud
        file:
          name: "{{ tmp_oc_repos_dir }}"
          state: directory
  roles:
        # modify images - update to core build and install packages
      - role: rhos-release
        release: "{{ undercloud_version }}"
        build: "{{ install.build }}"
        mirror: "{{ install.mirror | default(omit) }}"
        rr_target_directory: "{{ tmp_oc_repos_dir }}"
        when:
            - install.images.packages|default('') or install.images['update']
            - install.version|default(undercloud_version)|openstack_distribution == 'OSP'
        tags: rhos-release

      - role: rdo-release
        release: "{{ undercloud_version }}"
        build: "{{ install.build }}"
        mirror: "{{ install.mirror | default(omit) }}"
        rr_target_directory: "{{ tmp_oc_repos_dir }}"
        when:
            - install.images.packages|default('') or install.images['update']
            - undercloud_version|default(undercloud_version)|openstack_distribution == 'RDO'
        tags: rhos-release
  tasks:
      - include: "tasks/images/{{ install.images.task }}.yml"

      - name: modify images - update to core build and install packages
        include: tasks/images/repos.yml
        # update is a func name (dict.update) so it must be used as str explicitly
        when: install.images.packages|default('') or install.images['update']

      - name: upload the overcloud images to glance
        shell: |
            source ~/stackrc
            openstack overcloud image upload --update-existing
        # FIXME(yfried) use "--os-cloud" instead of "source rc" and replace with command, or os_images
        tags: skip_ansible_lint

      - name: remove downloaded images
        file:
            path: "/home/{{ install.user.name }}/{{ item[1] }}"
            state: absent
        with_subelements:
          - "{{ (image_files|default({})).get('results',{}) }}"
          - "files"
        when: image_files is defined and install.images.cleanup
