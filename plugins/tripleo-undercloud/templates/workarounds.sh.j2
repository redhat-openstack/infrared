#!/bin/bash
#
# Apply workarounds on undercloud

set -euo pipefail

function apply_patch {
    local patch_dir=$1
    local patch_id=$2
    local patch_level=$3
    local gerrit_url=$4

    curl -L -4 ${gerrit_url}/changes/${patch_id}/revisions/current/patch?download | \
        base64 -d > /tmp/patch.txt

    if sudo patch --dry-run --reverse --force -d ${patch_dir} -p${patch_level} < /tmp/patch.txt >/dev/null 2>&1
    then
        echo "Patch ${patch_id} already applied, skipping"
    else
        sudo patch -Ns  -d ${patch_dir} -p${patch_level} < /tmp/patch.txt
    fi
}

{% if 'pre_undercloud_deploy_workarounds' in item %}
{% for bugs in pre_undercloud_deploy_workarounds|default([]) %}
{% for key, value in bugs.items() %}
echo {{ key }}
{% if value.patch %}
{% if 'patchlevel' in value and value.patchlevel is number %}
{% set plevel = value.patchlevel %}
{% else %}
{% set plevel = 1 %}
{% endif %}
{% if 'gerrit_url' in value and value.gerrit_url is string %}
{% set gerrit_url = value.gerrit_url %}
{% else %}
{% set gerrit_url = 'https://review.opendev.org' %}
{% endif %}
apply_patch {{ value.basedir }} {{ value.id }} {{ plevel }} {{ gerrit_url }}
{% else %}
{{ value.command }}

{% endif %}
{% endfor %}
{% endfor %}

{% elif 'post_undercloud_deploy_workarounds' in item %}
{% for bugs in post_undercloud_deploy_workarounds|default([]) %}
{% for key, value in bugs.items() %}
echo {{ key }}
{% if value.patch %}
{% if 'patchlevel' in value and value.patchlevel is number %}
{% set plevel = value.patchlevel %}
{% else %}
{% set plevel = 1 %}
{% endif %}
{% if 'gerrit_url' in value and value.gerrit_url is string %}
{% set gerrit_url = value.gerrit_url %}
{% else %}
{% set gerrit_url = 'https://review.opendev.org' %}
{% endif %}
apply_patch {{ value.basedir }} {{ value.id }} {{ plevel }} {{ gerrit_url }}
{% else %}
{{ value.command }}

{% endif %}
{% endfor %}
{% endfor %}

{% endif %}

