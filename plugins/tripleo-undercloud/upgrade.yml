- name: Undercloud Upgrade Validation
  hosts: undercloud
  gather_facts: yes
  any_errors_fatal: true
  tags:
      - upgrade
      - upgrade_repos
  tasks:
      - name: get undercloud version
        tags: undercloud_version_discovery
        vars:
            discovery_types:
                - rhos_release_file
                - nova
        import_role:
            name: version-discovery

      - name: Validation
        include_tasks: "tasks/upgrade/validation.yml"
        tags:
            - validation
            - upgrade_repos

- name: Undercloud Upgrade
  hosts: undercloud
  gather_facts: yes
  any_errors_fatal: true
  vars:
      operation_type: "{{ 'Update' if install.get('update', {}).undercloud|default(False) else 'Upgrade' }}"
      # NOTE(jfrancoa) The target release will be set by --version param, so we
      # don't have to do strange calculations. If version is not passed (to
      # avoid breakages from jobs which might miss this new approach) we
      # fallback into the previous handling (uc_version+1 for upgrade,
      # uc_version for update).
      undercloud_upgrade_version: "{{ install.version|default(install.upgrade|default(false) | ternary(undercloud_version|int +1, undercloud_version) ) }}"
  tasks:
      - name: Export the stack (for later use during the upgrade)
        include_tasks:
          file: "tasks/upgrade/generate_files.yml"
          apply:
            tags: export
        tags:
          - export
          - never

      - include_role:
            name: rhos-release
            apply:
                tags:
                    - upgrade
                    - upgrade_repos
        vars:
            release: "{{ undercloud_upgrade_version }}"
            director_build: "{{ install.get('director', {}).build|default(omit) }}"
            build: "{{ install.build | default(omit) }}"
            mirror: "{{ install.mirror | default(omit) }}"
            rr_distro_version: "{{ install.osrelease|default(omit) }}"
            rr_buildmods: "{{ install.buildmods }}"
            enable_testing_repos: "{{ install.get('enable', {}).get('testing', {}).repos|default(omit) }}"
            without_ceph: "{{ not install.get('ceph', {}).repos|default(omit) }}"
            custom_script_url: "{{ install.get('custom', {}).get('sources', {}).get('script', {}).get('url', {})|default('') }}"
            skip_release: "{{ custom_script_url != '' or install.get('repos', {}).get('skip', {}).release|default('') }}"
        when:
            - "install.version|openstack_distribution == 'OSP'"
            - not install.cdn|default(False)
            - not skip_release
        tags:
          - always

      - include_role:
            name: cdn_registery
            apply:
                tags:
                    - upgrade
                    - upgrade_repos
        vars:
            cdn_args_file: "{{ install.cdn|default('') }}"
            install_version: "{{ install.version }}"
        when:
            - install.cdn|default(False)
            - "install.version|openstack_distribution == 'OSP'"
        tags:
            - always

      - name: Enable extra repo for vbmc dependencies (RHEL9)
        become: yes
        shell: |
            set -ex
            dnf config-manager --save --setopt rhosp-rhel-9.0-crb.includepkgs=libvirt-devel
            dnf config-manager --set-enabled rhosp-rhel-9.0-crb
        vars:
            custom_script_url: "{{ install.get('custom', {}).get('sources', {}).get('script', {}).get('url', {})|default('') }}"
            skip_release: "{{ custom_script_url != '' or install.get('repos', {}).get('skip', {}).release|default('') }}"
            rr_distro_version: "{{ install.osrelease|default('') }}"
        when:
            - ansible_distribution == 'RedHat'
            - rr_distro_version == '9.0'
            - "install.version|openstack_distribution == 'OSP'"
            - not install.cdn|default(False)
            - not skip_release
        tags:
            - upgrade_repos

      - name: Enable extra repo (crb) for vbmc dependencies (RHEL9.2) before GA
        become: yes
        shell: |
            set -ex
            dnf config-manager --save --setopt rhosp-rhel-9.2-crb.includepkgs=libvirt-devel
            dnf config-manager --set-enabled rhosp-rhel-9.2-crb
        vars:
            custom_script_url: "{{ install.get('custom', {}).get('sources', {}).get('script', {}).get('url', {})|default('') }}"
            skip_release: "{{ custom_script_url != '' or install.get('repos', {}).get('skip', {}).release|default('') }}"
            rr_distro_version: "{{ install.osrelease|default('') }}"
        when:
            - ansible_distribution == 'RedHat'
            - rr_distro_version == '9.2'
            - "install.version|openstack_distribution == 'OSP'"
            - not install.cdn|default(False)
            - not skip_release
        tags:
            - upgrade_repos

      - name: update packages for the upgrade
        become: true
        tags:
            - undercloud_containers
            - upgrade
        package:
          name:
            - "{{ (undercloud_upgrade_version|openstack_release < 15) | ternary('python-tripleoclient', 'python3-tripleoclient') }}"
            - "openstack-tripleo-common"
            - "openstack-tripleo-heat-templates"
            - "openstack-tripleo-validations"
            - "rhosp-release"
          state: latest
        when: undercloud_version|openstack_release >= 13

      - name: prepare undercloud containers
        tags:
            - undercloud_containers
            - upgrade
        import_tasks: tasks/prepare_uc_images.yml
        when: undercloud_version|openstack_release >= 13

      - name: "{{ operation_type }} to version {{ undercloud_upgrade_version }} build {{ install.build | default('latest') }}"
        include_tasks: "tasks/upgrade/upgrade.yml"
        when: undercloud_version|openstack_release <= 10
