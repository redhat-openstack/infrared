- name: Undercloud Upgrade
  hosts: undercloud
  gather_facts: yes
  any_errors_fatal: true
  tags: upgrade
  vars:
      rhos_release_rpm: "https://url.corp.redhat.com/rhos-release-latest-rpm"
      version_map:
          - nova_version: '15'
            rhos_version: '11'
          - nova_version: '14'
            rhos_version: '10'
          - nova_version: '13'
            rhos_version: '9'
          - nova_version: '12'
            rhos_version: '8'
          - nova_version: '2015'
            rhos_version: '7'
      operation_type: "{{ 'Update' if install.get('update', {}).undercloud|default(False) else 'Upgrade' }}"

  pre_tasks:
      - name: Check for /etc/rhosp-release
        stat:
            path: "/etc/rhosp-release"
        register: rhosp_release_file
        tags: upgrade_repos

      - name: Get /etc/rhosp-release content
        command: cat /etc/rhosp-release
        register: rhosp_release_content
        when: rhosp_release_file.stat.exists
        tags: upgrade_repos

      - name: Set undercloud_version from /etc/rhosp-release output
        set_fact:
            undercloud_version: "{{ rhosp_release_content.stdout | regex_replace('^Red Hat OpenStack Platform release ([0-9]+)\\.\\d+\\s.*$', '\\1') }}"
        when: rhosp_release_file.stat.exists
        tags: upgrade_repos

      - name: Get nova version
        shell: nova-manage --version 2>&1 | awk -F . '{print $1}' | tail -1
        register: nova_version
        when: rhosp_release_file.stat.exists == False
        tags: upgrade_repos

      - name: Set undercloud_version from nova-manage output
        set_fact:
            undercloud_version: "{{ (version_map|selectattr('nova_version', 'equalto', nova_version.stdout)|first)['rhos_version'] }}"
        when: rhosp_release_file.stat.exists == False
        tags: upgrade_repos

      - name: Validation
        include: "tasks/upgrade/validation.yml"
        tags:
            - validation
            - upgrade_repos

  roles:
      - role: rhos-release
        release: "{{ undercloud_version|int + (1 if install.upgrade|default(False) else 0) }}"
        build: "{{ install.build | default(omit) }}"
        mirror: "{{ install.mirror | default(omit) }}"
        rr_distro_version: "{{ install.osrelease|default(omit) }}"
        tags:
            - upgrade
            - upgrade_repos
  tasks:
      - name: "{{ operation_type }} to version {{ undercloud_version|int + (1 if install.upgrade|default(False) else 0) }} build {{ install.build | default('latest') }}"
        include: "tasks/upgrade/upgrade.yml"
