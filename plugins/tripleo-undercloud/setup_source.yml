- name: Configure and Install Undercloud from Source
  any_errors_fatal: true
  hosts: undercloud
  become: yes
  gather_facts: yes
  vars:
      custom_repos: "{{ install.repos|default({}) }}"
      skip_release: "{{ install.get('repos', {}).get('skip', {}).release|default('')}}"
      rhos_release_rpm: "https://url.corp.redhat.com/rhos-release-latest-rpm"
      tripleo_ci: "https://github.com/openstack-infra/tripleo-ci.git"
      tripleo_ci_venv: "/home/stack/tripleo-ci-venv"
      tripleo_ci_dir: "/home/stack/tripleo-ci"
      build_components:
          - "openstack/instack-undercloud"
          - "openstack/python-tripleoclient"
          - "openstack/tripleo-heat-templates"
          - "openstack/puppet-tripleo"
          - "openstack/tripleo-puppet-elements"
          - "openstack/tripleo-validations"
          - "openstack/tripleo-image-elements"
          - "openstack/tripleo-ui"
          - "openstack/tripleo-common"
          - "openstack/diskimage-builder"
          - "openstack/instack"

  pre_tasks:
      - name: gather undercloud facts since sometimes they are missing
        setup:

      - name: load rdo overrides
        include_vars: "{{ install.rdo.override }}"
        when: install.get('rdo', {}).get('override', False)

      - name: check for subscription
        command: subscription-manager identity
        ignore_errors: yes
        register: cdn_status
        changed_when: false
        when: not install.cdn|default(False)
  roles:
      - role: cdn_registery
        cdn_args_file: "{{ install.cdn|default('') }}"
        install_version: "{{ install.version }}"
        when:
            - "install.cdn|default(False) or cdn_status.rc == 0"
            - "install.version|openstack_distribution == 'OSP'"
        become: yes

      - role: rhos-release
        release: "{{ install.version }}"
        rr_buildmods: "{{ install.buildmods }}"
        build: "{{ install.build | default(omit) }}"
        director_build: "{{ install.get('director', {}).build|default(omit) }}"
        mirror: "{{ install.mirror | default(omit) }}"
        rr_distro_version: "{{ install.osrelease|default(omit) }}"
        when:
            - "install.version|openstack_distribution == 'OSP'"
            - not install.cdn|default(False)
            - cdn_status.rc != 0
            - not skip_release
        tags: rhos-release

      - role: rdo-release
        release: "{{ install.version }}"
        rr_buildmods: "{{ install.buildmods }}"
        build: "{{ install.build | default(omit) }}"
        mirror: "{{ install.mirror | default(omit) }}"
        when:
            - install.version|openstack_distribution == 'RDO'
            - not skip_release
        tags: rhos-release
  tasks:
      - block:
          - name: enable test repo in order to get access to pip
            shell: |
              yum-config-manager \
                --setopt 'rhelosp-{{ install.version }}.0-test-deps.includepkgs=python-pip,python2-pip' \
                --enable rhelosp-{{ install.version }}.0-test-deps >/var/log/yum.log
            args:
              warn: no
            tags: skip_ansible_lint

          - name: Download delorean repo
            shell: |
                wget https://trunk.rdoproject.org/centos7/delorean-deps.repo \
                    -O /etc/yum.repos.d/delorean.repo
                yum-config-manager \
                    --setopt 'delorean-queens-testing.includepkgs=python*,puppet*' \
                    --enable delorean-queens-testing \
                    --setopt 'rdo-qemu-ev.includepkgs=python*,puppet*' \
                    --enable rdo-qemu-ev
            creates: /etc/yum.repos.d/delorean.repo

          - name: Install build deps
            yum:
                name: "{{ item }}"
                state: latest
            with_items:
                - git
                - gcc
                - python-devel
                - python-pip
                - puppet
                - jq
                - screen
                - python-virtualenv

          - name: Create tripleo-ci virtualenv
            become: no
            shell: "virtualenv {{ tripleo_ci_venv }}"
            creates: "{{ tripleo_ci_venv }}"

          - name: Clone tripleo-ci repo
            become: no
            git:
              repo: "{{ tripleo_ci }}"
              dest: "{{ tripleo_ci_dir }}"
              force: yes

          - name: Install tripleo-ci
            become: no
            shell: |
                source {{ tripleo_ci_venv }}/bin/activate
                pip install -U {{ tripleo_ci_dir }}/

          - name: Install epel-release-latest-7
            shell: yum localinstall https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm

          - name: Prepare delorean-setup
            become: no
            shell: |
                source {{ tripleo_ci_venv }}/bin/activate
                {{ tripleo_ci_dir }}/scripts/tripleo.sh --delorean-setup

          - name: Build package of tripleo components
            become: no
            shell: |
                source {{ tripleo_ci_venv }}/bin/activate
                {{ tripleo_ci_dir }}/scripts/tripleo.sh --delorean-build {{ build_components|join(' ') }}

          - name: Setup repository in /etc/yum.repos.d
            template:
              src: patched_rpms.j2
              dest: '/etc/yum.repos.d/patched_rpms.repo'

      - name: load custom repos configuration file
        include_vars: "{{ custom_repos.config|default('') }}"
        when: "custom_repos.config|default('')"

      - name: Creating extra repositories
        yum_repository:
            name: "{{ item.name }}"
            state: "{{ item.state | default(omit) }}"
            file: "{{ item.file| default(omit) }}"
            description: "{{ item.description | default(omit) }}"
            baseurl: "{{ item.baseurl | default(omit) }}"
            mirrorlist: "{{ item.mirrorlist | default(omit) }}"
            enabled: "{{ item.enabled | default(omit) }}"
            gpgcheck: "{{ item.gpgcheck | default(omit) }}"
        with_items: "{{ extra_repos|default({}) }}"
        when: "extra_repos|default({})"

      - name: Downloading extra repositories
        get_url:
            url: "{{ item }}"
            dest: /etc/yum.repos.d/
        with_items: "{{ custom_repos.urls|default([]) }}"

      - name: install deltarpm
        package:
            state: present
            name: deltarpm

      - name: update system packages
        package:
            state: latest
            name: "*"
        register: update

      - name: reboot the undercloud
        shell: "sleep 2 && shutdown -r now"
        async: 1
        poll: 0
        ignore_errors: true
        when: update|changed

      # Ansible bug around delegate+vars+wait
      # https://github.com/ansible/ansible/issues/11705
      # http://www.elmund.io/configuration%20management/2015/07/23/ansible-delegate_to-and-variables/
      - name: waiting for the undercloud to be available
        become: no
        wait_for:
            port: 22
            host: "{{ ansible_ssh_host }}"
            search_regex: OpenSSH
            delay: 10
        delegate_to: localhost
        when: "'hypervisor' not in groups"
        retries: 6
        delay: 30

      - name: waiting for the undercloud to be available
        become: no
        wait_for:
            port: 22
            host: "{{ ansible_ssh_host }}"
            search_regex: OpenSSH
            delay: 10
        delegate_to: hypervisor
        when: "'hypervisor' in groups"
        retries: 6
        delay: 30

      - name: install the oscplugin/tripleO client
        package:
            name: "{{ (install.version|openstack_release == 7) | ternary('python-rdomanager-oscplugin', 'python-tripleoclient') }}"
            state: present
