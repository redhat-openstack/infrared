- name: Backup the Undercloud image
  hosts: hypervisor
  gather_facts: yes
  any_errors_fatal: true
  vars:
      undercloud: "{{ hostvars[(groups.undercloud|first)].inventory_hostname }}"
      undercloud_image_file: "{{ install.quickstart.filename.rstrip('.qcow2') }}.qcow2"
  tasks:
      - name: install package with virt-sparsify
        package:
            name: libguestfs-tools-c
            state: present
      - block:
          - name: shutdown the undercloud VM
            virt:
                name: "{{ undercloud }}"
                state: destroyed

          - name: copy and shrink undercloud image
            command: "virt-sparsify --compress {{ install.disk.pool }}/{{ undercloud }}-disk1.qcow2 {{ undercloud_image_file }}"

          - name: copy our auth key to the virthost
            copy:
                src: "{{ install.dest.key  | expanduser | realpath }}"
                dest: "~/backup_server_auth_key"
                mode: "0400"

          - name: copy the image to temporary server
            shell: |
                scp -o StrictHostKeyChecking=no -o PreferredAuthentications=publickey -o UserKnownHostsFile=/dev/null -i \
                ~/backup_server_auth_key {{ undercloud_image_file }} {{ install.dest.user }}@{{ install.dest.address }}:{{install.dest.path}}/{{ undercloud_image_file }}
            when: install.dest|default({})
            tags: skip_ansible_lint

        always:
          - name: cleanup the undercloud image file
            file:
                path: "{{ undercloud_image_file }}"
                state: absent

          - name: Power on the undercloud VM
            virt:
                name: "{{ undercloud }}"
                state: running
# TODO(yfried): accept a destination to push image to, and cleanup. Use ansible modules instead
# of hard-coded scp
