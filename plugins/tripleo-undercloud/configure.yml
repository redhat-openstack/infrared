- name: Configure Undercloud
  hosts: undercloud
  tags: configure
  gather_facts: no
  any_errors_fatal: true
  vars:
      - conf: "{{ install.config|default({}) }}"
      - osp_release: "{{ install.version|openstack_release }}"
      - conf_instack: '/usr/share/instack-undercloud/undercloud.conf.sample'
      - conf_oooclient: '/usr/share/python-tripleoclient/undercloud.conf.sample'
      - local_src: "{%- if conf.file|default('') -%}
                {{ conf.file }}
                {%- else -%}
                templates/undercloud.conf.j2
                {%- endif -%}"
  tasks:
      - name: install custom CA if needed
        become: yes
        become_user: root
        when:
          - install.tls.ca != ''
        block:
          - name: "fetch {{ install.tls.ca }}"
            get_url:
              url: "{{ install.tls.ca }}"
              dest: /etc/pki/ca-trust/source/anchors/custom-ssl-ca.crt
              validate_certs: no
            register: custom_ca

          - name: update system trust store
            when: custom_ca is changed
            command: update-ca-trust

      - name: set workingr_dir fact
        set_fact:
            working_dir: "/home/{{ install.user.name }}"

      # We ingore anything with : as it's ipv6 address and we will only set ipv4 nameserver by default
      - name: get nameservers
        command: awk '/#|:/ {next} /nameserver/ { ips=ips $2"," } END {print substr(ips, 1, length(ips)-1)}' /etc/resolv.conf
        register: nameservers
        changed_when: False

      - name: set undercloud_nameservers fact
        set_fact:
            undercloud_nameservers: "{{ nameservers.stdout }}"
        when: nameservers.stdout != ''

      - name: generate container images environment file
        import_tasks: tasks/prepare_uc_images.yml
        when:
            - install.version|openstack_distribution == 'OSP'
            - install.version|openstack_release > 13

      - name: template the undercloud.conf
        template:
            src: "{{ local_src }}"
            dest: ~/undercloud.conf
            force: yes
            mode: 0755
        when: local_src != "none"

      - name: make sure ~/.ssh exists
        file:
            path: ~/.ssh
            state: directory
            mode: 0700

      - name: create default developer-friendly ~/.ssh/config for the stack user
        template:
            src: templates/ssh.config.j2
            dest: ~/.ssh/config
            mode: 0600

      - name: copy default undercloud config
        copy:
            remote_src: yes
            src: "{{ conf_oooclient }}"
            dest: ~/undercloud.conf
            force: yes
            mode: 0755
        when: local_src == "none"

      - name: override values in undercloud conf
        include_tasks: tasks/inject_undercloud_conf.yml
        with_dict: "{{ conf.options|default({}) }}"
        loop_control:
            loop_var: section

      - name: enable undercloud-ssl
        include_tasks: tasks/ssl.yml
        when: install.ssl or install.version|openstack_release > 13
        tags: ssl

      - name: create the base undercloud deploy script
        template:
            src: undercloud_deploy.sh.j2
            dest: ~/undercloud_deploy.sh
            mode: 0755

      - name: the undercloud deploy script
        command: "cat undercloud_deploy.sh"
        tags: deploy

      # to avoid i/o bottlenecks during overcloud deployment
      # limit the number of nodes being deployed simultaneously to 5
      - block:
          - name: set max_concurrent_builds via hieradata
            copy:
                content: 'nova::compute::ironic::max_concurrent_builds: 5'
                dest: "{{ working_dir }}/hiera_override.yaml"

          - name: Ensure cloud domain is set via hieradata for neutron dhcp
            lineinfile:
              path: "{{ working_dir }}/hiera_override.yaml"
              state: present
              line: "nova::network::neutron::dhcp_domain: {{ install.overcloud.domain }}"
            when:
                - install.version|openstack_release < 12
          - name: Ensure neutron has dns_domain set to cloud domain
            lineinfile:
              path: "{{ working_dir }}/hiera_override.yaml"
              state: present
              line: "neutron::dns_domain: {{ install.overcloud.domain }}"
            when:
                - install.version|openstack_release < 12

          - block:
              - name: get global mtu hieradata for neutron from local_mtu
                command: 'awk -F= "/^local_mtu\s*=\s*/ {print $2}" ~/undercloud.conf'
                register: local_mtu
                changed_when: False

              - name: set global mtu hieradata for neutron from local_mtu
                lineinfile:
                  path: "{{ working_dir }}/hiera_override.yaml"
                  state: present
                  line: "neutron::global_physnet_mtu: {{ local_mtu.stdout }}"
                when:
                    - local_mtu.stdout != ""
            when:
                - install.version|openstack_release < 14

          - name: set additional config via hieradata
            lineinfile:
              path: "{{ working_dir }}/hiera_override.yaml"
              state: present
              line: "{{ item.key }}: {{ item.value }}"
              regexp: "{{ item.key }}"
            with_dict: "{{ install.hieradata.config|default({}) }}"
            when: '"hieradata" in install'

          - name: set hieradata in undercloud.conf
            ini_file:
                path: "{{ working_dir }}/undercloud.conf"
                section: DEFAULT
                option: hieradata_override
                value: "{{ working_dir }}/hiera_override.yaml"
        when:
            - install.version|openstack_release > 9

      - block:
          - name: ensure 'patch' tool is installed
            become: true
            dnf:
              name: patch
              state: present

          - name: download workarounds file
            get_url:
                url: "{{ install.workarounds }}"
                dest: "{{ inventory_dir }}/workarounds.yml"
                backup: yes
                force: yes
                validate_certs: no
            delegate_to: localhost

          - name: load workarounds vars
            include_vars: "{{ lookup('first_found', possible_files) }}"
            vars:
              possible_files:
                - "{{ inventory_dir }}/workarounds.yml"
                - "{{ playbook_dir }}/workarounds.yml"

          - name: create workarounds scripts
            template:
              src: templates/workarounds.sh.j2
              dest: "~/{{ item }}.sh"
              mode: 0775
            with_items:
              - 'pre_undercloud_deploy_workarounds'
              - 'post_undercloud_deploy_workarounds'
        when: install.workarounds != ''

      - name: Preparing custom environment files for the undercloud deployment
        block:
          - name: Create custom environment file - Ironic Direct Deploy Interface
            copy:
              dest: "{{ ironic_custom_env_file }}"
              content: |
                parameter_defaults:
                   IronicDefaultDeployInterface: direct
                {% if install.version|default(undercloud_version) | openstack_release > 14 and install.image.download.source == 'http' %}
                   IronicImageDownloadSource: http
                {% endif %}
            when: deploy_interface_direct

          - name: Create a custom environment file - NTP Pool
            copy:
              dest: "{{ ntp_custom_env_file }}"
              content: |
                parameter_defaults:
                   NtpPool: {{ install.ntp.pool }}
            when: configure_ntp_pool

          - name: Set custom env files in undercloud.conf
            vars:
              undercloud_conf_path: "{{ working_dir }}/undercloud.conf"
              env_files:
                - "{{ deploy_interface_direct | ternary(ironic_custom_env_file,'') }}"
                - "{{ configure_ntp_pool | ternary(ntp_custom_env_file,'') }}"
            ini_file:
              path: "{{ undercloud_conf_path }}"
              section: DEFAULT
              option: custom_env_files
              value: "{{ env_files | difference(['']) | join(',') }}"

        vars:
          - ironic_custom_env_file: "{{ working_dir }}/ironic_deploy_interface_direct.yaml"
          - ntp_custom_env_file: "{{ working_dir }}/ntp_pool.yaml"
          - deploy_interface_direct_conditions:
              - "{{ install.deploy_interface_default == 'direct' }}"
              - "{{ install.version|default(undercloud_version) | openstack_release > 13 }}"
          - deploy_interface_direct: "{{ (false in deploy_interface_direct_conditions) | ternary(False, True) }}"
          - configure_ntp_pool_conditions:
              - "{{ install.get('ntp', {}).pool is defined and install.ntp.pool != '' }}"
              - "{{ install.version|openstack_release >= 15 }}"
          - configure_ntp_pool: "{{ (false in configure_ntp_pool_conditions) | ternary(False, True) }}"
        when: deploy_interface_direct or configure_ntp_pool
