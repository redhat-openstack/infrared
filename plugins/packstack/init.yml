---
- name: Ensure hostname is configured properly
  hosts: openstack_nodes
  gather_facts: yes
  become: yes
  any_errors_fatal: true
  tasks:
      - name: Configure hostname
        hostname:
            name: "{{ hostvars[inventory_hostname].inventory_hostname }}"

      - name: Gather updated facts after hostname configuration
        setup:

      - name: Ensure hostname is in /etc/hosts
        vars:
            has_search: "{{ 'search' in hostvars[item].ansible_dns }}"
            hname:  "{{ hostvars[item].inventory_hostname }}"
            long_name: "{% if has_search %}{{ hname }}.{{ hostvars[item].ansible_dns.search[0] }}{% endif %}"
        lineinfile:
            dest: /etc/hosts
            line: "{{ hostvars[item].ansible_default_ipv4.address }}  {{ long_name }} {{ hname }}"
            state: present
        with_items: "{{ groups['openstack_nodes'] }}"
        when: hostvars[inventory_hostname].ansible_default_ipv4.address is defined

      - name: restart systemd-hostnamed
        service:
            name: systemd-hostnamed
            state: restarted
            sleep: 5
        when: ansible_distribution_version|int > 6

- name: Initialize Controller
  hosts: controller
  gather_facts: no
  become: yes
  any_errors_fatal: true
  tasks:
      # AIO risks OOM problems.
      - name: Create swap file
        shell: |
            if [ -e /swap ]
            then
                echo "you already have a swap file"
            else
                dd if=/dev/zero bs=128M count=32 of=/swap && mkswap /swap && swapon /swap && echo "DONE"
            fi

      - name: create key
        #this will not overwrite an existing key
        user:
            name: root
            generate_ssh_key: yes

      - name: fetch ssh-key generated from controller
        fetch:
            src: /root/.ssh/id_rsa.pub
            dest: /tmp/ssh_keys/
            flat: yes
            fail_on_missing: yes
      - name: set selinux mode (enforcing/permissive)
        command: setenforce {{ install.selinux }}
        when: install.selinux != 'default'

- name: Copy ssh-key to compute and network hosts
  hosts: openstack_nodes
  gather_facts: no
  become: yes
  any_errors_fatal: true
  tasks:
      - name: copy ssh-key to nodes
        authorized_key:
            user: root
            key: "{{ lookup('file', '/tmp/ssh_keys/id_rsa.pub') }}"
