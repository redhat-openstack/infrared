---
- name: grab undercloud private key
  command: "cat ~/.ssh/id_rsa"
  register: uc_pkey_result

- name: get information about vm's from hypervisor
  delegate_to: hypervisor
  shell: |
      NODE_XML=`virsh dumpxml {{ item }}`
      disks_list="["
      for dsk in $(virsh domblklist {{ item }} | tail -n +3 | awk '{print $1}'); do
          disks_list="${disks_list}\"${dsk}\","
      done
      disks_list="${disks_list}]"
      disks_list="$(echo ${disks_list} | sed 's/,]/]/g')"

      echo "{
          'name': '{{ item }}',
          'arch': '`echo "$NODE_XML" | grep arch | cut -d\' -f2`',
          'memory_kibs': '`echo "$NODE_XML" | grep currentMemory | cut -d\< -f2 | cut -d\> -f2`',
          'mac': '`echo "$NODE_XML" | grep {{ provison_virsh_network_name }} -B 1 | grep mac | cut -d\' -f2`',
          'cpu': '`echo "$NODE_XML" | grep vcpu | cut -d\< -f2 | cut -d\> -f2`',
          'disk_bytes': '`virsh domblkinfo {{ item }} vda | grep -e Capacity | cut -d\: -f2 | xargs`',
          'disks': '${disks_list}',
      }"
  with_items: "{{ install.scale.nodes }}"
  register: nodes_info
  tags:
      - skip_ansible_lint

- name: prepare instackenv.json file
  vars:
      # json file shouldn't hold newlines
      undercloud_private_key: "{{ uc_pkey_result.stdout_lines | join('\\n')}}"
  template:
      src: ../templates/instackenv.json.j2
      dest: "{{ instackenv_file_name }}"

- name: power off overcloud nodes
  virt:
      name: "{{ item }}"
      state: destroyed
  with_items: "{{ install.scale.nodes }}"
  delegate_to: hypervisor