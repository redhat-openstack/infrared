---
NeutronNetworks.create_and_list_networks:
  -
    args:
      network_create_args:
    runner:
      type: "constant"
      times: 40
      concurrency: 20
    context:
      users:
        tenants: 3
        users_per_tenant: 2
      quotas:
        neutron:
            network: -1
    sla:
      failure_rate:
        max: 20

NeutronNetworks.create_and_list_subnets:
  -
    args:
      network_create_args:
      subnet_create_args:
      subnet_cidr_start: "1.1.0.0/30"
      subnets_per_network: 2
    runner:
      type: "constant"
      times: 20
      concurrency: 10
    context:
      users:
        tenants: 3
        users_per_tenant: 2
      quotas:
        neutron:
            network: -1
            subnet: -1
    sla:
      failure_rate:
        max: 20

NeutronSecurityGroup.create_and_list_security_groups:
  -
    args:
      security_group_create_args: {}
    runner:
      type: "constant"
      times: 20
      concurrency: 10
    context:
      users:
        tenants: 3
        users_per_tenant: 2
      quotas:
        neutron:
          security_group: -1
    sla:
      failure_rate:
        max: 20

NeutronSecurityGroup.create_and_delete_security_groups:
  -
    args:
      security_group_create_args: {}
    runner:
      type: "constant"
      times: 20
      concurrency: 10
    context:
      users:
        tenants: 3
        users_per_tenant: 2
      quotas:
        neutron:
          security_group: -1
    sla:
      failure_rate:
        max: 20

NeutronSecurityGroup.create_and_update_security_groups:
  -
    args:
      security_group_create_args: {}
      security_group_update_args: {}
    runner:
      type: "constant"
      times: 20
      concurrency: 10
    context:
      users:
        tenants: 3
        users_per_tenant: 2
      quotas:
        neutron:
          security_group: -1
    sla:
      failure_rate:
        max: 20

NeutronNetworks.create_and_list_floating_ips:
  -
    args:
      floating_network: "public"
      floating_ip_args: {}
    runner:
      type: "constant"
      times: 40
      concurrency: 20
    context:
      users:
        tenants: 5
        users_per_tenant: 2
      quotas:
        neutron:
            floatingip: -1
    sla:
      failure_rate:
        max: 0

NeutronNetworks.create_and_list_routers:
  -
    args:
      network_create_args:
      subnet_create_args:
      subnet_cidr_start: "1.1.0.0/30"
      subnets_per_network: 2
      router_create_args:
    runner:
      type: "constant"
      times: 15
      concurrency: 5
    context:
      users:
        tenants: 3
        users_per_tenant: 2
      quotas:
        neutron:
            network: -1
            subnet: -1
            router: -1
    sla:
      failure_rate:
        max: 20

NeutronNetworks.create_and_list_ports:
  -
    args:
      network_create_args:
      port_create_args:
      ports_per_network: 4
    runner:
      type: "constant"
      times: 15
      concurrency: 5
    context:
      users:
        tenants: 3
        users_per_tenant: 2
      quotas:
        neutron:
            network: -1
            subnet: -1
            router: -1
            port: -1
    sla:
      failure_rate:
        max: 20

NeutronLoadbalancerV1.create_and_list_pools:
  -
    args:
      pool_create_args: {}
    runner:
      type: "constant"
      times: 20
      concurrency: 10
    context:
      users:
        tenants: 3
        users_per_tenant: 2
      network: {}
      lbaas:
        pool: {}
        lbaas_version: 1
      quotas:
        neutron:
          network: -1
          subnet: -1
          pool: -1
    sla:
      failure_rate:
        max: 0

NeutronLoadbalancerV1.create_and_delete_pools:
  -
    args:
      pool_create_args: {}
    runner:
      type: "constant"
      times: 20
      concurrency: 10
    context:
      users:
        tenants: 3
        users_per_tenant: 2
      network: {}
      quotas:
        neutron:
          network: -1
          subnet: -1
          pool: -1
    sla:
      failure_rate:
        max: 0

NeutronLoadbalancerV1.create_and_update_pools:
  -
    args:
      pool_create_args: {}
      pool_update_args: {}
    runner:
      type: "constant"
      times: 20
      concurrency: 10
    context:
      users:
        tenants: 3
        users_per_tenant: 2
      network: {}
      quotas:
        neutron:
          network: -1
          subnet: -1
          pool: -1
    sla:
      failure_rate:
        max: 0

NeutronLoadbalancerV1.create_and_list_vips:
  -
    args:
      vip_create_args: {}
    runner:
      type: "constant"
      times: 20
      concurrency: 10
    context:
      users:
        tenants: 5
        users_per_tenant: 4
      network: {}
      quotas:
        neutron:
          network: -1
          subnet: -1
          pool: -1
          vip: -1
    sla:
      failure_rate:
        max: 0

NeutronLoadbalancerV1.create_and_delete_vips:
  -
    args:
      pool_create_args: {}
      vip_create_args: {}
    runner:
      type: "constant"
      times: 20
      concurrency: 10
    context:
      users:
        tenants: 5
        users_per_tenant: 2
      network: {}
      quotas:
        neutron:
          network: -1
          subnet: -1
          pool: -1
          vip: -1
    sla:
      failure_rate:
        max: 0

NeutronLoadbalancerV1.create_and_update_vips:
  -
    args:
      vip_create_args: {}
      vip_update_args: {}
      pool_create_args: {}
    runner:
      type: "constant"
      times: 20
      concurrency: 10
    context:
      users:
        tenants: 5
        users_per_tenant: 2
      network: {}
      quotas:
        neutron:
          network: -1
          subnet: -1
          pool: -1
          vip: -1
    sla:
      failure_rate:
        max: 0

NeutronLoadbalancerV1.create_and_list_healthmonitors:
  -
    args:
      healthmonitor_create_args: {}
    runner:
      type: "constant"
      times: 20
      concurrency: 10
    context:
      users:
        tenants: 5
        users_per_tenant: 2
      quotas:
        neutron:
          health_monitor: -1
    sla:
      failure_rate:
        max: 0

NeutronLoadbalancerV1.create_and_delete_healthmonitors:
  -
    args:
      healthmonitor_create_args: {}
    runner:
      type: "constant"
      times: 20
      concurrency: 10
    context:
      users:
        tenants: 5
        users_per_tenant: 2
      quotas:
        neutron:
          health_monitor: -1
    sla:
      failure_rate:
        max: 0

NeutronLoadbalancerV1.create_and_update_healthmonitors:
  -
    args:
      healthmonitor_create_args: {}
      healthmonitor_update_args:
        admin_state_up: False
    runner:
      type: "constant"
      times: 20
      concurrency: 10
    context:
      users:
        tenants: 5
        users_per_tenant: 2
      quotas:
        neutron:
          health_monitor: -1
    sla:
      failure_rate:
        max: 0

NeutronNetworks.create_and_update_networks:
  -
    args:
      network_create_args: {}
      network_update_args:
          admin_state_up: False
          name: "_updated"
    runner:
      type: "constant"
      times: 20
      concurrency: 10
    context:
      users:
        tenants: 3
        users_per_tenant: 2
      quotas:
        neutron:
          network: -1
    sla:
      failure_rate:
        max: 20

NeutronNetworks.create_and_update_subnets:
  -
    args:
      network_create_args: {}
      subnet_create_args: {}
      subnet_cidr_start: "1.4.0.0/16"
      subnets_per_network: 2
      subnet_update_args:
          enable_dhcp: False
          name: "_subnet_updated"
    runner:
      type: "constant"
      times: 20
      concurrency: 10
    context:
      users:
        tenants: 3
        users_per_tenant: 2
      quotas:
        neutron:
          network: -1
          subnet: -1
    sla:
      failure_rate:
        max: 20

NeutronNetworks.create_and_update_routers:
  -
    args:
      network_create_args: {}
      subnet_create_args: {}
      subnet_cidr_start: "1.1.0.0/30"
      subnets_per_network: 2
      router_create_args: {}
      router_update_args:
          admin_state_up: False
          name: "_router_updated"
    runner:
      type: "constant"
      times: 15
      concurrency: 5
    context:
      users:
        tenants: 3
        users_per_tenant: 2
      quotas:
        neutron:
          network: -1
          subnet: -1
          router: -1
    sla:
      failure_rate:
        max: 20

NeutronNetworks.create_and_update_ports:
  -
    args:
      network_create_args: {}
      port_create_args: {}
      ports_per_network: 5
      port_update_args:
          admin_state_up: False
          device_id: "dummy_id"
          device_owner: "dummy_owner"
          name: "_port_updated"
    runner:
      type: "constant"
      times: 20
      concurrency: 10
    context:
      users:
        tenants: 3
        users_per_tenant: 2
      quotas:
        neutron:
          network: -1
          port: -1
    sla:
      failure_rate:
        max: 20

NeutronNetworks.create_and_delete_networks:
  -
    args:
      network_create_args: {}
    runner:
      type: "constant"
      times: 20
      concurrency: 10
    context:
      users:
        tenants: 3
        users_per_tenant: 2
      quotas:
        neutron:
          network: -1
          subnet: -1
    sla:
      failure_rate:
        max: 20

NeutronNetworks.create_and_delete_subnets:
  -
    args:
      network_create_args: {}
      subnet_create_args: {}
      subnet_cidr_start: "1.1.0.0/30"
      subnets_per_network: 2
    runner:
      type: "constant"
      times: 20
      concurrency: 10
    context:
      users:
        tenants: 3
        users_per_tenant: 2
      quotas:
        neutron:
          network: -1
          subnet: -1
    sla:
      failure_rate:
        max: 20

NeutronNetworks.create_and_delete_floating_ips:
  -
    args:
      floating_network: "public"
      floating_ip_args: {}
    runner:
      type: "constant"
      times: 40
      concurrency: 20
    context:
      users:
        tenants: 5
        users_per_tenant: 2
      quotas:
        neutron:
            floatingip: -1
    sla:
      failure_rate:
        max: 0

NeutronNetworks.create_and_delete_routers:
  -
    args:
      network_create_args: {}
      subnet_create_args: {}
      subnet_cidr_start: "1.1.0.0/30"
      subnets_per_network: 2
      router_create_args: {}
    runner:
      type: "constant"
      times: 15
      concurrency: 5
    context:
      users:
        tenants: 3
        users_per_tenant: 2
      quotas:
        neutron:
          network: -1
          subnet: -1
          router: -1
    sla:
        failure_rate:
          max: 20

NeutronNetworks.create_and_delete_ports:
  -
    args:
      network_create_args: {}
      port_create_args: {}
      ports_per_network: 10
    runner:
      type: "constant"
      times: 8
      concurrency: 4
    context:
      users:
        tenants: 3
        users_per_tenant: 2
      quotas:
        neutron:
          network: -1
          port: -1
    sla:
      failure_rate:
        max: 20

Quotas.neutron_update:
  -
    args:
      max_quota: 1024
    runner:
      type: "constant"
      times: 10
      concurrency: 2
    context:
      users:
        tenants: 3
        users_per_tenant: 2
    sla:
      failure_rate:
        max: 0

NovaServers.boot_and_delete_server:
  -
    args:
      flavor:
          name: "m1.tiny"
      image:
          name: "^cirros.*"
    runner:
      type: "constant"
      times: 1
      concurrency: 1
    context:
      users:
        tenants: 1
        users_per_tenant: 1
    sla:
      failure_rate:
        max: 0

  -
    args:
      auto_assign_nic: True
      flavor:
          name: "m1.tiny"
      image:
          name: "^cirros.*"
    runner:
      type: "constant"
      times: 1
      concurrency: 1
    context:
      users:
        tenants: 1
        users_per_tenant: 1
      network:
        start_cidr: "10.2.0.0/24"
        networks_per_tenant: 2
    sla:
      failure_rate:
        max: 0

NovaSecGroup.create_and_delete_secgroups:
  -
    args:
      security_group_count: 5
      rules_per_security_group: 5
    runner:
      type: "constant"
      times: 4
      concurrency: 4
    context:
      users:
        tenants: 2
        users_per_tenant: 2
      quotas:
        neutron:
          security_group: -1
          security_group_rule: -1
    sla:
      failure_rate:
        max: 0

NovaSecGroup.create_and_list_secgroups:
  -
    args:
      security_group_count: 5
      rules_per_security_group: 5
    runner:
      type: "constant"
      times: 4
      concurrency: 4
    context:
      users:
        tenants: 2
        users_per_tenant: 2
      quotas:
        neutron:
          security_group: -1
          security_group_rule: -1
    sla:
      failure_rate:
        max: 0

VMTasks.boot_runcommand_delete:
  -
    args:
      flavor:
          name: "m1.tiny"
      image:
          name: "^cirros.*"
      command:
        script_file: "~/.rally/extra/instance_dd_test.sh"
        interpreter: "/bin/sh"
      username: "cirros"
    runner:
      type: "constant"
      times: 4
      concurrency: 2
    context:
      users:
        tenants: 2
        users_per_tenant: 2
      network: {}
    sla:
      failure_rate:
        max: 0

VMTasks.boot_runcommand_delete_custom_image:
  -
    args:
      command:
        remote_path: "./dd_test.sh"
      flavor:
        name: "m1.tiny"
      username: "cirros"
    runner:
      type: "constant"
      times: 1
      concurrency: 1
    context:
      image_command_customizer:
        command:
          local_path: "/home/jenkins/.rally/extra/install_benchmark.sh"
          remote_path: "./install_benchmark.sh"
        flavor:
          name: "m1.tiny"
        image:
          name: "^cirros.*"
        username: "cirros"
      users:
        tenants: 1
        users_per_tenant: 1
      network: {}
    sla:
      failure_rate:
        max: 0
