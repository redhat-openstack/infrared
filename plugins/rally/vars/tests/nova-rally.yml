---
VMTasks.boot_runcommand_delete:
  -
    args:
      flavor:
        name: "m1.nano"
      image:
        name: "{{ guest_image.name }}"
      floating_network: "{{ floating_network|default('nova') }}"
      use_floatingip: true
      command:
        script_inline: |
          time_seconds(){ (time -p $1 ) 2>&1 |awk '/real/{print $2}'; }
          file=/tmp/test.img
          c=100 #100M
          write_seq=$(time_seconds "dd if=/dev/zero of=$file bs=1M count=$c")
          read_seq=$(time_seconds "dd if=$file of=/dev/null bs=1M count=$c")
          [ -f $file ] && rm $file

          echo "{
              \"write_seq\": $write_seq,
              \"read_seq\": $read_seq
              }"
        interpreter: "/bin/sh"
      username: "cirros"
    runner:
      type: "constant"
      times: 2
      concurrency: 2
    context:
      users:
        tenants: 1
        users_per_tenant: 1
      network: {}
    sla:
      failure_rate:
        max: 0

VMTasks.dd_load_test:
  -
    args:
      flavor:
          name: "m1.nano"
      image:
          name: "{{ guest_image.name }}"
      floating_network: "{{ floating_network|default('nova') }}"
      force_delete: false
      interpreter: "/bin/sh"
      username: "cirros"
    runner:
      type: "constant"
      times: 2
      concurrency: 2
    context:
      users:
        tenants: 1
        users_per_tenant: 1
      network: {}
    sla:
      failure_rate:
        max: 0
