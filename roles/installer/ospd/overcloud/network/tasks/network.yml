---
- set_fact:
      isolation_file: "network-isolation{{ (installer.network.protocol == 'ipv6') | ternary('-v6','') }}.yaml"

- set_fact:
      network_environment_file: "network-environment{{ (installer.network.protocol == 'ipv6') | ternary('-v6','') }}.yaml"

- name: append the network environment template line to the base overcloud deploy script
  lineinfile:
      dest: "~/overcloud_deploy.sh"
      line: '-e {{ template_base }}/network/{{ network_environment_file }} \'

- name: append the network isolation template line to the base overcloud deploy script
  lineinfile:
      dest: "~/overcloud_deploy.sh"
      line: '-e /usr/share/openstack-tripleo-heat-templates/environments/{{ isolation_file }} \'

- block:
    - name: get the IP address on the external network default route
      shell: "cat {{ template_base }}/network/{{ network_environment_file }} | grep ExternalNetworkVlanID | awk -F' ' '{print $2}'"
      register: vlan_result

    - name: add the ip address to the device when vlan is used
      shell: "sudo ovs-vsctl add-port br-ctlplane vlan{{ vlan_result.stdout | replace(\"'\",'') }} tag={{ vlan_result.stdout | replace(\"'\",'') }} -- set interface vlan{{ vlan_result.stdout | replace(\"'\",'') }} type=internal;"
      register: result
      failed_when: "result.stderr != '' and 'RTNETLINK answers: File exists' not in result.stderr"

    - name: get the IP address on the external network default route
      shell: "cat {{ template_base }}/network/{{ network_environment_file }} | grep ExternalNetCidr | awk -F' ' '{print $2}'"
      register: result

    - name: add the ip address to the device when vlan is used
      shell: "sudo ip addr add {{ result.stdout | replace(\"'\",'') }} dev vlan{{ vlan_result.stdout | replace(\"'\",'') }}"
      register: iface_ip_result
      failed_when: "iface_ip_result.stderr != '' and 'RTNETLINK answers: File exists' not in iface_ip_result.stderr"

    - name: switch on the newly added vlan interface
      shell: "sudo ip link set vlan{{ vlan_result.stdout | replace(\"'\",'') }} up"
  when: installer.network.backend == 'vlan'
