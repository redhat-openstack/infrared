- name: copy the enable-tls.yaml file locally
  shell: "cp /usr/share/openstack-tripleo-heat-templates/environments/enable-tls.yaml {{ template_base }}/enable-tls.yaml"

- name: adjust the reference of tls-cert-inject.yaml
  shell: "sed -i 's#\\.\\.#/usr/share/openstack-tripleo-heat-templates#' {{ template_base }}/enable-tls.yaml"

- name: copy the inject-trust-anchor.yaml file locally
  shell: "cp /usr/share/openstack-tripleo-heat-templates/environments/inject-trust-anchor.yaml {{ template_base }}/inject-trust-anchor.yaml"

- name: adjust the reference of ca-inject.yaml
  shell: "sed -i 's#\\.\\.#/usr/share/openstack-tripleo-heat-templates#' {{ template_base }}/inject-trust-anchor.yaml"

- name: create the self signed SSL
  shell: "openssl genrsa -out {{ template_base }}/overcloud-privkey.pem 2048"

- name: extract our external allocation pools start value
  shell: "cat {{ template_base }}/network/{{ network_environment_file }}"
  register: result

- set_fact:
      external_allocation_pool_start: "{{ (result.stdout | from_yaml).parameter_defaults.ExternalAllocationPools[0].start }}"

- set_fact:
      shell_command: "openssl req -new -x509 -key {{ template_base }}/overcloud-privkey.pem -out {{ template_base }}/overcloud-cacert.pem -days 365 -subj '/C=US/ST=NC/L=Raleigh/O=Red HAt/OU=QE/CN={{ external_allocation_pool_start }}'"

# Ansible had trouble templating the above command straight to the shell module hence the above "set_fact"
- name: create the self signed CA certificate
  shell: "{{ shell_command }}"

- name: update the tls template
  shell: "sed -i 's/CLOUDNAME/IP_ADDRESS/' {{ template_base }}/enable-tls.yaml"

- name: copy the self signed CA certification to our trusted store
  shell: "sudo cp {{ template_base }}/overcloud-cacert.pem /etc/pki/ca-trust/source/anchors/"

- name: update our CA store to reflect our addition
  shell: "sudo update-ca-trust extract"

- name: register the CA certificate
  shell: "cat {{ template_base }}/overcloud-cacert.pem"
  register: cacert

- name: register the private key
  shell: "cat {{ template_base }}/overcloud-privkey.pem"
  register: private_key

- name: insert the content of the CA certificate and private key respectfully
  replace:
      dest: "{{ item.dest }}"
      regexp: "{{ item.regex }}"
      replace: "{{ item.replace_with }}"
  with_items:
      - {dest: "{{ template_base }}/enable-tls.yaml", regex: "(SSLCertificate:.*\\s+)The contents of your certificate.*$", replace_with: "\\1{{ cacert.stdout | indent(4) | string }}"}
      - {dest: "{{ template_base }}/enable-tls.yaml", regex: "(SSLKey:.*\\s+)The contents of the private key.*$", replace_with: "\\1{{ private_key.stdout | indent(4) | string }}"}
      - {dest: "{{ template_base }}/inject-trust-anchor.yaml", regex: "(SSLRootCertificate:.*\\s+)The contents of your root CA.*$", replace_with: "\\1{{ cacert.stdout | indent(4) | string }}"}

- name: append the invocation line to the base overcloud deploy script
  lineinfile:
      dest: "~/overcloud_deploy.sh"
      line: '-e {{ template_base }}/enable-tls.yaml \'

- name: append the invocation line to the base overcloud deploy script
  lineinfile:
      dest: "~/overcloud_deploy.sh"
      line: '-e {{ template_base }}/inject-trust-anchor.yaml \'

- block:
    - name: create public VIP environment file
      template: src=public_vip.yaml.j2 dest={{ template_base }}/public_vip.yaml

    - name: append the invocation line to the base overcloud deploy script
      lineinfile:
          dest: "~/overcloud_deploy.sh"
          line: '-e {{ template_base }}/public_vip.yaml \'

    - name: append the invocation line to the base overcloud deploy script
      lineinfile:
          dest: "~/overcloud_deploy.sh"
          line: '-e /usr/share/openstack-tripleo-heat-templates/environments/tls-endpoints-public-ip.yaml \'
  when: installer.product.version|openstack_release > 9
