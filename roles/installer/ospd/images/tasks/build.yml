---
# Doc origin
# http://docs.openstack.org/developer/tripleo-docs/basic_deployment/basic_deployment_cli.html
# This should run as non-root

- name: Download guest image for build if needed
  # Keep "private" here in case someone doesn't understand why it's gone
  # images_source: private.images.base_url + '/rhel-guest-image-latest.qcow2'
  get_url:
      dest: "{{ images_dest }}"
      url: "{{ images_source }}"
      # don't download image if it's already here
      force: no
  # TODO(yfried): add to pre-run verification:
  # Image source is mandatory for OSP so we should fail if it's missing
  when: images_source or installer.product.version|openstack_distribution == 'OSP'

# TODO: Move environment to a file / template so a user can make customize it
- name: Build OC images (RHOS)
  tags: backup
  shell: "source ~/stackrc; openstack overcloud image build --all > openstack-build-images.log"
  environment:
      DIB_LOCAL_IMAGE: "{{ images_dest }}"
      DIB_YUM_REPO_CONF: "/etc/yum.repos.d/rhos-release-{{ installer.product.version }}-director.repo /etc/yum.repos.d/rhos-release-{{ (installer.product.core.version is defined and installer.product.core.version) | ternary(installer.product.core.version, installer.product.version) }}.repo /etc/yum.repos.d/rhos-release-{{ ansible_product_version.split() | first | lower }}-{{ ansible_distribution_version }}.repo"
      NODE_DIST: "rhel7"
      RHOS: 1
      RUN_RHOS_RELEASE: 1
      RHOS_RELEASE: "{{ installer.product.version }}-director"
      USE_DELOREAN_TRUNK: 0
  when: installer.product.version|openstack_distribution == 'OSP'

# TODO: Move environment to a file / template so a user can make customize it
# TODO(yfried): add delorean env vars http://docs.openstack.org/developer/tripleo-docs/basic_deployment/basic_deployment_cli.html#get-images
- name: Build OC images (RDO)
  tags: backup
  shell: "source ~/stackrc; openstack overcloud image build --all --builder-extra-args rdo-release > openstack-build-images.log"
  environment:
      RDO_RELEASE: "{{ installer.product.version }}"
      DIB_LOCAL_IMAGE: "{{ (images_source|default('')) | ternary(images_dest, omit) }}"
  when: installer.product.version|openstack_distribution == 'RDO'

- name: tar our images
  tags: backup
  shell: "tar -cf {{ item }} {{ item | splitext | first }}.*"
  with_items: "{{ tar_images }}"
