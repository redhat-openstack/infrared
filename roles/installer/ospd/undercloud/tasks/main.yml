- name: prepare the machine for undercloud deployment
  include: setup.yml

- name: copy our deployment folder
  copy:
      src: "{{ installer.deployment.files }}"
      dest: "/home/{{ installer.user.name }}/"
      directory_mode: u=rwX,g=rX,o=rX
      owner: "{{ installer.user.name }}"
      group: "{{ installer.user.name }}"

- name: create default undercloud.conf file
  copy:
      force: no
      remote_src: True
      src: "/usr/share/instack-undercloud/undercloud.conf.sample"
      dest: "/home/{{ installer.user.name }}/undercloud.conf"
      owner: "{{ installer.user.name }}"
      group: "{{ installer.user.name }}"
      mode: 0755

- name: check if undercloud.conf is under the deployment folder
  stat:
      path: "/home/{{ installer.user.name }}/{{ installer.deployment.files | regex_replace('/$','') | basename }}/undercloud.conf"
  register: undercloud_conf

- name: copy the undercloud.conf if provided with deployment folder
  copy:
      force: yes
      remote_src: True
      src: "/home/{{ installer.user.name }}/{{ installer.deployment.files | regex_replace('/$','') | basename }}/undercloud.conf"
      dest: "/home/{{ installer.user.name }}/undercloud.conf"
      owner: "{{ installer.user.name }}"
      group: "{{ installer.user.name }}"
      mode: 0644
  when: undercloud_conf.stat.exists

- name: copy our configuration if provided by the user
  copy:
      src: "{{ installer.undercloud.config }}"
      dest: "/home/{{ installer.user.name }}/undercloud.conf"
      owner: "{{ installer.user.name }}"
      group: "{{ installer.user.name }}"
      mode: 0644
      force: yes
  when: installer.undercloud.config is defined and installer.undercloud.config

- name: create the base undercloud deploy script
  become: yes
  become_user: "{{ installer.user.name }}"
  template:
      src: "undercloud_deploy.sh.j2"
      dest: "/home/{{ installer.user.name }}/undercloud_deploy.sh"
      mode: 0755

- name: the create undercloud script
  shell: "cat /home/{{ installer.user.name }}/undercloud_deploy.sh"

- name: install the undercloud
  become: yes
  become_user: "{{ installer.user.name }}"
  shell: "bash ~/undercloud_deploy.sh"
  register: undercloud_deployment
  ignore_errors: yes

- name: print the last 60 lines of the undercloud installation
  become: yes
  become_user: "{{ installer.user.name }}"
  shell: "tail -n60 undercloud_install.log"

- fail:
      msg: "Undercloud deployment failed... :("
  become: yes
  become_user: "{{ installer.user.name }}"
  when: undercloud_deployment.rc != 0

- name: gathering new facts about the undercloud
  setup:
