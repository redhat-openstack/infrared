- name: prepare the machine for undercloud deployment
  include: setup.yml

- name: check if undercloud.conf is under the deployment folder
  stat:
      path: "{{ installer.deployment.files.rstrip('/') }}/undercloud.conf"
  register: undercloud_conf

- name: copy our configuration if provided by the user
  vars:
      local_src: "{%- if installer.undercloud is defined and installer.undercloud.config is defined and installer.undercloud.config -%}
          {{ installer.undercloud.config }}
          {%- elif undercloud_conf.stat.exists -%}
          {{ undercloud_conf.stat.path }}
          {%- elif 'virthost' in groups.all -%}
          templates/undercloud.conf
          {%- else -%}
          False
          {%- endif -%}"
      deafult_conf: /usr/share/instack-undercloud/undercloud.conf.sample
  copy:
      remote_src: "{{ not local_src }}"
      src: "{{ local_src | ternary(local_src, deafult_conf)}}"
      dest: "/home/{{ installer.user.name }}/undercloud.conf"
      owner: "{{ installer.user.name }}"
      group: "{{ installer.user.name }}"
      mode: 0755
      force: yes

- name: create the base undercloud deploy script
  become: yes
  become_user: "{{ installer.user.name }}"
  template:
      src: "undercloud_deploy.sh.j2"
      dest: "/home/{{ installer.user.name }}/undercloud_deploy.sh"
      mode: 0755

- name: the create undercloud script
  shell: "cat /home/{{ installer.user.name }}/undercloud_deploy.sh"

- name: install the undercloud
  become: yes
  become_user: "{{ installer.user.name }}"
  shell: "bash ~/undercloud_deploy.sh"
  register: undercloud_deployment
  ignore_errors: yes

- name: print the last 60 lines of the undercloud installation
  become: yes
  become_user: "{{ installer.user.name }}"
  shell: "tail -n60 undercloud_install.log"

- fail:
      msg: "Undercloud deployment failed... :("
  become: yes
  become_user: "{{ installer.user.name }}"
  when: undercloud_deployment.rc != 0

- name: gathering new facts about the undercloud
  setup:
