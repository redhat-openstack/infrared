- name: get the vlan number where external network should be served
  shell: "cat {{ template_base }}/network/{{ network_environment_file }} | grep ExternalNetworkVlanID | awk -F' ' '{print $2}'"
  register: vlan_result

- name: create new vlan interface in ovs system
  shell: "sudo ovs-vsctl add-port br-ctlplane vlan{{ vlan_result.stdout | replace(\"'\",'') }} tag={{ vlan_result.stdout | replace(\"'\",'') }} -- set interface vlan{{ vlan_result.stdout | replace(\"'\",'') }} type=internal;"
  register: result
  failed_when: "result.stderr != '' and 'RTNETLINK answers: File exists' not in result.stderr"

- name: get the IP address for the external network interface
  shell: "cat {{ template_base }}/network/{{ network_environment_file }} | grep ExternalInterfaceDefaultRoute | awk -F' ' '{print $2}'"
  register: stat_ip_result

- name: configure external gateway's IP for this interface
  shell: "sudo ip addr add {{ stat_ip_result.stdout | replace(\"'\",'') }} dev vlan{{ vlan_result.stdout | replace(\"'\",'') }}"
  register: iface_ip_result

- name: switch on the newly added vlan interface
  shell: "sudo ip link set vlan{{ vlan_result.stdout | replace(\"'\",'') }} up"

- name: get cidr of the external network
  shell: "cat {{ template_base }}/network/{{ network_environment_file }} | grep ExternalNetCidr | awk -F' ' '{print $2}'"
  register: route_result

- name: add new static route for external network
  shell: "sudo ip route add {{ route_result.stdout | replace(\"'\",'') }} dev vlan{{ vlan_result.stdout | replace(\"'\",'') }}"
