---
- set_fact:
    rr_download_fqdn: ''
- block:
    - copy: src=select-mirror.sh dest=~/select-mirror.sh mode=0755
    - command: "~/select-mirror.sh {{ mirror }}"
      register: selected_mirror
    - set_fact:
        mirror_fqdn: "{{ selected_mirror.stdout | trim }}"
        rr_download_fqdn: "{{ selected_mirror.stdout | trim | ternary('-H ' + selected_mirror.stdout|trim, '') }}"
  when: "mirror is defined and mirror"

- name: remove all repos
  command: "rm -f /etc/yum.repos.d/*"

- name: install the rhos-release RPM
  shell: "yum localinstall -y {{ rr_rpm_url }}"

- name: remove rhos-release repos if needed
  shell: "rhos-release -x"

- block:
    - debug:
        msg: "rhos-release {{ director_version }}-director -P -p {{ director_build }} {{ rr_download_fqdn }}"

    - name: create necessary repos for director using rhos-release
      command: "rhos-release {{ director_version }}-director -P -p {{ director_build }} {{ rr_download_fqdn }}"
      register: command_result
      until: command_result.stderr.find('Connection reset by peer') == -1
      retries: 40
      delay: 5

    - set_fact:
        director_puddle_version: "{{ command_result | regex_replace('^.*director[ ]+-p (?P<puddle>\\d{4}-\\d{2}-\\d{2}\\.\\d).*$', '\\g<puddle>') }}"

    - debug:
        msg: "Build mark: director_puddle={{ director_puddle_version }}"

  when: "director_version is defined and director_version | int < 10 and director_build is defined"

- debug:
    msg: "rhos-release {{ core_version }} -P -p {{ core_build }} {{ rr_download_fqdn }}"

- name: create necessary repos for core using rhos-release
  command: "rhos-release {{ core_version }} -P -p {{ core_build }} {{ rr_download_fqdn }}"
  register: command_result
  until: command_result.stderr.find('Connection reset by peer') == -1
  retries: 40
  delay: 5

- set_fact:
    core_puddle_version: "{{ command_result | regex_replace('^.*-p (?P<puddle>\\d{4}-\\d{2}-\\d{2}\\.\\d).*$', '\\g<puddle>') }}"

- debug:
    msg: "Build mark: core_puddle={{ core_puddle_version }}"

- block:
    - copy: src=use-mirror.sh dest=~/use-mirror.sh mode=0755
    - command: "~/use-mirror.sh {{ mirror_fqdn }}"
      register: mirror_used_cmd
      changed_when: "'Skipping mirror' not in mirror_used_cmd.stdout"
  when: "mirror_fqdn is defined and mirror_fqdn"
