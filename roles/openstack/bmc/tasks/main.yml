---
# Install the necessary packages to setup the bmc node
- name: Install repos
  package:
      name: "{{ bmc_repos }}"
      state: present

# This is a separate task due to the way Ansible handle RPMs installation.
# Before able to install 'python-pip' the right repos from previous task, should be installed.
- name: Install RPM packages
  package:
      name: "{{ bmc_rpms }}"
      state: present
      disable_gpg_check: yes

- name: Install pip packages
  pip:
      name: "{{ bmc_pip }}"

- name: Deploy openstackbmc
  template:
      src: "openstackbmc"
      dest: "/usr/local/bin/openstackbmc"
      mode: "u=rwx,g=rwx,o=rwx"

  #TODO: change the hard code "data" to something we can reference/discover
- name: Register internal subnet details
  os_subnets_facts:
      cloud: "{{ provisioner.cloud | default(omit) }}"
      filters:
          name: "{{ provisioner.prefix }}data-subnet"
  delegate_to: localhost
  become: no
  register: internal_subnet_details

- name: Set fact for internal subnet - default gateway
  set_fact:
      internal_default_gateway: "{{ item.gateway_ip }}"
  with_items: "{{ internal_subnet_details.ansible_facts.openstack_subnets }}"

- name: Set fact for internal subnet - CIDR prefix
  set_fact:
      internal_cidr_prefix: "{{ item.cidr | ipaddr('prefix') }}"
  with_items: "{{ internal_subnet_details.ansible_facts.openstack_subnets }}"

- name: Register external subnet details
  os_server_facts:
      cloud: "{{ provisioner.cloud | default(omit) }}"
      server: "{{ provisioner.prefix }}*"
  delegate_to: localhost
  become: no
  register: server_facts

  # TODO: find a better way to load the openstack details
- include_vars: "{{ inventory_dir }}/clouds.yaml"

- name: Deploy config-bmc-ips
  copy:
      src: "config-bmc-ips.service"
      dest: "/usr/lib/systemd/system/config-bmc-ips.service"

- name: Ensure /etc/os-net-config directory exists
  file:
      path: "/etc/os-net-config"
      state: "directory"

- name: Deploy os-net-config configuration
  template:
      src: "os-net-config.j2"
      dest: "/etc/os-net-config/config.yaml"

# Deploy service file for each node in 'overcloud_nodes' group
- include: openstack-bmc.yml
  with_items: "{{ server_facts.ansible_facts.openstack_servers }}"
  loop_control:
      loop_var: node
