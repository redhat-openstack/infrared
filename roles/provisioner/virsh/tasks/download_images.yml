- name: download node base image
  get_url:
      url: "{{ url }}"
      dest: "{{ base_image_path }}/{{ base_image }}"
      validate_certs: "{{ url.startswith('https://url.corp.redhat.com/') | ternary(false, omit)}}"
      timeout: 30
  register: result
  until: result.msg.find("Request failed") == -1
  retries: 5
  delay: 5
  when: item.value.import_url is not defined or not item.value.import_url
  with_dict: "{{ node.value.disks }}"

- name: adjust our vm base image
  shell: |
      virt-sysprep -a {{ base_image_path }}/{{ base_image }} --operations dhcp-client-state,dhcp-server-state,net-hostname,net-hwaddr,udev-persistent-net
      virt-customize -a {{ base_image_path }}/{{ base_image }} --run-command 'sed 's/disable_root: 1/disable_root: 0/' -i /etc/cloud/cloud.cfg'
      virt-customize -a {{ base_image_path }}/{{ base_image }} --run-command 'yum remove -y cloud-init*'
      virt-customize -a {{ base_image_path }}/{{ base_image }} --run-command 'cp /etc/sysconfig/network-scripts/ifcfg-eth{0,1} && sed -i s/DEVICE=.*/DEVICE=eth1/g /etc/sysconfig/network-scripts/ifcfg-eth1'
      virt-customize -a {{ base_image_path }}/{{ base_image }} --run-command 'cp /etc/sysconfig/network-scripts/ifcfg-eth{1,2} && sed -i s/DEVICE=.*/DEVICE=eth2/g /etc/sysconfig/network-scripts/ifcfg-eth2'
      virt-customize -a {{ base_image_path }}/{{ base_image }} --root-password password:redhat --ssh-inject root:file:/root/.ssh/id_rsa.pub --selinux-relabel
  when: result.changed and (item.value.import_url is not defined or not item.value.import_url)
  with_dict: "{{ node.value.disks }}"
