{% for host in groups['all'] %}
{% if host not in ['localhost'] %}
Host {{ host }}
    HostName {{ hostvars[host].ansible_host }}
    User {{ hostvars[host].ansible_user }}
    IdentityFile {{ hostvars[host].ansible_ssh_private_key_file }}
    StrictHostKeyChecking no
    UserKnownHostsFile=/dev/null
    ForwardAgent yes
{% if host != 'virthost' %}
    ProxyCommand ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -W %h:%p -i {{ hostvars['virthost'].ansible_ssh_private_key_file }} {{ provisioner.host.user }}@{{ provisioner.host.address }}
{% endif %}
{% endif %}

{% endfor %}
{# FIXME(mpavlase): 'data' network is here as workaround. It should work well with just external network, but there is some bug in deplyment, that os_server_facts module will receive IP address from 'data' network, that is 'connected' #}
Host {{ '%s' % '.'.join(provisioner.topology.network.external.ip_address.split('.')[:-2]) }}.* {{ '%s' % '.'.join(provisioner.topology.network.data.ip_address.split('.')[:3]) }}.*
    ProxyCommand ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -W %h:%p -i {{ provisioner.host.key }} {{ provisioner.host.user }}@{{ provisioner.host.address }}
    ControlMaster   yes
    ControlPath     {{ inventory_dir }}/%r@%h:%p
    ControlPersist  15m
    StrictHostKeyChecking no
    UserKnownHostsFile=/dev/null
