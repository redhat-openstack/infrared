---
# This file includes tasks for instances and floating IPs creation.
# These tasks done for each type of node according to 'amount' variable.
- name: Create instances
  os_server:
      cloud: "{{ provisioner.cloud | default(omit) }}"
      auto_ip: "{{ node.value.auto_ip | default(auto_ip) }}"
      config_drive: "{{ node.value.config_drive | default(config_drive) }}"
      flavor: "{{ node.value.flavor | default(flavor_id) }}"
      image: "{{ node.value.image | default(provisioner.image) }}"
      name: "{{ prefix }}{{ node.value.name }}-{{ item }}"
      nics: "{{ networks.results | map(attribute='id') | list() |map('add_prefix', 'net-id=') | list() }}"
      key_name: "{{ provisioner.key.name if provisioner.key.name else (prefix + provisioner.key.file | basename) }}"
      state: present
      wait: "{{ node.value.wait | default(wait) }}"
  register: nodes
  with_sequence: "count={{ node.value.amount }}"
  when: provisioner.nodes is defined

- name: Create floating IPs
  os_floating_ip:
      cloud: "{{ provisioner.cloud | default(omit) }}"
      network: "{{ external_network_id }}"
      internal_network: "{{ prefix }}{{ node.value.external_network }}"
      server: "{{ prefix }}{{ node.value.name }}-{{ item }}"
      state: present
      wait: yes
  register: floating_ips
  with_sequence: "count={{ node.value.amount }}"
  when: provisioner.nodes is defined

- name: Gather created servers facts
  os_server_facts:
      server: "{{ prefix }}{{ node.value.name }}*"
      cloud: "{{ provisioner.cloud | default(omit) }}"
  register: servers

- name: Add created servers to inventory
  add_host:
      name: "{{ item.name }}"
      ansible_ssh_host: "{{ item.public_v4 }}"
      groups: "{{ provisioner.nodes[node.value.name].groups | join(',') }}"
      ansible_ssh_private_key_file: "{{ provisioner.key.file }}"
      ansible_ssh_user: 'cloud-user'
      eth1_interface_ip: "{{ item.addresses[prefix + provisioner.neutron.networks.data.name][0].addr }}"
  with_items: "{{ servers.ansible_facts.openstack_servers }}"
