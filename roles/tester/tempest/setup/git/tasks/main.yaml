- name: Install pip
  become: yes
  command: "easy_install pip"

- name: Install devel packages for package build dependencies
  become: yes
  yum:
      name: "{{ item }}"
      state: present
  with_items: "{{ tester.setup.packages }}"

- name: Clone downstream tempest
  git:
      repo: "{{ tester.setup.downstream_tempest.repo }}"
      dest: "{{ tester.setup.downstream_tempest.dest_dir }}"
  when: tester.local_dir is not defined

- name: Clone upstream tempest
  git:
      repo: "{{ tester.setup.repo }}"
      dest: "{{ tester.dir }}"
  register: tempest_repo
  when: tester.local_dir is not defined

- name: Install tempest from change
  synchronize: dest={{ tester.dir }} src={{ tester.local_dir }}/
                 archive=no recursive=yes perms=yes links=yes
  register: tempest_local_dir
  when: tester.local_dir is defined

- name: Print repo version
  command: "git log -1 --pretty=format:%h"
  args:
      chdir: "{{ tester.dir }}"
  register: tempest_repo_version

- debug: "msg='Build mark: tempest={{ tempest_repo_version.stdout }}'"

# Using downstream script to create a virtual environment in the tempest US dir and also install the US requirements
# This should be replaced with Ansible's built-in virtualenv module
- name: install virtualenv
  shell: "export TOOLS_PATH=$PWD/{{ tester.dir }}; python $PWD/{{ tester.downstream_dir }}/tools/install_venv.py --no-site-packages"
  when: tempest_repo|changed or tempest_local_dir|changed

- name: Install extra pip requirements
  pip:
      name: "{{ item }}"
      state: present
      virtualenv: "~/{{ tester.dir }}/.venv"
  with_items: "{{ tester.setup.pip_packages }}"
  when: tempest_repo|changed or tempest_local_dir|changed

- name: Save plugins dict to a variable
  set_fact:
    tempest_plugins: "{{ item.value.plugins | default({}) }}"
  with_dict: "{{ tester.tests }}"

- debug: "msg=Tempest Plugins:\n{{ tempest_plugins }}"

- name: Clone tempest plugins
  git:
      repo: "{{ item.value.repo }}"
      dest: "{{ item.value.dest_dir }}"
      version: "{{ item.value.version | default('HEAD') }}"
  with_dict: "{{ tempest_plugins | default({}) }}"

- name: Install tempest plugins
  shell: "~/{{ tester.dir }}/tools/with_venv.sh pip install -r requirements.txt; ~/{{ tester.dir }}/tools/with_venv.sh pip install -r test-requirements.txt; ~/{{ tester.dir }}/tools/with_venv.sh python setup.py develop"
  args:
      chdir: "{{ item.value.dest_dir }}"
  with_dict: "{{ tempest_plugins | default({}) }}"
