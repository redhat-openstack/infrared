{
  "comments": [
    {
      "key": {
        "uuid": "55bd7690_698f371e",
        "filename": "infrared/common/roles/tls-everywhere/tasks/prepare_freeipa.yml",
        "patchSetId": 3
      },
      "lineNbr": 5,
      "author": {
        "id": 1005097
      },
      "writtenOn": "2020-05-28T14:11:59Z",
      "side": 1,
      "message": "I understand ipv6 support is planned and not there yet, not sure whether this is right approach when mixing with tlsE feature though, considering:\n\nWe have this option in IR:\nNetwork Configuration:\n  --network-protocol NETWORK-PROTOCOL\n                        The overcloud network backend.\n                        Default value: \u0027ipv4\u0027.\n                        Allowed values: [\u0027ipv4\u0027, \u0027ipv6\u0027, \u0027ipv6-all\u0027].\n\nwhich can be passed to: https://github.com/redhat-openstack/infrared/blob/master/infrared/common/roles/tls-everywhere/defaults/main.yml#L4\n\nthat can lead into choosing file public-vips-ipv6.yml that doesn\u0027t exist at this point, possibly failing user with ipv6 deployment after tlsE is being enabled.\n\nI\u0027d be more comfortable to do not fail this way on smth not implemented yet, or if it is really needed then with explanatory \"Not implemented\" message.",
      "revId": "059eac05f773c71cc66debd5800de8862af45fe0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7391d1ef_9aa193cd",
        "filename": "infrared/common/roles/tls-everywhere/tasks/prepare_freeipa.yml",
        "patchSetId": 3
      },
      "lineNbr": 5,
      "author": {
        "id": 1006298
      },
      "writtenOn": "2020-05-30T16:21:17Z",
      "side": 1,
      "message": "Thanks for the feedback Filip, much appreciated.\n\nSo in this case I don\u0027t think this is a big issue and the reason is that today TLS-E and IPv6 not only does not work at *all* but it fails in even more mysterious and odd ways if you try it (there are currently a number of issues in infrared, initscripts, os-net-config and even ovn-dbs)\nActually with this change you\u0027ll get the error of public-vips-ipv6.yaml missing instead of your overcloud randomly timing out, either failing to resolve dns (freeipa listens on external by default and ipv4 tls-e only works because the undercloud is default gw and NATs), or failing to get an ipv6 (https://bugzilla.redhat.com/show_bug.cgi?id\u003d1809601 and https://bugzilla.redhat.com/show_bug.cgi?id\u003d1838239) or failing to create a network on neutron (due to missing ovn fix http://file.rdu.redhat.com/~mbaldess/ovn-ipv6/0001-WIP-Make-the-notify-calls-work-with-IPv6.patch). So I think this should be better than the current status quo?",
      "parentUuid": "55bd7690_698f371e",
      "revId": "059eac05f773c71cc66debd5800de8862af45fe0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a37884b_c12f9411",
        "filename": "infrared/common/roles/tls-everywhere/tasks/prepare_freeipa.yml",
        "patchSetId": 3
      },
      "lineNbr": 5,
      "author": {
        "id": 1005097
      },
      "writtenOn": "2020-06-01T08:59:04Z",
      "side": 1,
      "message": "I am not arguing that, I am looking at this code from perspective of CI job owner having \"--tls-everywhere yes\" enabled, not familiar with the detail that ipv6 is in \"wip\" state and it is known will fail after ~3hrs of deployment on OC stage. Many people (I see ~100 occurences in r-q-j repo) having ipv4 tls jobs now have jobs parametrized - they can switch to ipv6 without knowing (yes, they shouldn\u0027t before they really know what they are doing) but that is not the point.\n\nI am wondering - if TLS+ipv6 is used, could it either fail\n1) as soonest as possible in flow: plugins/tripleo-undercloud/tls_everywhere.yml\n+ with meaningful message that fails right away and does not let people doing that go thru one more long (OC) stage:\n# E.g. playbook using fail step right there\n- fail:\n    msg: Do not deploy ipv6+tlsE, it is WIP - failing now!\n  when: somelogictogather(e.g. uc.network_cidr is ipv4) and uc.tls is enabled\n\n2) right away when IR OC plugin is executed: not sure whether IR\u0027s argparse has finally the capability of mutual exclusion of parameters, hopefully yes - lets check with #rhos-infrared core maintainers on this (e.g. \ngroup \u003d parser.add_mutually_exclusive_group() feature)\n\n3) If nothing above - I do not think the implicit failure explains it to people above^. I\u0027d be more confortable with fail msg as above why this is done since for people seing \"public-vips-ipv6.yaml missing\" msg looks like it is some IR issue (maybe smbd deleted smth in current master, that can be broken in each second every day).\n\nOn the other hand if you think there is so wide awareness throughout DFGs that mentioned combination producing implicit error msg for them will be quickly recognized as (theirs) user\u0027s clear param misconfiguration, then I guess lets proceed here. I am not sure whether it would be obvious to me.",
      "parentUuid": "7391d1ef_9aa193cd",
      "revId": "059eac05f773c71cc66debd5800de8862af45fe0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "17668a11_1393c42c",
        "filename": "infrared/common/roles/tls-everywhere/tasks/prepare_overcloud.yml",
        "patchSetId": 3
      },
      "lineNbr": 5,
      "author": {
        "id": 1005097
      },
      "writtenOn": "2020-05-28T14:11:59Z",
      "side": 1,
      "message": "ditto",
      "revId": "059eac05f773c71cc66debd5800de8862af45fe0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}