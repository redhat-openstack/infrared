{
  "comments": [
    {
      "key": {
        "uuid": "aadc11ff_0a96ea70",
        "filename": "docs/source/tripleo-overcloud.rst",
        "patchSetId": 11
      },
      "lineNbr": 130,
      "author": {
        "id": 1004057
      },
      "writtenOn": "2017-07-12T06:40:08Z",
      "side": 1,
      "message": "Please change to \u0027build\u0027",
      "range": {
        "startLine": 130,
        "startChar": 4,
        "endLine": 130,
        "endChar": 14
      },
      "revId": "5471ad59eb49cf49bd3ae0f6f64a0e41293e245c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b7d4e5a0_b427267c",
        "filename": "docs/source/tripleo-overcloud.rst",
        "patchSetId": 11
      },
      "lineNbr": 134,
      "author": {
        "id": 1004057
      },
      "writtenOn": "2017-07-12T06:40:08Z",
      "side": 1,
      "message": "Please change to \u0027build\u0027",
      "range": {
        "startLine": 134,
        "startChar": 48,
        "endLine": 134,
        "endChar": 56
      },
      "revId": "5471ad59eb49cf49bd3ae0f6f64a0e41293e245c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1979cd41_e0083f0c",
        "filename": "infrared/core/inspector/inspector.py",
        "patchSetId": 11
      },
      "lineNbr": 109,
      "author": {
        "id": 1004057
      },
      "writtenOn": "2017-07-12T06:40:08Z",
      "side": 1,
      "message": "None is the default value of \u0027get\u0027",
      "range": {
        "startLine": 109,
        "startChar": 40,
        "endLine": 109,
        "endChar": 44
      },
      "revId": "5471ad59eb49cf49bd3ae0f6f64a0e41293e245c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4148a799_b5a4138c",
        "filename": "infrared/core/inspector/inspector.py",
        "patchSetId": 11
      },
      "lineNbr": 300,
      "author": {
        "id": 1004057
      },
      "writtenOn": "2017-07-12T06:40:08Z",
      "side": 1,
      "message": "This inner method isn\u0027t needed here.\n(One line method that being called only once)",
      "range": {
        "startLine": 296,
        "startChar": 8,
        "endLine": 300,
        "endChar": 61
      },
      "revId": "5471ad59eb49cf49bd3ae0f6f64a0e41293e245c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30765759_016210c3",
        "filename": "infrared/core/inspector/inspector.py",
        "patchSetId": 11
      },
      "lineNbr": 320,
      "author": {
        "id": 1004057
      },
      "writtenOn": "2017-07-12T06:40:08Z",
      "side": 1,
      "message": "for deprecated, deprecates in self.get_deprecated_args().iteritems():\n  for input_args in (answer_file_args, cli_args):\n    if deprecated in input_args:\n      LOG.warning(\"[{}] Argument \u0027{}\u0027 was deprecated, [{}] Argument \u0027{}\u0027 was deprecated, please use \u0027{}\u0027.\".format(command_name, deprecated, deprecated_by))\n      input_args[deprecates] \u003d input_args[deprecated]\n      del(input_args[deprecated]\n\n* I have probably missed something but the idea should be clear (and you should never have a duplication of the same code)\n\n* What will happen when the user provides both, the deprecated and the deprecates arguments? please add a check for that and decide what to do in such case (personally, I think the execution should be failed with a proper message)",
      "range": {
        "startLine": 304,
        "startChar": 8,
        "endLine": 320,
        "endChar": 64
      },
      "revId": "5471ad59eb49cf49bd3ae0f6f64a0e41293e245c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d8cd7bee_f5d0b88d",
        "filename": "tests/test_execute.py",
        "patchSetId": 11
      },
      "lineNbr": 628,
      "author": {
        "id": 1004057
      },
      "writtenOn": "2017-07-12T06:40:08Z",
      "side": 1,
      "message": "This has been checked already in the two asserts above.",
      "range": {
        "startLine": 628,
        "startChar": 4,
        "endLine": 628,
        "endChar": 64
      },
      "revId": "5471ad59eb49cf49bd3ae0f6f64a0e41293e245c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}