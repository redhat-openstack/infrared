---
- block:
  - name: Install deltarpm
    become: yes
    package:
      name: 'deltarpm'
      state: present
    when:
        - ansible_distribution in ['CentOS', 'RedHat']
        - ansible_distribution_major_version < '8'

  - name: Install RHEL7 packages
    become: yes
    package:
      name:
        - 'net-tools'
        - "{{ freeipa_rhel7_epel_repo_url }}"
      state: present
    when:
        - ansible_distribution in ['CentOS', 'RedHat']
        - ansible_distribution_major_version == '7'

  - name: Install RHEL8 packages
    become: yes
    package:
      name:
        - 'net-tools'
        - 'iptables'
        - 'iptables-services'
      state: present
    when:
        - ansible_distribution in ['CentOS', 'RedHat']
        - ansible_distribution_major_version == '8'

  - name: Enable additional repository for RHEL7
    become: yes
    command: yum-config-manager --enable {{ item }}
    loop: "{{ freeipa_rhel7_additional_repos }}"
    when:
        - ansible_distribution in ['CentOS', 'RedHat']
        - ansible_distribution_major_version == '7'

  - name: Enable additional dnf modules for RHEL8
    become: yes
    command: dnf module enable {{ item }} -y
    loop: "{{ freeipa_rhel8_dnf_modules }}"
    when:
        - ansible_distribution in ['CentOS', 'RedHat']
        - ansible_distribution_major_version == '8'

  - name: Install Red Hat CA
    become: yes
    shell: |
        update-ca-trust enable
        curl https://password.corp.redhat.com/RH-IT-Root-CA.crt -o /etc/pki/ca-trust/source/anchors/2015-RH-IT-Root-CA.pem
        update-ca-trust extract

  - name: Update repos
    become: yes
    command: yum clean all

  - name: Enable iptables service for RHEL8
    become: yes
    service:
        name: iptables
        enabled: yes
        state: restarted
    when:
        - ansible_distribution in ['CentOS', 'RedHat']
        - ansible_distribution_major_version == '8'

  - name: Download freeipa setup script
    get_url:
       url: "{{ freeipa_setup_script }}"
       dest: "{{ freeipa_working_dir }}/freeipa_setup.sh"
       mode: 775

  - name: Generate inventory file
    template:
        dest: "{{ freeipa_working_dir }}/freeipa-setup.env"
        src: freeipa-setup.env.j2
        force: yes

  - name: Add w/a for ipv6 link local
    lineinfile:
        path: "{{ freeipa_working_dir }}/freeipa_setup.sh"
        insertafter: '^# Set up FreeIPA'
        line: "sed -i '/^nameserver fe80:.*./d' /etc/resolv.conf"
        state: present

  - name: Execute freeipa script
    become: yes
    command: "{{ freeipa_working_dir }}/freeipa_setup.sh"
    register: freeipa_setup

  - name: Configure FreeIPA to publish Master CRL at start
    become: yes
    lineinfile:
        path: /etc/pki/pki-tomcat/ca/CS.cfg
        regexp: '^ca.crl.MasterCRL.publishOnStart=(.*)$'
        line: 'ca.crl.MasterCRL.publishOnStart=true'

  - name: Configure FreeIPA DNS zones for overcloud public_vip
    become: yes
    shell: |
        echo {{ freeipa_admin_password }}|kinit admin
        ipa dnszone-add ctlplane.{{ freeipa_cloud_domain }}
        ipa dnszone-add internalapi.{{ freeipa_cloud_domain }}
        ipa dnszone-add storage.{{ freeipa_cloud_domain }}
        ipa dnszone-add storagemgmt.{{ freeipa_cloud_domain }}
    register: overcloud_dns_entries

  - name: Configure FreeIPA DNS ipv4 records for overcloud public_vip
    become: yes
    shell: |
        echo {{ freeipa_admin_password }}|kinit admin
        ipa dnsrecord-add {{ freeipa_cloud_domain }} overcloud --a-rec 10.0.0.101
        ipa dnsrecord-add ctlplane.{{ freeipa_cloud_domain }} overcloud --a-rec 192.168.24.101
        ipa dnsrecord-add internalapi.{{ freeipa_cloud_domain }} overcloud --a-rec 172.17.1.101
        ipa dnsrecord-add storage.{{ freeipa_cloud_domain }} overcloud --a-rec 172.17.3.101
        ipa dnsrecord-add storagemgmt.{{ freeipa_cloud_domain }} overcloud --a-rec 172.17.4.101
    register: overcloud_dns_entries
    when: freeipa_network_protocol == 'ipv4'

  - name: Configure FreeIPA DNS ipv6 records for overcloud public_vip
    become: yes
    shell: |
        echo {{ freeipa_admin_password }}|kinit admin
        ipa dnsrecord-add {{ freeipa_cloud_domain }} overcloud --aaaa-rec 2620:52:0:13b8:5054:ff:fe3e:a9
        ipa dnsrecord-add ctlplane.{{ freeipa_cloud_domain }} overcloud --a-rec 192.168.24.101
        ipa dnsrecord-add internalapi.{{ freeipa_cloud_domain }} overcloud --aaaa-rec fd00:fd00:fd00:2000:aaaa:aaaa:ffff:fffd
        ipa dnsrecord-add storage.{{ freeipa_cloud_domain }} overcloud --aaaa-rec fd00:fd00:fd00:3000:aaaa:aaaa:ffff:fffd
        ipa dnsrecord-add storagemgmt.{{ freeipa_cloud_domain }} overcloud --aaaa-rec fd00:fd00:fd00:4000:aaaa:aaaa:ffff:fffd
    register: overcloud_dns_entries
    when: freeipa_network_protocol != 'ipv4'

  - name: Configure FreeIPA DNS Forwarder from hypervisor
    become: yes
    shell: |
        echo {{ freeipa_admin_password }}|kinit admin
        ipa dnsconfig-mod --forwarder={{ hostvars['hypervisor'].ansible_dns.nameservers[0] }} --forward-policy=only
    when: freeipa_forwarder == 'hypervisor'

  - name: Configure FreeIPA DNS Forwarder from paramater
    become: yes
    shell: |
        echo {{ freeipa_admin_password }}|kinit admin
        ipa dnsconfig-mod --forwarder={{ freeipa_forwarder }} --forward-policy=only
    when: freeipa_forwarder != 'hypervisor'

  - name: Check for existance of /etc/sysconfig/iptables file
    stat:
       path: /etc/sysconfig/iptables
    register: iptables_file

  - block:
    - name: Assue DNS query isn't blocked by iptables
      become: yes
      iptables:
          action: insert
          comment: "Allow DNS query"
          table: filter
          chain: INPUT
          jump: ACCEPT
          protocol: "udp"
          destination_port: 53

    - name: Save iptables rules
      become: yes
      shell: service iptables save
    when: iptables_file.stat.exists

  - name: Restart FreeIPA server
    become: yes
    service:
        name: ipa
        state: restarted

  - name: Create systemd resolv.conf
    become: yes
    copy:
        dest: "/usr/lib/systemd/resolv.conf"
        content: |
            search {{ freeipa_cloud_domain }}
            nameserver 127.0.0.1

  - name: Create a symbolic link of systemd resolv.conf
    become: yes
    file:
        src: "/usr/lib/systemd/resolv.conf"
        dest: "/etc/resolv.conf"
        owner: root
        group: root
        state: link
        force: yes

  - name: Update /etc/hosts with undercloud's details
    become: yes
    lineinfile:
        dest: "/etc/hosts"
        line: "{{ freeipa_undercloud_ipaddress }} {{ groups['undercloud'][0] }}.{{ freeipa_cloud_domain }} {{ groups['undercloud'][0] }}"
        state: present
  delegate_to: "{{ freeipa_node }}"

