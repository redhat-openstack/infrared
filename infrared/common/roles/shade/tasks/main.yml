---
- name: Install binary requirements
  become: yes
  package:
    name:
      - gcc
      - "{{ (ansible_distribution in ['CentOS', 'RedHat'] and ansible_distribution_major_version | int < 8) | ternary('python3-devel', 'python-devel') }}"
      - "{{ (ansible_distribution in ['CentOS', 'RedHat'] and ansible_distribution_major_version | int < 8) | ternary('python3-virtualenv', 'python-virtualenv') }}"
    state: present

- name: Collect the version of virtualenv
  shell: |
    virtualenv --version 2>/dev/null || echo 'none'
  args:
    executable: /bin/bash
  changed_when: false
  failed_when: false
  register: _virtualenv_version

- name: Fail when required virtualenv version is not present
  fail:
    msg: >-
      The required virtualenv version is not present.
      The minimum version of 1.10 is required, but
      {{ _virtualenv_version.stdout }} is installed.
  when:
    - ((_virtualenv_version.stdout | trim) == 'none') or
      ((_virtualenv_version.stdout | trim) is version('1.10', '<'))

# We deliberately avoid downloading newer versions of pip,
# setuptools and wheel when creating the virtualenv. By
# doing this we avoid breaking every time one of them does
# a new release.
# We also ensure that there are no site packages, because
# we do not need them.
- name: Set extra virtualenv parameters
  set_fact:
    _venv_create_extra_options: >-
      {{ ((_virtualenv_version.stdout | trim) is version('14.0.0', '<')) | ternary('--never-download', '--no-download') }}
      {{ ((_virtualenv_version.stdout | trim) is version('1.7.0', '<')) | ternary('--no-site-packages', '') }}

# required to avoid any conflicts in venv with
# different packages versions
- name: Cleanup venv
  become: yes
  file:
    state: absent
    path: "{{ shade_path_venv }}"

- name: Create venv
  pip:
    # This is the version range which includes
    # py2 and py3 support and also is usable by
    # the ansible openstack modules.
    name: "openstacksdk>=0.29.0,<0.40.0"
    virtualenv: "{{ shade_path_venv }}"
    virtualenv_command: "/usr/bin/virtualenv {{ _venv_create_extra_options }}"
