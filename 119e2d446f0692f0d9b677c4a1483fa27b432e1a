{
  "comments": [
    {
      "key": {
        "uuid": "7ad25aa2_fc3a2f98",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1005170
      },
      "writtenOn": "2018-09-14T19:21:42Z",
      "side": 1,
      "message": "Not always 0 but because it is putting the count in the facts N+1 based on length of the list in round N ... it has a good chance of being off because it won\u0027t count the last node in the list for selinux_problems count.",
      "range": {
        "startLine": 7,
        "startChar": 31,
        "endLine": 7,
        "endChar": 48
      },
      "revId": "119e2d446f0692f0d9b677c4a1483fa27b432e1a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e40e87f3_446edede",
        "filename": "plugins/collect-logs/main.yml",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1005097
      },
      "writtenOn": "2018-09-17T10:26:27Z",
      "side": 1,
      "message": "Considering hostvars[item][\u0027selinux_problems_found\u0027] was already computed and added as part of selinux_problems_list var, won\u0027t this mean that now the amount of selinux_problems will be added twice per one iteration (node), since selinux_problems depends on lenght of selinux_problems_list?",
      "revId": "119e2d446f0692f0d9b677c4a1483fa27b432e1a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b56422f0_14c08261",
        "filename": "plugins/collect-logs/main.yml",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1001189
      },
      "writtenOn": "2018-09-17T14:10:06Z",
      "side": 1,
      "message": "maybe we can completely drop the \u0027_list\u0027 var,\nand do it same way as segfault_problems and oom_killer_problems counting is done just here below\n\n(to avoid confusion here, and the now-not-working referencing of variable set in same \u0027set_fact\u0027 iteration)",
      "revId": "119e2d446f0692f0d9b677c4a1483fa27b432e1a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}