{
  "comments": [
    {
      "key": {
        "uuid": "5e2d5765_128b55d5",
        "filename": "ansible.cfg.example",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 1004057
      },
      "writtenOn": "2018-02-08T15:35:57Z",
      "side": 1,
      "message": "Looks like this parameter should be in the \"ssh_connection\" section\nhttp://docs.ansible.com/ansible/latest/intro_configuration.html",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 10
      },
      "revId": "ebe0e26e2d8d10c5ca492be69ad349f54ec4eb0a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7d8f3a39_e3fd1ab5",
        "filename": "docs/examples/ansible.cfg",
        "patchSetId": 4
      },
      "lineNbr": 5,
      "author": {
        "id": 1004057
      },
      "writtenOn": "2018-02-08T15:35:57Z",
      "side": 1,
      "message": "should be in \"ssh_connection\"?",
      "range": {
        "startLine": 5,
        "startChar": 0,
        "endLine": 5,
        "endChar": 10
      },
      "revId": "ebe0e26e2d8d10c5ca492be69ad349f54ec4eb0a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1d2c3e3e_c3257ae4",
        "filename": "docs/source/setup.rst",
        "patchSetId": 4
      },
      "lineNbr": 90,
      "author": {
        "id": 1004057
      },
      "writtenOn": "2018-02-08T15:35:57Z",
      "side": 1,
      "message": "requires?",
      "range": {
        "startLine": 90,
        "startChar": 9,
        "endLine": 90,
        "endChar": 16
      },
      "revId": "ebe0e26e2d8d10c5ca492be69ad349f54ec4eb0a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bd011811_cb091886",
        "filename": "docs/source/setup.rst",
        "patchSetId": 4
      },
      "lineNbr": 90,
      "author": {
        "id": 1004057
      },
      "writtenOn": "2018-02-08T15:35:57Z",
      "side": 1,
      "message": "Ansible configuration file (ansible.cfg) and will try to locate one in the following order:\n\n(But don\u0027t trust me here with my poor English...)",
      "range": {
        "startLine": 90,
        "startChar": 25,
        "endLine": 90,
        "endChar": 36
      },
      "revId": "ebe0e26e2d8d10c5ca492be69ad349f54ec4eb0a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cfcdfd57_42c56159",
        "filename": "infrared/core/services/__init__.py",
        "patchSetId": 4
      },
      "lineNbr": 66,
      "author": {
        "id": 1004057
      },
      "writtenOn": "2018-02-08T15:35:57Z",
      "side": 1,
      "message": "Although it\u0027s very clear what this method does, it will be nice to have one line docstring here (with the parameter)",
      "range": {
        "startLine": 66,
        "startChar": 4,
        "endLine": 66,
        "endChar": 48
      },
      "revId": "ebe0e26e2d8d10c5ca492be69ad349f54ec4eb0a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f3a3d12f_71fcb8aa",
        "filename": "infrared/core/services/__init__.py",
        "patchSetId": 4
      },
      "lineNbr": 82,
      "author": {
        "id": 1004057
      },
      "writtenOn": "2018-02-08T15:35:57Z",
      "side": 1,
      "message": "Looks like there is a use of the same pattern here.\nwhy not iterate over a sequence and to return the first location that found?",
      "range": {
        "startLine": 69,
        "startChar": 8,
        "endLine": 82,
        "endChar": 45
      },
      "revId": "ebe0e26e2d8d10c5ca492be69ad349f54ec4eb0a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ef060b64_8bc25361",
        "filename": "infrared/core/services/ansible_config.py",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 1004057
      },
      "writtenOn": "2018-02-08T15:35:57Z",
      "side": 1,
      "message": "I think it\u0027ll be better to define a default value (None) to this param and to fail the execution if the file is not found. This will help to prevent cases that user miss the warning message and the execution run with the default conf file without the user noticed it.",
      "range": {
        "startLine": 26,
        "startChar": 23,
        "endLine": 26,
        "endChar": 42
      },
      "revId": "ebe0e26e2d8d10c5ca492be69ad349f54ec4eb0a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8eb5d707_f15ed4a1",
        "filename": "infrared/core/services/ansible_config.py",
        "patchSetId": 4
      },
      "lineNbr": 40,
      "author": {
        "id": 1004057
      },
      "writtenOn": "2018-02-08T15:35:57Z",
      "side": 1,
      "message": "move the docstring header to be the first line.\n\nIf there is a body also, than leave one line space and then write the docstring body.\n(for all methods)",
      "range": {
        "startLine": 40,
        "startChar": 8,
        "endLine": 40,
        "endChar": 34
      },
      "revId": "ebe0e26e2d8d10c5ca492be69ad349f54ec4eb0a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "962d506a_a650810d",
        "filename": "infrared/core/services/ansible_config.py",
        "patchSetId": 4
      },
      "lineNbr": 48,
      "author": {
        "id": 1004057
      },
      "writtenOn": "2018-02-08T15:35:57Z",
      "side": 1,
      "message": "it\u0027s not a must, but try to keep the length of the file no more than 79 chars\n\nhttps://www.python.org/dev/peps/pep-0008/#maximum-line-length",
      "range": {
        "startLine": 48,
        "startChar": 12,
        "endLine": 48,
        "endChar": 97
      },
      "revId": "ebe0e26e2d8d10c5ca492be69ad349f54ec4eb0a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b239d3e2_754ef340",
        "filename": "infrared/core/utils/validators.py",
        "patchSetId": 4
      },
      "lineNbr": 199,
      "author": {
        "id": 1004057
      },
      "writtenOn": "2018-02-08T15:35:57Z",
      "side": 1,
      "message": "1. line length.\n2. What if someone uses the master branch?",
      "range": {
        "startLine": 199,
        "startChar": 17,
        "endLine": 199,
        "endChar": 92
      },
      "revId": "ebe0e26e2d8d10c5ca492be69ad349f54ec4eb0a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb77aabb_94cb9783",
        "filename": "tests/test_core_config.py",
        "patchSetId": 4
      },
      "lineNbr": 14,
      "author": {
        "id": 1004057
      },
      "writtenOn": "2018-02-08T15:35:57Z",
      "side": 1,
      "message": "Don\u0027t you want to add a dedicated test for the configuration file which checks how IR work with conf file from different sources?",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 14,
        "endChar": 42
      },
      "revId": "ebe0e26e2d8d10c5ca492be69ad349f54ec4eb0a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}